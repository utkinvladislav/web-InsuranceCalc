<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/</description>
	<atom:link rel="self" href="http://planeteclipse.org/rss20.xml" type="application/rss+xml"/>

<item>
	<title>Eclipse Ditto: Digital twins of devices connected via LoRaWAN to TTN</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2020-04-16-connecting-to-ttn-via-mqtt.html</guid>
	<link>https://www.eclipse.org/ditto/2020-04-16-connecting-to-ttn-via-mqtt.html</link>
	<description>&lt;figure&gt;&lt;img alt=&quot;TTVC logo&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/2020-04-16-Logo_TTVC_color.png&quot; style=&quot;padding-left: 1em; float: right;&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;A workshop of the &lt;a href=&quot;https://www.thethingsnetwork.org/article/the-things-virtual-conference&quot;&gt;2020 The Things Virtual Conference&lt;/a&gt;
on April 16th 2020 is/was about how to connect Eclipse Ditto to “The Things Network” via TTN’s MQTT broker in order to 
automatically update digital twins of devices connected via LoRaWAN to the TTN backend.&lt;/p&gt;

&lt;p&gt;You can find the slides &lt;a href=&quot;https://www.eclipse.org/ditto/slides/2020_04_16-ttn-virtual-conference/index.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This blogpost helps setting up this kind of connection and shall also be used as a step-by-step tutorial during
 the workshop.&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;p&gt;You’ll need:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;an operating system capable of running Docker (best use a Linux distribution)&lt;/li&gt;
  &lt;li&gt;4 CPU cores and 4GB of RAM are advised (less can work, but the Ditto cluster startup is more fragile then)&lt;/li&gt;
  &lt;li&gt;to have installed: &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, you’ll need a TTN account and an existing application with at least one device if you want to follow the hands-on
part and want to create digital twins of your devices connected to TTN.&lt;/p&gt;

&lt;h2 id=&quot;preparation&quot;&gt;Preparation&lt;/h2&gt;

&lt;p&gt;Please follow these initial preparation steps (if you don’t already have Docker and Docker Compose installed).&lt;/p&gt;

&lt;p&gt;When you have access to a Kubernetes cluster and already have worked with &lt;a href=&quot;https://helm.sh&quot;&gt;Helm&lt;/a&gt; (the package manager
for Kubernetes), you can alternatively install Ditto via its official 
&lt;a href=&quot;https://hub.helm.sh/charts/eclipse-iot/ditto&quot;&gt;Helm chart&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;install-docker&quot;&gt;Install Docker&lt;/h3&gt;

&lt;p&gt;Assumption: You’re running a Debian or Ubuntu based Linux distribution containing the &lt;code class=&quot;highlighter-rouge&quot;&gt;apt&lt;/code&gt; package manager.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt install docker.io
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service docker start
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;usermod &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-G&lt;/span&gt; docker &amp;lt;your-username&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Logout and login again so that your user gets the “docker” group.&lt;/p&gt;

&lt;h3 id=&quot;install-docker-compose&quot;&gt;Install Docker Compose&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/compose/install/&quot;&gt;Follow the installation guide here&lt;/a&gt;, in short:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/docker/compose/releases/download/1.25.4/docker-compose-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;uname &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;uname &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /usr/local/bin/docker-compose
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;chmod +x /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;clone-ditto-codebase&quot;&gt;Clone Ditto codebase&lt;/h3&gt;

&lt;p&gt;That is required to get the &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yaml&lt;/code&gt; file and other resources required to run Ditto with Docker Compose.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone &lt;span class=&quot;nt&quot;&gt;--depth&lt;/span&gt; 1 https://github.com/eclipse/ditto.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;startup-ditto-cluster&quot;&gt;Startup Ditto cluster&lt;/h2&gt;

&lt;p&gt;Change directory into the just cloned git repository - optionally adjust the &lt;code class=&quot;highlighter-rouge&quot;&gt;DITTO_EXTERNAL_PORT&lt;/code&gt; variable to where 
Ditto is reachable after the start:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ditto/deployment/docker/
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DITTO_EXTERNAL_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80
docker-compose up &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Verify that Ditto is running:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-compose ps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The output should look similar like this:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;         Name                       Command               State           Ports         
----------------------------------------------------------------------------------------
docker_concierge_1       /sbin/tini -- java -jar st ...   Up      8080/tcp              
docker_connectivity_1    /sbin/tini -- java -jar st ...   Up      8080/tcp              
docker_gateway_1         /sbin/tini -- java -Dditto ...   Up      0.0.0.0:8081-&amp;gt;8080/tcp
docker_mongodb_1         docker-entrypoint.sh mongo ...   Up      27017/tcp             
docker_nginx_1           nginx -g daemon off;             Up      0.0.0.0:80-&amp;gt;80/tcp    
docker_policies_1        /sbin/tini -- java -jar st ...   Up      8080/tcp              
docker_swagger-ui_1      nginx -g daemon off;             Up      80/tcp, 8080/tcp      
docker_things-search_1   /sbin/tini -- java -jar st ...   Up      8080/tcp              
docker_things_1          /sbin/tini -- java -jar st ...   Up      8080/tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Verify that your Ditto cluster is healthy. Please give it ~1 minute in order to properly start up.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; devops:foobar http://localhost:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DITTO_EXTERNAL_PORT&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/status/health
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The returned output should start with:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;label&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;roles&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If your Ditto cluster has trouble starting up (e.g. because you only have less CPU cores than advised), try the following
startup command instead:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-compose start mongodb&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sleep 30&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; docker-compose start policies things&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sleep 60&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; docker-compose start concierge&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sleep 60&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; docker-compose start things-search&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sleep 60&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; docker-compose start connectivity&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sleep 60&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; docker-compose up &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;configure-connection-to-ttn-mqtt-broker&quot;&gt;Configure connection to TTN MQTT broker&lt;/h2&gt;

&lt;p&gt;The Things Network provides a built in MQTT broker which you can connect to using your TTN application credentials.
For a more detailed description on that topic, please refer to the 
&lt;a href=&quot;https://www.thethingsnetwork.org/docs/applications/mqtt/quick-start.html&quot;&gt;TTN MQTT Quick Start&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Eclipse Ditto can establish connections to MQTT brokers. This is a schematic picture of what we now will do:&lt;/p&gt;

&lt;figure&gt;&lt;img alt=&quot;TTN to Ditto via MQTT&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/slides/images/ttn-ditto-via-mqtt.png&quot; style=&quot;padding-left: 1em;&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;In order to connect to your own TTN application, perform the following steps.&lt;/p&gt;

&lt;p&gt;You can find the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;AppId&amp;gt;&lt;/code&gt; (application ID) and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;AppKey&amp;gt;&lt;/code&gt; (access key) in your TTN console of your application.
For &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Region&amp;gt;&lt;/code&gt;, e.g. choose &lt;code class=&quot;highlighter-rouge&quot;&gt;'eu'&lt;/code&gt; when your application is in handled by the Handler ‘ttn-handler-eu’.&lt;/p&gt;

&lt;p&gt;Please export your application’s credentials locally to environment variables:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TTN_REGION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;Region&amp;gt;'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TTN_APP_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;AppID&amp;gt;'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TTN_APP_KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;AppKey&amp;gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After having done that, you can already create the connection of Ditto to the TTN MQTT broker:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; devops:foobar &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{
    &quot;targetActorSelection&quot;: &quot;/system/sharding/connection&quot;,
    &quot;headers&quot;: {
        &quot;aggregate&quot;: false
    },
    &quot;piggybackCommand&quot;: {
        &quot;type&quot;: &quot;connectivity.commands:createConnection&quot;,
        &quot;connection&quot;: {
            &quot;id&quot;: &quot;ttn-connection-via-mqtt&quot;,
            &quot;name&quot;: &quot;TTN-MQTT&quot;,
            &quot;connectionType&quot;: &quot;mqtt&quot;,
            &quot;connectionStatus&quot;: &quot;open&quot;,
            &quot;uri&quot;: &quot;tcp://'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TTN_APP_ID&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TTN_APP_KEY&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'@'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TTN_REGION&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.thethings.network:1883&quot;,
            &quot;failoverEnabled&quot;: true,
            &quot;clientCount&quot;: 1,
            &quot;validateCertificates&quot;: false,
            &quot;sources&quot;: [{
                &quot;addresses&quot;: [
                    &quot;'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TTN_APP_ID&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/devices/+/up&quot;
                ],
                &quot;consumerCount&quot;: 1,
                &quot;qos&quot;: 0,
                &quot;authorizationContext&quot;: [
                  &quot;pre-authenticated:ttn-connection&quot;
                ],
                &quot;enforcement&quot;: {
                    &quot;input&quot;: &quot;{{ source:address }}&quot;,
                    &quot;filters&quot;: [
                        &quot;'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TTN_APP_ID&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/devices/{{ thing:name }}/up&quot;
                    ]
                },
                &quot;replyTarget&quot;: {
                    &quot;enabled&quot;: false
                },
                &quot;payloadMapping&quot;: [
                    &quot;ttn-demo-mapping&quot;
                ]
            }],
            &quot;mappingDefinitions&quot;: {
                &quot;ttn-demo-mapping&quot;: {
                     &quot;mappingEngine&quot;: &quot;JavaScript&quot;,
                     &quot;options&quot;: {
                         &quot;incomingScript&quot;: &quot;function mapToDittoProtocolMsg(\n  headers,\n  textPayload,\n  bytePayload,\n  contentType\n) {\n\n  let ttnJson = JSON.parse(textPayload);\n  let deviceId = ttnJson['&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dev_id'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'];\n  let payloadFields = ttnJson['&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'payload_fields'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'];\n  \n  let attributesObj = {\n    hardwareSerial: ttnJson['&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hardware_serial'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'],\n    ttnCounter: ttnJson['&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'counter'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;']\n  };\n  \n  let featuresObj = {\n    temperature: {\n      properties: {\n        value: payloadFields['&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'temperature_7'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;']\n      }\n    },\n    pressure: {\n      properties: {\n        value: payloadFields['&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'barometric_pressure_10'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;']\n      }\n    },\n    humidity: {\n      properties: {\n        value: payloadFields['&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'relative_humidity_8'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;']\n      }\n    }\n  };\n  \n  let thing = {\n    attributes: attributesObj,\n    features: featuresObj\n  };\n  \n  let dittoHeaders = {\n    '&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'response-required'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;': false,\n    '&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'If-Match'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;': '&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'\n  };\n\n  return Ditto.buildDittoProtocolMsg(\n    '&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'org.eclipse.ditto.ttn.demo'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;',\n    deviceId,\n    '&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'things'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;',\n    '&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'twin'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;',\n    '&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'commands'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;',\n    '&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'modify'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;',\n    '&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;'&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;',\n    dittoHeaders,\n    thing\n  );\n}&quot;,
                         &quot;outgoingScript&quot;: &quot;function mapFromDittoProtocolMsg() { return null; }&quot;,
                         &quot;loadBytebufferJS&quot;: &quot;false&quot;,
                         &quot;loadLongJS&quot;: &quot;false&quot;
                     }
                }
            }
        }
    }
}'&lt;/span&gt; http://localhost:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DITTO_EXTERNAL_PORT&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/devops/piggyback/connectivity?timeout&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Explanation - what is done here:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;using curl with the &lt;code class=&quot;highlighter-rouge&quot;&gt;devops&lt;/code&gt; (admin) user and its initial password &lt;code class=&quot;highlighter-rouge&quot;&gt;foobar&lt;/code&gt; we create a connection of type &lt;code class=&quot;highlighter-rouge&quot;&gt;mqtt&lt;/code&gt; 
(you can find further information on that in Ditto’s &lt;a href=&quot;https://www.eclipse.org/ditto/connectivity-protocol-bindings-mqtt.html&quot;&gt;MQTT docs&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;we use the TTN application credentials in the configured &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;uri&quot;&lt;/code&gt;, connect via plain TCP 
(SSL is also possible but in this case a little more complicated as the server certificate of the TTN MQTT broker
 would have to be imported)&lt;/li&gt;
  &lt;li&gt;we add an entry in &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;sources&quot;&lt;/code&gt;:
    &lt;ul&gt;
      &lt;li&gt;defining the MQTT topic (&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;addresses&quot;&lt;/code&gt;) to subscribe to&lt;/li&gt;
      &lt;li&gt;specifying in which &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;authorizationContext&quot;&lt;/code&gt; messages from this connection shall be executed&lt;/li&gt;
      &lt;li&gt;defining in the &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;enforcement&quot;&lt;/code&gt; that, based on the MQTT topic, a device may only update the Ditto twin having the same name&lt;/li&gt;
      &lt;li&gt;declaring that a custom payload mapping shall be applied for each incoming message&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;in the &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;mappingDefinitions&quot;&lt;/code&gt; we define the previously used “ttn-demo-mapping” as JavaScript based mapping:
    &lt;ul&gt;
      &lt;li&gt;only an “incoming” script is defined as we don’t handle downstream messages to TTN in this example&lt;/li&gt;
      &lt;li&gt;when you want to understand the script in more depth, please take a look at the &lt;a href=&quot;https://www.eclipse.org/ditto/feed.xml#javascript-payload-mapping-script-in-detail&quot;&gt;details about it&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;alert alert-success&quot;&gt;&lt;i class=&quot;fa fa-check-square-o&quot;&gt;&lt;/i&gt; &lt;b&gt;Tip:&lt;/b&gt; As you have other custom &lt;code class=&quot;highlighter-rouge&quot;&gt;payload_fields&lt;/code&gt; for your TTN devices, please adjust the script 
                             if you want to see the device’s custom payload fields in your Ditto twins.&lt;/div&gt;

&lt;h2 id=&quot;create-a-common-policy-for-the-twins-to-be-created&quot;&gt;Create a common policy for the twins to be created&lt;/h2&gt;

&lt;p&gt;Eclipse Ditto secures each API access to the managed twins by applying authorization of the authenticated user.&lt;br /&gt;
Those “rules” which authenticated user may access which twins are defined in &lt;a href=&quot;https://www.eclipse.org/ditto/basic-policy.html&quot;&gt;Policies&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In order to proceed with our scenario, we create a single Policy which shall be used for all twins we create in a later 
step:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; PUT &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; ditto:ditto &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{
   &quot;policyId&quot;: &quot;org.eclipse.ditto.ttn.demo:twin-policy&quot;,
   &quot;entries&quot;: {
       &quot;USER&quot;: {
           &quot;subjects&quot;: {
              &quot;nginx:ditto&quot;: {
                  &quot;type&quot;: &quot;basic auth user authenticated via nginx&quot;
              }
           },
           &quot;resources&quot;: {
               &quot;thing:/&quot;: {
                   &quot;grant&quot;: [&quot;READ&quot;, &quot;WRITE&quot;],
                   &quot;revoke&quot;: []
               },
               &quot;policy:/&quot;: {
                   &quot;grant&quot;: [&quot;READ&quot;, &quot;WRITE&quot;],
                   &quot;revoke&quot;: []
               },
               &quot;message:/&quot;: {
                   &quot;grant&quot;: [&quot;READ&quot;, &quot;WRITE&quot;],
                   &quot;revoke&quot;: []
               }
           }
       },
       &quot;TTN&quot;: {
           &quot;subjects&quot;: {
              &quot;pre-authenticated:ttn-connection&quot;: {
                  &quot;type&quot;: &quot;used in the connections authorizationContext to the TTN MQTT&quot;
              }
           },
           &quot;resources&quot;: {
               &quot;thing:/&quot;: {
                   &quot;grant&quot;: [&quot;WRITE&quot;],
                   &quot;revoke&quot;: []
               }
           }
       }
   }
}'&lt;/span&gt; http://localhost:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DITTO_EXTERNAL_PORT&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/api/2/policies/org.eclipse.ditto.ttn.demo:twin-policy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Explanation - what is done here:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;we create a new Policy with the ID &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;org.eclipse.ditto.ttn.demo:twin-policy&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;it contains 2 entries:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;USER&quot;&lt;/code&gt;: this Policy entry contains the authorization information of the user of the twin APIs (authenticated via the contained “nginx” acting as reverse proxy). 
 This user may READ+WRITE the things (twins), this created policy and may also send and receive messages.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;TTN&quot;&lt;/code&gt;: this Policy entry contains the authorization information of the connection to the TTN MQTT broker (the subject was configured as &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;authorizationContext&quot;&lt;/code&gt; when we created the connection. 
 This connection may only WRITE (update) the things (twins).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;create-digital-twins&quot;&gt;Create digital twins&lt;/h2&gt;

&lt;p&gt;Now we have everything in place in order to create digital twins for our devices connected to TTN.&lt;/p&gt;

&lt;p&gt;Please export all device ids you want to create digital twins for as comma separated environment variable:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TTN_DEVICE_IDS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;comma-separated-list-of-your-device-ids&amp;gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After having done that, we can already create the twins in Ditto as the &lt;code class=&quot;highlighter-rouge&quot;&gt;ditto&lt;/code&gt; user:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;dev_id &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TTN_DEVICE_IDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;//,/ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# call your procedure/other scripts here below&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Creating digital twin with Thing ID: org.eclipse.ditto.ttn.demo:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dev_id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; PUT &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; ditto:ditto &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{
       &quot;policyId&quot;: &quot;org.eclipse.ditto.ttn.demo:twin-policy&quot;
    }'&lt;/span&gt; http://localhost:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DITTO_EXTERNAL_PORT&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/api/2/things/org.eclipse.ditto.ttn.demo:&lt;span class=&quot;nv&quot;&gt;$dev_id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Explanation - what is done here:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;we split the passed in &lt;code class=&quot;highlighter-rouge&quot;&gt;TTN_DEVICE_IDS&lt;/code&gt; environment variable by &lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt; and iterate over all contained device ids&lt;/li&gt;
  &lt;li&gt;for each device ID we create a new Thing (twin) referencing the already previously created Policy&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;access-your-digital-twins-via-api&quot;&gt;Access your digital twins via API&lt;/h2&gt;

&lt;p&gt;Congratulations, if you have done it so far your TTN devices do now have digital twin representations in Eclipse Ditto.&lt;/p&gt;

&lt;div class=&quot;alert alert-success&quot;&gt;&lt;i class=&quot;fa fa-check-square-o&quot;&gt;&lt;/i&gt; &lt;b&gt;Tip:&lt;/b&gt; Install the command line tool &lt;code class=&quot;highlighter-rouge&quot;&gt;jq&lt;/code&gt; and pipe the output of the below &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt; commands to it in order to get
                             prettified and colored JSON&lt;/div&gt;

&lt;div class=&quot;alert alert-info&quot;&gt;&lt;i class=&quot;fa fa-info-circle&quot;&gt;&lt;/i&gt; &lt;b&gt;Note:&lt;/b&gt; Alternatively to &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt;, you may also use the locally deployed swagger-ui at http://localhost:${DITTO_EXTERNAL_PORT}/apidoc/ 
                              in order to try out Ditto’s HTTP API - &lt;em&gt;make sure to select&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/api/2 - local Ditto&lt;/code&gt; in the ‘Servers’ 
                              section - when asked for credentials, use username ‘ditto’ and password ‘ditto’&lt;/div&gt;

&lt;p&gt;You can now, for example, use Ditto’s HTTP APIs in order&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;to retrieve the latest reported values: &lt;code class=&quot;highlighter-rouge&quot;&gt;curl -u ditto:ditto http://localhost:${DITTO_EXTERNAL_PORT}/api/2/things/org.eclipse.ditto.ttn.demo:&amp;lt;dev_id&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;to get a live stream of updates to the twins using SSE (Server Sent Events): &lt;code class=&quot;highlighter-rouge&quot;&gt;curl --http2 -u ditto:ditto -H 'Accept:text/event-stream' -N http://localhost:${DITTO_EXTERNAL_PORT}/api/2/things&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;to list all available twins via the search API: &lt;code class=&quot;highlighter-rouge&quot;&gt;curl -u ditto:ditto http://localhost:${DITTO_EXTERNAL_PORT}/api/2/search/things&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;alternatively, use your browser and open http://localhost:${DITTO_EXTERNAL_PORT}/api/2/search/things&lt;/li&gt;
      &lt;li&gt;when asked for credentials, use username “ditto” and password “ditto”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;formulate a search query, e.g. only searching for twins with a temperature above 24°, sorted by the last modification, the most recent first
to get the most active twin as first result:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;curl -u ditto:ditto &quot;http://localhost:${DITTO_EXTERNAL_PORT}/api/2/search/things?filter=gt(features/temperature/properties/value,24.0)&amp;amp;option=sort(-_modified),size(5)&amp;amp;fields=thingId,policyId,attributes,features,_modified,_revision&quot;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;which-other-possibilities-do-we-now-have&quot;&gt;Which other possibilities do we now have?&lt;/h2&gt;

&lt;p&gt;Now you have all the possibilities Eclipse Ditto as digital twin framework provides, e.g.:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;directly use your device’s data in a web application consuming Ditto’s HTTP API&lt;/li&gt;
  &lt;li&gt;directly use your device’s data in a mobile app using Ditto’s bidirectional &lt;a href=&quot;https://www.eclipse.org/ditto/httpapi-protocol-bindings-websocket.html&quot;&gt;WebSocket&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;make use of the &lt;a href=&quot;https://github.com/eclpise/ditto-clients/&quot;&gt;Eclipse Ditto Java or JavaScript clients&lt;/a&gt; which also use the WebSocket to integrate your device’s data&lt;/li&gt;
  &lt;li&gt;create another connection (optionally also applying JavaScript based payload mapping)
    &lt;ul&gt;
      &lt;li&gt;to e.g. &lt;a href=&quot;https://www.eclipse.org/ditto/connectivity-protocol-bindings-kafka2.html&quot;&gt;Apache Kafka&lt;/a&gt; and forward all the modifications made to your devices to there&lt;/li&gt;
      &lt;li&gt;or using &lt;a href=&quot;https://www.eclipse.org/ditto/connectivity-protocol-bindings-http.html&quot;&gt;HTTP push&lt;/a&gt; in order to call another HTTP API (e.g. insert time series data into an InfluxDB via its HTTP API)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;For time reasons we do not go deeper into additional topics, they are possible however, please consult the Ditto
documentation:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;the WebSocket channel and subscribing for change notifications&lt;/li&gt;
  &lt;li&gt;sending downward messages to devices&lt;/li&gt;
  &lt;li&gt;live commands (not retrieving persisted data of devices, but live data)&lt;/li&gt;
  &lt;li&gt;a more detailed introduction into authentication mechanisms (&lt;a href=&quot;https://www.eclipse.org/ditto/installation-operating.html#openid-connect&quot;&gt;OpenID Connect with OAuth2.0 is possible&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;possibilities to configure your Policies on every resource level, e.g. allowing individuals to only access certain values of a twin&lt;/li&gt;
  &lt;li&gt;and many other things..&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;additional-resources&quot;&gt;Additional resources&lt;/h2&gt;

&lt;h3 id=&quot;cleanup-after-the-workshop&quot;&gt;Cleanup after the workshop&lt;/h3&gt;

&lt;p&gt;Simply perform in the &lt;code class=&quot;highlighter-rouge&quot;&gt;ditto/deployment/docker&lt;/code&gt; folder:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-compose down
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And unistall docker + docker-compose (for docker-compose, just remove the downloaded file) again, if you don’t need it.&lt;/p&gt;

&lt;h3 id=&quot;javascript-payload-mapping-script-in-detail&quot;&gt;JavaScript payload mapping script in detail&lt;/h3&gt;

&lt;p&gt;Similar to the TTN console’s decoding/converting capabilities of “Payload Formats” of an TTN application, Ditto is able
to apply a custom JavaScript function for each consumed message.&lt;br /&gt;
That is necessary in order to convert the received data into a &lt;a href=&quot;https://www.eclipse.org/ditto/protocol-overview.html&quot;&gt;Ditto Protocol&lt;/a&gt; message 
including the JSON hierarchy of a so called &lt;a href=&quot;https://www.eclipse.org/ditto/basic-thing.html&quot;&gt;Thing&lt;/a&gt; being the representation of a digital twin.&lt;/p&gt;

&lt;p&gt;As the above injected JavaScript payload mapping script is formatted in a single line, this is the script we used pretty
 formatted, including the jsdoc of the provided function and some other inline comments.&lt;/p&gt;

&lt;p&gt;If you need to adjust the script in order to use your own &lt;code class=&quot;highlighter-rouge&quot;&gt;payload_fields&lt;/code&gt;, please replace all newlines with &lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt; and
escape the single quotes &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt; in the script with the following replacement: &lt;code class=&quot;highlighter-rouge&quot;&gt;'&quot;'&quot;'&lt;/code&gt;. Otherwise the single quotes won’t get
correctly escaped in the bash. You can remove the comments before making a single line of the script.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/**
 * Maps the passed parameters to a Ditto Protocol message.
 * @param {Object.&amp;lt;string, string&amp;gt;} headers - The headers Object containing all received header values
 * @param {string} [textPayload] - The String to be mapped
 * @param {ArrayBuffer} [bytePayload] - The bytes to be mapped as ArrayBuffer
 * @param {string} [contentType] - The received Content-Type, e.g. &quot;application/json&quot;
 * @returns {(DittoProtocolMessage|Array&amp;lt;DittoProtocolMessage&amp;gt;)} dittoProtocolMessage(s) -
 *  The mapped Ditto Protocol message,
 *  an array of Ditto Protocol messages or
 *  &amp;lt;code&amp;gt;null&amp;lt;/code&amp;gt; if the message could/should not be mapped
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapToDittoProtocolMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;textPayload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;bytePayload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;contentType&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ttnJson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textPayload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;// we simply parse the incoming TTN message as JSON&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deviceId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ttnJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dev_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// and extract some fields we require&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;payloadFields&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ttnJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'payload_fields'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// the 'payload_fields' content is - obviously - different for your application&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attributesObj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;                           &lt;span class=&quot;c1&quot;&gt;// the attributes of a Thing are meant for unstructured data &lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;hardwareSerial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ttnJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hardware_serial'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ttnCounter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ttnJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'counter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;featuresObj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;                             &lt;span class=&quot;c1&quot;&gt;// the features of a Thing e.g. contain sensor data of devices&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;temperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;payloadFields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'temperature_7'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;pressure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;payloadFields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'barometric_pressure_10'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;humidity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;payloadFields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'relative_humidity_8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;                                   &lt;span class=&quot;c1&quot;&gt;// a Thing can contain both attributes and features&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attributesObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;featuresObj&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dittoHeaders&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'response-required'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// we don't expect a response sent back to TTN&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'If-Match'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'*'&lt;/span&gt;                 &lt;span class=&quot;c1&quot;&gt;// we only want to update the thing if it already exists&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ditto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;buildDittoProtocolMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'org.eclipse.ditto.ttn.demo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// this is the namespace used as prefix for Ditto Thing IDs&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;deviceId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                       &lt;span class=&quot;c1&quot;&gt;// the TTN device ID is used as &quot;name&quot; part of the Ditto Thing ID &lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'things'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'twin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'commands'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'modify'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dittoHeaders&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;thing&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;An example message received from the TTN MQTT broker:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;app_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;iot-campus-be12&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dev_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hardware_serial&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;70B3D5499A2D3954&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;counter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9449&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;payload_raw&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;B2cA6AhoKwpzJ8oEAwH4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;payload_fields&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;analog_out_4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;barometric_pressure_10&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1018.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;relative_humidity_8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;21.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;temperature_7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;23.2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;metadata&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;would be transformed to the following Ditto Protocol message:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;topic&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.eclipse.ditto/node0/things/twin/commands/modify&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;attributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hardwareSerial&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;70B3D5499A2D3954&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ttnCounter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9449&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;temperature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
         &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;23.2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;pressure&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1018.6&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;humidity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;21.5&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Who?</title>
	<guid isPermaLink="false">https://medium.com/p/eb1e846e7a9c</guid>
	<link>https://medium.com/@donraab/who-eb1e846e7a9c?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;A whimsical poem I wrote in high school.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*uN-IPMsgdgViOor6vQ7JIg.jpeg&quot; /&gt;&lt;figcaption&gt;The Clear Waters of Crete 2016&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;A Window to My Past&lt;/h3&gt;&lt;p&gt;I wrote a lot of poetry in high school. I thought I would start publishing some of it here. I found a bunch of poems printed out on dot matrix printer paper while I was cleaning out my home office last week. I’m not going to claim any of it is good. Some of it was decent enough at the time to make it into the art and literary magazine at my high school. But it was only high school.&lt;/p&gt;&lt;p&gt;This poem is short and sweet, and yes, it rhymes. A lot of poems I wrote in high school rhymed. Some didn’t. If I am able to find some of my “better” poems, I will share them.&lt;/p&gt;&lt;h3&gt;Who?&lt;/h3&gt;&lt;blockquote&gt;I know not who I am to be,&lt;/blockquote&gt;&lt;blockquote&gt;The future no I cannot see.&lt;/blockquote&gt;&lt;blockquote&gt;I also know not what degree,&lt;/blockquote&gt;&lt;blockquote&gt;Will rid me of necessity,&lt;/blockquote&gt;&lt;blockquote&gt;Wild and young; Young and free,&lt;/blockquote&gt;&lt;blockquote&gt;I know not who I am to be.&lt;/blockquote&gt;&lt;h3&gt;Coding and Poetry&lt;/h3&gt;&lt;p&gt;I believe there are some similarities between coding and writing poetry. I won’t bore you trying to write about them here today. You can read about my thoughts on symmetry as applied to API design below.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@donraab/symmetric-sympathy-2c59d4541d60&quot;&gt;Symmetric Sympathy&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I hope you enjoyed the diversion from my usual technically focused blogs.&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=eb1e846e7a9c&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 08 Apr 2020 06:08:06 +0000</pubDate>
</item>
<item>
	<title>Wayne Beaton: Becoming an Eclipse Committer</title>
	<guid isPermaLink="false">http://waynebeaton.wordpress.com/?p=5660</guid>
	<link>https://waynebeaton.wordpress.com/2020/04/07/becoming-an-eclipse-committer/</link>
	<description>&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/projects/handbook/#contributing-committers&quot;&gt;Committers&lt;/a&gt; are the developers who hold the keys for an open source project. They are the ones who get to push code directly to source code repositories, configure build servers, push the output of builds to the download server, and so on. They are the ones who make decisions that set the path of their open source project.&lt;/p&gt;
&lt;p&gt;Committers have another important role: turning contributors into committers. All committers should plan to spend some significant amount of their time interacting with contributors to whip their &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#contributing&quot;&gt;contributions&lt;/a&gt; into shape, working community forums to court contribution to the project, and otherwise evangelize their project.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The Eclipse Foundation considers having a growing list of committers from a diverse array of organizations and interests a important health metric for open source projects.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;At the Eclipse Foundation, committer status is granted on a project-by-project basis. A developer who holds committer status on one Eclipse open source project, does not automatically hold any status on other Eclipse open source projects.&lt;/p&gt;
&lt;p&gt;There are three ways to become a committer on an Eclipse Foundation open source project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get elected as a committer by the existing committers;&lt;/li&gt;
&lt;li&gt;Be listed as an &lt;em&gt;initial committer&lt;/em&gt; on a new project proposal; or&lt;/li&gt;
&lt;li&gt;Be appointed as a &lt;em&gt;participant representative&lt;/em&gt; for a specification project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The most common way for somebody to join an Eclipse Foundation open source project as a committer is to be &lt;strong&gt;elected&lt;/strong&gt; to an active project. The process starts with a developer establishing a record of making high quality contributions to the project (typically, but not necessarily, in the form of source code patches or code in some form). After an individual has, through contribution, demonstrated that they understand how the open source project works, and that they understand the &lt;a href=&quot;https://www.eclipse.org/projects/dev_process&quot;&gt;Eclipse Development Process&lt;/a&gt; and are prepared to &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#ip&quot;&gt;implement the Eclipse IP Policy&lt;/a&gt;, an existing committer will invite them to join the team and initiate an election. Committer elections start with a nomination by an existing committer that includes a statement of merit that usually takes the form of a list of the various contributions that the individual has made to the project. What constitutes a sufficient demonstration of merit varies by project team and team.&lt;/p&gt;
&lt;p&gt;The second way to become a committer on an Eclipse open source project is to be listed as an &lt;strong&gt;initial committer&lt;/strong&gt; on a new &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#starting-proposal&quot;&gt;project proposal&lt;/a&gt; (naturally, this only makes sense if the project is still in the proposal phase). Since all new open source projects need to be bootstrapped with actual committers, the new open project creation process serves as the committer election. The community review period provides an opportunity for potential contributors to demonstrate merit and put their names forward as initial committers; it’s left to the discretion of the people who propose (proposers) the project to determine whether or not they’ll add a potential committer to project proposal (there’s no means by which anybody can force their way into committer status on a new Eclipse open source project without consent of the proposer). The creation review serves as the actual election, giving the Eclipse Foundation membership a final opportunity to challenge aspects of the new project proposal, including the initial committers.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;It’s acceptable (perhaps not common, but certainly not uncommon) for the initial committers on a new Eclipse open source project to all work for the same employer. Again, the Eclipse Foundation expects that the project team will actively court contributors and committers from other organizations and interests as the project moves from the initial incubation &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#starting-project-phases&quot;&gt;phase&lt;/a&gt; into the mature phase.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Third way to become a committer is a special case: get appointed as a &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#specifications-participant-committers&quot;&gt;participant representative&lt;/a&gt; for a specification project operating under the purview of an Eclipse &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/&quot;&gt;working group&lt;/a&gt;. A company that participates in a working group (at a particular membership level) that does not already have a committer representing their interests on a specification project may appoint one. The intent behind the notion of a participant representative is to ensure continuity of the flow of intellectual property grants when an participating organization is found to be without representation. Following their appointment, participant representatives become indistinguishable from other committers on a specification project. As such, following appointment, participant representative committers are subject to the same rules as any other committer: they do not hold any special status or formal role beyond that of committer once appointed, and they retain their committer status if they change employers.&lt;/p&gt;
&lt;p&gt;Okay… so there’s actually four ways to become a committer. The Eclipse Development Process includes a provision that allows the project leadership–in the event that a project becomes dysfunctional (e.g., no active committers)–to add (or remove) committers to reinvigorate the project. This power is used rarely.&lt;/p&gt;
&lt;p&gt;Your contributions are welcome.&lt;/p&gt;</description>
	<pubDate>Tue, 07 Apr 2020 14:11:29 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Add Your Voice to the 2020 Jakarta EE Developer Survey</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/BgIQC6uoC7Y/add-your-voice-2020-jakarta-ee-developer-survey</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/BgIQC6uoC7Y/add-your-voice-2020-jakarta-ee-developer-survey</link>
	<description>Our third annual Jakarta EE Developer Survey is now open and I encourage everyone to take a few minutes and complete the survey before the April 30 deadline.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/BgIQC6uoC7Y&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 07 Apr 2020 13:00:00 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Add Your Voice to the 2020 Jakarta EE Developer Survey</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1532</guid>
	<link>https://eclipse-foundation.blog/2020/04/07/add-your-voice-to-the-2020-jakarta-ee-developer-survey/</link>
	<description>&lt;p&gt;Our third annual Jakarta EE Developer Survey is&lt;a href=&quot;https://www.surveymonkey.com/r/YHXVMPF&quot;&gt; now open&lt;/a&gt; and I encourage everyone to take a few minutes and complete the survey before the April 30 deadline. Your input is extremely important.&lt;/p&gt;
&lt;p&gt;With your feedback, the entire Java ecosystem will have a better understanding of the requirements, priorities, and perceptions in the global Java developer community. This understanding enables a clearer view of the Java industry landscape, the challenges Java developers are facing, and the opportunities for enterprise Java stakeholders in the cloud native era.&lt;/p&gt;
&lt;p&gt;The Jakarta EE Developer Survey is one of the Java industry’s largest developer surveys. Since the survey’s inception, we’ve received thousands of responses from developers around the world, including 1,700 responses in 2019 — a clear indication the Java developer community recognizes the value of the survey results.&lt;/p&gt;
&lt;p&gt;Last year, we were able to share critical insight into the state of cloud native innovation for enterprise Java development globally, including expected growth rates for Java apps in the cloud as well as leading architectures, applications, and technologies. We were also able to share the community’s top priorities for Jakarta EE.&lt;/p&gt;
&lt;p&gt;This year, we’re asking developers to tell us more about their next steps for Java and cloud native development and their choices for architectures, technologies, and tools as cloud native resources for Java mature.&lt;/p&gt;
&lt;p&gt;With this updated information, platform vendors, enterprises, and individual developers in the Java ecosystem will have a better understanding of how the cloud native world for enterprise Java is unfolding and what that means for their strategies and businesses. And the Jakarta EE community at the Eclipse Foundation will have a better understanding of the community’s top priorities for future Jakarta EE releases.&lt;/p&gt;
&lt;p&gt;The Jakarta EE Developer Survey is your opportunity to add your voice to the global Java ecosystem and we’re counting on our entire community to help us gain the broadest possible view of the state of cloud native technologies in the context of enterprise Java. Best of all, this year we’ve organized the survey so it takes less than 10 minutes to complete!&lt;/p&gt;
&lt;p&gt;To access the survey, click&lt;a href=&quot;https://www.surveymonkey.com/r/YHXVMPF&quot;&gt; here&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 07 Apr 2020 12:02:24 +0000</pubDate>
</item>
<item>
	<title>InfoQ Eclipse feed: Theia Framework 1.0 Enables Web IDEs</title>
	<guid isPermaLink="true">https://www.infoq.com/news/2020/04/theia-enables-web-ides/?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</guid>
	<link>https://www.infoq.com/news/2020/04/theia-enables-web-ides/?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</link>
	<description>&lt;img src=&quot;https://www.infoq.com/styles/i/logo_bigger.jpg&quot; /&gt;&lt;p&gt;Theia is a framework for building multi-language IDEs upon JavaScript, and powers GitPod.io, Arduino's new Pro IDE, and Arm's new mBed Studio. 

Earlier this week they released 1.0 signifying that they had reached stability and the vendor-neutral open-source framework was ready for use.

Read on to find out more about what Eclipse Theia delivers and how it differs from VS Code.&lt;/p&gt; &lt;i&gt;By Alex Blewitt&lt;/i&gt;</description>
	<pubDate>Sun, 05 Apr 2020 14:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Dirigible: Release 4.4</title>
	<guid isPermaLink="false">http://dirigible.io/release/2020/04/04/news_new_release_4_4</guid>
	<link>http://dirigible.io/release/2020/04/04/news_new_release_4_4.html</link>
	<description>&lt;p&gt;New version &lt;a href=&quot;https://download.eclipse.org/dirigible/drops/R-4.4-202004040404/index.html&quot;&gt;4.4&lt;/a&gt; has been released.&lt;/p&gt;

&lt;p&gt;Release is of &lt;em&gt;Type A&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;features&quot;&gt;Features&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Terminal replaced with xterm.js&lt;/li&gt;
  &lt;li&gt;Workspace pluggable File-&amp;gt;New templates&lt;/li&gt;
  &lt;li&gt;Themes in templates&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;fixes&quot;&gt;Fixes&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Messaging handler fixes&lt;/li&gt;
  &lt;li&gt;Styling improvements&lt;/li&gt;
  &lt;li&gt;Minor fixes&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;statistics&quot;&gt;Statistics&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;69K+ Sessions&lt;/li&gt;
  &lt;li&gt;48K+ Users&lt;/li&gt;
  &lt;li&gt;182 Countries&lt;/li&gt;
  &lt;li&gt;367 Repositories in DirigibleLabs&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;operational&quot;&gt;Operational&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Available packages for download - &lt;a href=&quot;https://download.eclipse.org/dirigible/drops/R-4.4-202004040404/index.html/index.html&quot;&gt;https://download.eclipse.org/dirigible/drops/R-4.4-202004040404/index.html/index.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Docker images at Docker Hub under DirigibleLabs organization:	&lt;a href=&quot;https://hub.docker.com/u/dirigiblelabs/&quot;&gt;https://hub.docker.com/u/dirigiblelabs/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Maven Central artifacts by org.eclipse.dirigible namespace: &lt;a href=&quot;https://mvnrepository.com/artifact/org.eclipse.dirigible&quot;&gt;https://mvnrepository.com/artifact/org.eclipse.dirigible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The full list of bug-fixes and enhancements can be found here: &lt;a href=&quot;https://github.com/eclipse/dirigible/milestone/31?closed=1&quot;&gt;https://github.com/eclipse/dirigible/milestone/31?closed=1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The source code is available at GitHub repository here: &lt;a href=&quot;https://github.com/eclipse/dirigible/tree/4.4.0&quot;&gt;https://github.com/eclipse/dirigible/tree/4.4.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The instant trial is updated accordingly with the released version here: &lt;a href=&quot;http://trial.dirigible.io&quot;&gt;http://trial.dirigible.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;enjoy&quot;&gt;Enjoy!&lt;/h4&gt;</description>
	<pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
</item>
<item>
	<title>vert.x project: Eclipse Vert.x 3.9.0 released!</title>
	<guid isPermaLink="true">https://vertx.io/blog/eclipse-vert-x-3-9-0-released</guid>
	<link>https://vertx.io/blog/eclipse-vert-x-3-9-0-released</link>
	<description>&lt;article&gt;&lt;p&gt;We are extremely pleased to announce that the Eclipse Vert.x version 3.9.0 has been released.&lt;/p&gt;
&lt;h4 id=&quot;sql-client-fluent-queries&quot;&gt;SQL Client fluent queries&lt;/h4&gt;
&lt;p&gt;The query API becomes fluent with the addition of a &lt;code&gt;Query&lt;/code&gt; API for queries creation and configuration.&lt;/p&gt;
&lt;p&gt;Collectors query now becomes part of the &lt;code&gt;Query&lt;/code&gt; interface.&lt;/p&gt;
&lt;p&gt;This is a breaking API change done under the tech preview status given that SQL client is a Vert.x 4 feature back-ported to Vert.x 3.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;client.prepareQuery(sql).execute(tuple, ar -&amp;gt; ...);

&lt;span class=&quot;hljs-comment&quot;&gt;// With a collector&lt;/span&gt;
client.preparedQuery(sql).collecting(Collectors.toList()).execute(tuple, ar -&amp;gt; ...);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can read more about this new feature &lt;a href=&quot;https://github.com/vert-x3/wiki/wiki/3.9.0-Deprecations-and-breaking-changes#fluent-query-api&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;redis-client-backport&quot;&gt;Redis client backport&lt;/h4&gt;
&lt;p&gt;For Vert.x 4.0 we are doing a full reboot to the redis client. The functionality for the new client is ready to test on the master branch. In order to give users the opportunity to test and make the upcoming client even better it has been backported to the 3.9.0 release. The new client will allow users to connect to a single node, sentinel or cluster of redis nodes. The easiest way to start is:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;Redis.createClient(
      vertx,
      &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; RedisOptions()
        .setConnectionString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;redis://localhost:7006&quot;&lt;/span&gt;))
      .send(Request.cmd(Command.PING), send -&amp;gt; {
        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (send.succeeded()) {
          &lt;span class=&quot;hljs-comment&quot;&gt;// Should have received a pong...&lt;/span&gt;
        }
      });&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;same-site-cookies&quot;&gt;Same-site cookies&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://tools.ietf.org/html/draft-west-first-party-cookies-07&quot;&gt;&lt;code&gt;SameSite&lt;/code&gt; Cookie&lt;/a&gt; policy has been added to the HTTP Server Cookies.&lt;/p&gt;
&lt;p&gt;This is also applicable to web which allows cookie sessions to use &lt;code&gt;SameSite&lt;/code&gt; cookies:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;SessionHandler.create(store)
  .setCookieSameSite(CookieSameSite.STRICT);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Same-site cookies let servers require that a cookie shouldn’t be sent with cross-site (where Site is defined by the registrable domain) requests,
which provides some protection against cross-site request forgery attacks (CSRF).&lt;/p&gt;
&lt;h4 id=&quot;kafka-client-upgrade&quot;&gt;Kafka client upgrade&lt;/h4&gt;
&lt;p&gt;The Kafka client has been upgraded to Kafka 2.4.0 .&lt;/p&gt;
&lt;p&gt;Our reactive client exposes the Kafka Admin API. As of 2.4.0 this API has been replaced by a new Kafka Admin API and therefore
the Vert.x Kafka Admin API changes, e.g listing consumers groups&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;adminClient.listConsumerGroups(ar -&amp;gt; {
    System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;ConsumerGroups= &quot;&lt;/span&gt; + ar.result());
});&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;future-api&quot;&gt;Future API&lt;/h4&gt;
&lt;p&gt;With the recent addition of &lt;code&gt;Future#onComplete(...)&lt;/code&gt; supporting several handlers per &lt;code&gt;Future&lt;/code&gt; in 3.9 made the
&lt;code&gt;Future#setHandler(...)&lt;/code&gt; method feel awkward. Indeed &lt;code&gt;setHandler&lt;/code&gt; conveys the meaning that the &lt;code&gt;Future&lt;/code&gt; manages
a single handler. In 3.9 we deprecate &lt;code&gt;Future#setHandler&lt;/code&gt; in favor of &lt;code&gt;Future#onComplete&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;edns-disabled-by-default&quot;&gt;EDNS disabled by default&lt;/h4&gt;
&lt;p&gt;EDNS is an extension mechanism for DNS (&lt;a href=&quot;https://fr.wikipedia.org/wiki/EDNS&quot;&gt;https://fr.wikipedia.org/wiki/EDNS&lt;/a&gt;) that should be disabled by default. It might
cause unwanted issue and should be disabled by default.&lt;/p&gt;
&lt;h4 id=&quot;auth-deprecation-warnings&quot;&gt;Auth Deprecation warnings&lt;/h4&gt;
&lt;p&gt;As of 3.9.0 many APIs will be start warning about deprecations. There is a big refactoring and some breaking API changes coming
on 4.0.0 and these warnings are just to give users a heads up that API will change on the upcoming version.&lt;/p&gt;
&lt;p&gt;For more information about the upcoming 4.0 changes you can read &lt;a href=&quot;https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes&quot;&gt;4.0.0-Deprecations-and-breaking-changes&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;dependency-upgrades&quot;&gt;Dependency upgrades&lt;/h4&gt;
&lt;p&gt;In 3.9 we update a few versions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Netty 4.1.48.Final&lt;/li&gt;
&lt;li&gt;Jackson 2.10.2&lt;/li&gt;
&lt;li&gt;Guava 25.1-jre&lt;/li&gt;
&lt;li&gt;GraphQL Java 14&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;finally&quot;&gt;Finally&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/vert-x3/wiki/wiki/3.9.0-Release-Notes&quot;&gt;3.9.0 release notes&lt;/a&gt; can be found on the wiki, as well as the
list of &lt;a href=&quot;https://github.com/vert-x3/wiki/wiki/3.9.0-Deprecations-and-breaking-changes&quot;&gt;deprecations and breaking changes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Docker images are available on &lt;a href=&quot;https://hub.docker.com/u/vertx/&quot;&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Vert.x distribution can be downloaded on the website but is also available from &lt;a href=&quot;http://sdkman.io/index.html&quot;&gt;SDKMan&lt;/a&gt; and &lt;a href=&quot;http://brew.sh/&quot;&gt;HomeBrew&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The event bus client using the SockJS bridge is available from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/vertx3-eventbus-client&quot;&gt;NPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vert-x3/vertx-bus-bower&quot;&gt;Bower&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.webjars.org/&quot;&gt;WebJars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The release artifacts have been deployed to &lt;a href=&quot;http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.9.0%22&quot;&gt;Maven Central&lt;/a&gt; and you can get the distribution on &lt;a href=&quot;https://bintray.com/vertx/downloads/distribution/3.9.0/view&quot;&gt;Bintray&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That’s it! Happy coding and see you soon on our user or dev &lt;a href=&quot;https://vertx.io/community&quot;&gt;channels&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;</description>
	<pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Theia: An Open Source Alternative to Visual Studio Code</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1529</guid>
	<link>https://eclipse-foundation.blog/2020/04/01/theia-an-open-source-alternative-to-visual-studio-code/</link>
	<description>&lt;p&gt;With the release of &lt;a href=&quot;https://theia-ide.org/&quot;&gt;Eclipse Theia&lt;/a&gt; 1.0, organizations and vendors that build cloud and desktop integrated development environments (IDEs) have a production-ready, vendor-neutral, and open source framework for creating customized development environments for both desktops and browsers. Theia is an all-new code base with independent governance from the Eclipse desktop IDE.&lt;/p&gt;
&lt;p&gt;Theia delivers an open source, extensible and adaptable platform that provides all of the capabilities of VS Code but which can be tailored to specific use cases. It can also leverage all of the extensions available for Microsoft Visual Studio (VS) Code — one of the world’s most popular development environments.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Industry Leaders Are Adopting Theia&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;The Theia project was started in 2016 by Ericsson and TypeFox. In addition to &lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt;Eclipse Che&lt;/a&gt; using Theia as its web IDE, many organizations of all sizes rely on Theia as the foundational building block for their development environments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Arm Mbed Studio builds on the Theia IDE&lt;/li&gt;
&lt;li&gt;Google Cloud Shell runs Theia as its editor&lt;/li&gt;
&lt;li&gt;The default IDE for Red Hat CodeReady Workspaces is based on Eclipse Theia&lt;/li&gt;
&lt;li&gt;The frontend of Arduino Pro IDE is based on Theia&lt;/li&gt;
&lt;li&gt;Gitpod’s development environment is based on Theia&lt;/li&gt;
&lt;li&gt;SAP Business Application Studio (the next generation of SAP Web IDE) is based on Theia&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other prominent adopters include D-Wave Systems, EclipseSource, and IBM.&lt;/p&gt;
&lt;p&gt;Last year, Theia’s momentum and adoption reached the point where the project team approached the Eclipse Foundation to host the project. With over 375 open source projects, we’ve established a track record of the vendor-neutral governance, processes, and the community building needed to further guide Theia’s growth.&lt;/p&gt;
&lt;p&gt;Today, Theia is one of the Eclipse projects promoted by the&lt;a href=&quot;https://www.eclipse.org/org/workinggroups/eclipse_cloud_development_charter.php&quot;&gt; Eclipse Cloud Development Tools Working Group&lt;/a&gt; (ECD WG), an industry collaboration focused on delivering development tools for, and in, the cloud.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Theia Goes Beyond VS Code&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Theia is being developed by &lt;a href=&quot;https://projects.eclipse.org/projects/ecd.theia/who&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;a diverse group&lt;/a&gt; of contributors, committers and supporting companies such TypeFox, Ericsson, Red Hat and ARM. With over fifty committers and contributors over the past three months, it is a fast-moving, welcoming, and open community where contributions are accepted from all.&lt;/p&gt;
&lt;p&gt;Theia’s more than an alternative to VS Code. The main differentiator between Theia and VS Code is that Theia is specifically intended to be adopted by other companies and communities to build and deploy a modern web-based developer experience. VS Code is great, but it is only ever going to be a Microsoft product.&lt;/p&gt;
&lt;p&gt;Theia is intended to be modified, extended, and distributed by folks who want to create developer tools that look as great as VS Code (including using the same Monaco Editor) and can make use of the VS Code extension ecosystem. Of course, it is licensed under the &lt;a href=&quot;https://www.eclipse.org/legal/epl-2.0/&quot;&gt;EPL 2.0&lt;/a&gt;, so it is easy for organizations or individuals to build and ship products using Theia.&lt;/p&gt;
&lt;p&gt;Theia also provides important advantages that give IDE developers considerably more freedom and flexibility than VS Code offers. For example, Theia’s architecture is designed to be more modular and extensible than the VS Code so developers have a greater ability to customize their solutions for specific requirements. VS Code enables a great extension ecosystem. Theia goes beyond that and is designed to be modified and extended at all levels of its architecture.&lt;/p&gt;
&lt;p&gt;In addition, Theia is designed from the ground up to run in both desktop environments as well as in browser and remote server environments. IDE developers can write the source code for their development environment once, then build a desktop IDE, a cloud IDE, or both, without rewriting any code. With Theia, it’s easy to move between desktop and cloud environments at any time.&lt;/p&gt;
&lt;p&gt;Theia uses the&lt;a href=&quot;https://projects.eclipse.org/proposals/eclipse-open-vsx-registry&quot;&gt; Eclipse Open VSX Registry&lt;/a&gt;, an open-source alternative to the Microsoft Visual Studio marketplace. In the spirit of a true open source community, the extensions available in this free marketplace can be used in VS Code as well as in Theia.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Just the Beginning for Eclipse Theia&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;This first official Theia release confirms the technology is mature, stable, and ready for anyone and everyone to use as a foundation for their custom cloud or desktop IDE. Future releases will provide a desktop download for developers who want to use Theia directly as their development tool.&lt;/p&gt;
&lt;p&gt;I want to sincerely thank everyone involved in bringing this important advance in open source cloud development tools to this critical point. With the excitement and rapid uptake that Theia has experienced, I’m sure this is just the first of many successful releases.&lt;/p&gt;
&lt;p&gt;I encourage IDE developers to join the world-leading organizations that are already using Theia so they can start benefiting from its capabilities and flexibility.&lt;/p&gt;
&lt;p&gt;To get involved with the Eclipse Theia Project and begin contributing, please visit&lt;a href=&quot;https://theia-ide.org/&quot;&gt; https://theia-ide.org/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For more information about the Eclipse Cloud Development Tools Working Group, view the&lt;a href=&quot;https://www.eclipse.org/org/workinggroups/eclipse_cloud_development_charter.php&quot;&gt; Charter&lt;/a&gt; and ECD Working Group Participation Agreement (WGPA), or email membership@eclipse.org. You can also join the&lt;a href=&quot;https://accounts.eclipse.org/mailing-list/ecd-tools-wg&quot;&gt; ECD Tools mailing list&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Wed, 01 Apr 2020 16:06:47 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.15.0.AM1 for Eclipse 2020-03</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.15.0.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.15.0.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.15.0.AM1 (Developer Milestone 1) build for Eclipse 2020-03.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2020-03/4.15.0.AM1.html&quot;&gt;JBoss Tools 4.15.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.15.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please note that a regression has been found in the Fuse Tools. This is going
      to be fixed for the release (4.15.0.Final). Please find more information in this
      &lt;a href=&quot;https://issues.redhat.com/browse/FUSETOOLS-3333&quot;&gt;ticket&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;quarkus-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus-tools&quot;&gt;&lt;/a&gt;Quarkus Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;language-support-for-kubernetes-openshift-s2i-and-docker-properties&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#language-support-for-kubernetes-openshift-s2i-and-docker-properties&quot;&gt;&lt;/a&gt;Language support for Kubernetes, Openshift, S2i and Docker properties&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;There is now completion, hover, documentation and validation for kubernetes.&lt;strong&gt;,
      openshift.&lt;/strong&gt;, s2i.&lt;strong&gt;, docker.&lt;/strong&gt; properties&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus20&quot; src=&quot;https://tools.jboss.org/blog/images/quarkus20.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enter &lt;code&gt;kubernetes&lt;/code&gt; prefix:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus21&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus21.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enter &lt;code&gt;openshift&lt;/code&gt; prefix:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus22&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus22.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enter &lt;code&gt;s2i&lt;/code&gt; prefix:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus23&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus23.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;language-support-for-microprofile-rest-client-properties&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#language-support-for-microprofile-rest-client-properties&quot;&gt;&lt;/a&gt;Language support for MicroProfile REST Client properties&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Likewise, there is now completion, hover, documentation and validation for the
      MicroProfile properties from REST Client.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;After registering a REST client using &lt;code&gt;@RegisterRestClient&lt;/code&gt; like so:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;package org.acme;
      
      import javax.ws.rs.GET;
      import javax.ws.rs.Path;
      import javax.ws.rs.core.Response;
      
      import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;
      
      @RegisterRestClient
      public interface MyServiceClient {
      	@GET
          @Path(&quot;/greet&quot;)
          Response greet();
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The related MicroProfile Rest config properties will have language feature support
      (completion, hover, validation, etc.).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus24&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus24.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Change the Java code so that the configuration key is changed:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;package org.acme;
      
      import javax.ws.rs.GET;
      import javax.ws.rs.Path;
      import javax.ws.rs.core.Response;
      
      import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;
      
      @RegisterRestClient(configKey = &quot;myclient&quot;)
      public interface MyServiceClient {
      	@GET
          @Path(&quot;/greet&quot;)
          Response greet();
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;and notice the code assist is changed accordingly:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus25&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus25.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;language-support-for-microprofile-health&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#language-support-for-microprofile-health&quot;&gt;&lt;/a&gt;Language support for MicroProfile Health&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Likewise, there is now completion, hover, documentation and validation for the
      MicroProfile Health artifacts.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;So if you have the following Health class:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;package org.acme;
      
      import org.eclipse.microprofile.health.Health;
      
      @Health
      public class MyHealth {
      
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;you will get a validation error (as the class does not implement the &lt;code&gt;HealthCheck&lt;/code&gt;
      interface:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus26&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus26.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Similarely, if you have a class that implements &lt;code&gt;HealthCheck&lt;/code&gt; but is not annotated with &lt;code&gt;Health&lt;/code&gt;, some workflow applies:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;package org.acme;
      
      import org.eclipse.microprofile.health.HealthCheck;
      import org.eclipse.microprofile.health.HealthCheckResponse;
      
      public class MyHealth implements HealthCheck {
      
      	@Override
      	public HealthCheckResponse call() {
      		// TODO Auto-generated method stub
      		return null;
      	}
      
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;you will get a validation error (as the class is not annotated with &lt;code&gt;Health&lt;/code&gt;
      interface:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus27&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus27.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As there are several ways to fix the problem, then several quick fixes are proposed.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;server-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#server-tools&quot;&gt;&lt;/a&gt;Server Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;wildfly-19-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#wildfly-19-server-adapter&quot;&gt;&lt;/a&gt;Wildfly 19 Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A server adapter has been added to work with Wildfly 19. It adds support for
      Java EE 8, Jakarta EE 8 and Microprofile 3.3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please note that while creating a Wildfly 19 server adapter, you may get a warning.
      This is going to be fixed for the release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt;Related JIRA: &lt;a href=&quot;https://issues.jboss.org/browse/JBIDE-27092&quot;&gt;JBIDE-27092&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eap-7-3-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eap-7-3-server-adapter&quot;&gt;&lt;/a&gt;EAP 7.3 Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The server adapter has been adapted to work with EAP 7.3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 01 Apr 2020 15:04:10 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: The Eclipse Foundation Releases Eclipse Theia 1.0, a True Open Source Alternative to Visual Studio Code</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/uEetMyjIkLY/20200331-theia.php</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/uEetMyjIkLY/20200331-theia.php</link>
	<description>The Eclipse Foundation, one of the world’s largest open source foundations, today announced the release of Theia 1.0, a true open source alternative to Microsoft’s popular Visual Studio Code (VS Code) software.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/uEetMyjIkLY&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 31 Mar 2020 12:00:00 +0000</pubDate>
</item>
<item>
	<title>Red Hat Developers: Red Hat XML language server becomes LemMinX, bringing new release and updated VS Code XML extension</title>
	<guid isPermaLink="false">https://developers.redhat.com/blog/?p=699007</guid>
	<link>https://developers.redhat.com/blog/2020/03/27/red-hat-xml-language-server-becomes-lemminx-bringing-new-release-and-updated-vs-code-xml-extension/</link>
	<description>&lt;p&gt;A new era has begun for &lt;a href=&quot;https://developers.redhat.com/blog/2018/12/04/xml-language-server-vscode-extension/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Red Hat’s XML language server&lt;/a&gt;, which was migrated to the Eclipse Foundation under a new project name: &lt;a href=&quot;https://projects.eclipse.org/projects/technology.lemminx&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Eclipse LemMinX&lt;/a&gt; (a reference to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Lemmings_(video_game)&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Lemmings video game&lt;/a&gt;). The Eclipse LemMinX project is arguably the most feature-rich XML language server available. Its migration opens more doors for future development and utilization. In addition, shortly after its migration, the Eclipse LemMinX project and Red Hat also released updates: Eclipse LemMinX version 0.11.1 and the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=redhat.vscode-xml&quot;&gt;Red Hat VS Code XML extension&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Eclipse LemMinX version 0.11.1&lt;/h2&gt;
&lt;p&gt;Eclipse LemMinX version 0.11.1 mainly focuses on bug fixes that are &lt;a href=&quot;https://github.com/eclipse/lemminx/blob/master/CHANGELOG.md&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;outlined in the changelog here&lt;/a&gt;. For some history, Eclipse LemMinX started as an open source project created by &lt;a href=&quot;https://twitter.com/angelozerr&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Angelo ZERR&lt;/a&gt; in mid-2018. Angelo’s XML language server implementation was well ahead of the game in terms of features and code infrastructure. As Red Hat’s interest in an XML language server continued to grow, Red Hat joined forces with Angelo (who later officially joined Red Hat as a senior software engineer) to create the most feature-rich and easy-to-use XML language server possible.&lt;/p&gt;
&lt;p&gt;Thanks to the XML language server’s popularity and functionality, clients like Eclipse (with Wild Web Developer), VS Code (with XML Language Support by Red Hat), and Vim/Neovim (with &lt;code&gt;coc-xml&lt;/code&gt;) started consuming the XML language server. In addition, all LSP features (completion, validation, quick fix, etc.) provided by the XML language server are easily extensible. This helped motivate other projects to extend the LSP features, instead of implementing them themselves from scratch.&lt;/p&gt;
&lt;p&gt;For example, there are extensions specific for Maven and Liferay. The Maven extension extends the completion feature to manage advanced dependency completion, and the Liferay extension extends the hover feature to fit specific use cases. We hope that the contribution to the Eclipse Foundation facilitates easier consumption from related projects and attracts new contributors beyond people from Red Hat.&lt;/p&gt;
&lt;h2&gt;Red Hat VS Code XML extension&lt;/h2&gt;
&lt;p&gt;In addition, we released the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=redhat.vscode-xml&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Red Hat VS Code XML extension&lt;/a&gt; (which, of course, consumes the Eclipse LemMinX XML language server to provide language features). This extension provides an excellent all-in-one package for editing XML, XSD, and DTD files in VS Code, but what makes this extension stand out is the support for XSD and DTD schema validation for XML files.&lt;/p&gt;
&lt;p&gt;This new release also focussed on bug fixes, which are &lt;a href=&quot;https://github.com/redhat-developer/vscode-xml/blob/master/CHANGELOG.md&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;outlined in the changelog here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;a2a_button_facebook&quot; href=&quot;https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F27%2Fred-hat-xml-language-server-becomes-lemminx-bringing-new-release-and-updated-vs-code-xml-extension%2F&amp;amp;linkname=Red%20Hat%20XML%20language%20server%20becomes%20LemMinX%2C%20bringing%20new%20release%20and%20updated%20VS%20Code%20XML%20extension&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Facebook&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_twitter&quot; href=&quot;https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F27%2Fred-hat-xml-language-server-becomes-lemminx-bringing-new-release-and-updated-vs-code-xml-extension%2F&amp;amp;linkname=Red%20Hat%20XML%20language%20server%20becomes%20LemMinX%2C%20bringing%20new%20release%20and%20updated%20VS%20Code%20XML%20extension&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Twitter&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_linkedin&quot; href=&quot;https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F27%2Fred-hat-xml-language-server-becomes-lemminx-bringing-new-release-and-updated-vs-code-xml-extension%2F&amp;amp;linkname=Red%20Hat%20XML%20language%20server%20becomes%20LemMinX%2C%20bringing%20new%20release%20and%20updated%20VS%20Code%20XML%20extension&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;LinkedIn&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_email&quot; href=&quot;https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F27%2Fred-hat-xml-language-server-becomes-lemminx-bringing-new-release-and-updated-vs-code-xml-extension%2F&amp;amp;linkname=Red%20Hat%20XML%20language%20server%20becomes%20LemMinX%2C%20bringing%20new%20release%20and%20updated%20VS%20Code%20XML%20extension&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Email&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_print&quot; href=&quot;https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F27%2Fred-hat-xml-language-server-becomes-lemminx-bringing-new-release-and-updated-vs-code-xml-extension%2F&amp;amp;linkname=Red%20Hat%20XML%20language%20server%20becomes%20LemMinX%2C%20bringing%20new%20release%20and%20updated%20VS%20Code%20XML%20extension&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Print&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_reddit&quot; href=&quot;https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F27%2Fred-hat-xml-language-server-becomes-lemminx-bringing-new-release-and-updated-vs-code-xml-extension%2F&amp;amp;linkname=Red%20Hat%20XML%20language%20server%20becomes%20LemMinX%2C%20bringing%20new%20release%20and%20updated%20VS%20Code%20XML%20extension&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Reddit&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_flipboard&quot; href=&quot;https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F27%2Fred-hat-xml-language-server-becomes-lemminx-bringing-new-release-and-updated-vs-code-xml-extension%2F&amp;amp;linkname=Red%20Hat%20XML%20language%20server%20becomes%20LemMinX%2C%20bringing%20new%20release%20and%20updated%20VS%20Code%20XML%20extension&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Flipboard&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_dd addtoany_share_save addtoany_share&quot; href=&quot;https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F27%2Fred-hat-xml-language-server-becomes-lemminx-bringing-new-release-and-updated-vs-code-xml-extension%2F&amp;amp;title=Red%20Hat%20XML%20language%20server%20becomes%20LemMinX%2C%20bringing%20new%20release%20and%20updated%20VS%20Code%20XML%20extension&quot;&gt;&lt;img alt=&quot;Share&quot; src=&quot;https://static.addtoany.com/buttons/favicon.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a href=&quot;https://developers.redhat.com/blog/2020/03/27/red-hat-xml-language-server-becomes-lemminx-bringing-new-release-and-updated-vs-code-xml-extension/&quot; rel=&quot;nofollow&quot;&gt;Red Hat XML language server becomes LemMinX, bringing new release and updated VS Code XML extension&lt;/a&gt; appeared first on &lt;a href=&quot;https://developers.redhat.com/blog&quot; rel=&quot;nofollow&quot;&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Fri, 27 Mar 2020 07:00:40 +0000</pubDate>
</item>
<item>
	<title>Christopher Guindon: Eclipse IoT Website Redesign</title>
	<guid isPermaLink="true">https://www.chrisguindon.com/post/eclipse-iot-website-redesign/</guid>
	<link>https://www.chrisguindon.com/post/eclipse-iot-website-redesign/</link>
	<description>&lt;p&gt;The &lt;a href=&quot;https://iot.eclipse.org&quot;&gt;Eclipse IoT&lt;/a&gt; website redesign is now live! This project was a &lt;a href=&quot;https://github.com/EclipseFdn/iot.eclipse.org/pull/339&quot;&gt;huge undertaking&lt;/a&gt; for us; we added 5,245 lines of code, closed &lt;a href=&quot;https://github.com/EclipseFdn/iot.eclipse.org/projects/3#column-6757970&quot;&gt;15 issues&lt;/a&gt;, removed 82,361 lines of code and made &lt;a href=&quot;https://github.com/EclipseFdn/iot.eclipse.org/pull/339/commits&quot;&gt;84 commits&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Eclipse IoT Homepage&quot; src=&quot;https://www.chrisguindon.com/uploads/iot-2020.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Yes, you got that right, the end result was &lt;strong&gt;-77,116 lines of code&lt;/strong&gt; because we took the opportunity to clean up our codebase.&lt;/p&gt;
&lt;p&gt;To kickoff this initiative, the community help us define the &lt;a href=&quot;https://github.com/EclipseFdn/iot.eclipse.org/issues/179&quot;&gt;goals&lt;/a&gt; for this project:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Improve our information architecture&lt;/strong&gt;: &lt;br /&gt;
Led by &lt;a href=&quot;https://accounts.eclipse.org/users/fdesbiens&quot;&gt;Frédéric Desbiens&lt;/a&gt;, the Eclipse IoT community created a new &lt;a href=&quot;https://github.com/EclipseFdn/iot.eclipse.org/files/3591212/iot.eclipse.org.new.structure.v2.pdf&quot;&gt;structure&lt;/a&gt; for the website.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contribute to the recruitment of new members and adopters&lt;/strong&gt;: &lt;br /&gt;
&lt;a href=&quot;https://iot.eclipse.org/adopters/&quot;&gt;Adopters&lt;/a&gt; and &lt;a href=&quot;https://iot.eclipse.org/membership/&quot;&gt;Members&lt;/a&gt; are now top-level menu items. We also created a new “&lt;a href=&quot;https://iot.eclipse.org/adopters/how-to-be-listed-as-an-adopter/&quot;&gt;How to be Listed as an Adopter&lt;/a&gt;” page.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ensure the website cathers to both technical and non-technical visitors&lt;/strong&gt;: &lt;br /&gt;
We made some big improvements to our &lt;a href=&quot;https://iot.eclipse.org/community/&quot;&gt;Community&lt;/a&gt; and &lt;a href=&quot;https://iot.eclipse.org/community/resources/&quot;&gt;Resources&lt;/a&gt; sections. These sections cathers to both technical and non-technical users since you can find Case-Studies, Market Reports, Videos, White Papers and some additional information on how you can stay informed about what’s currently going on with Eclipse IoT.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Drive adoption for our technologies&lt;/strong&gt;: &lt;br /&gt;
We now fetch project information from the &lt;a href=&quot;https://projects.eclipse.org&quot;&gt;Eclipse PMI&lt;/a&gt; each time we push a change to the website. Our stale project page is now a thing of the past!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In an effort to communicate our project plans with our community, we created a public &lt;a href=&quot;https://github.com/EclipseFdn/iot.eclipse.org/projects/3&quot;&gt;GitHub project&lt;/a&gt; with &lt;a href=&quot;https://github.com/EclipseFdn/iot.eclipse.org/milestones&quot;&gt;two milestones&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Being open and transparent allows us to natually inform our communities about our efforts and we think it’s a great way for us to collaborate and share tasks. As the project manager, this workflow allows me to ensure that the project is moving forward as planned.&lt;/p&gt;
&lt;p&gt;We also created a set of &lt;a href=&quot;https://www.eclipse.org/artwork/zip_file_v2/Eclipse-IoT-Brand-Guidelines.pdf&quot;&gt;brand guidelines&lt;/a&gt; for the Eclipse IoT Working Group. These guidelines include the brand font (Roboto), logo variations, color swatches, and acceptable logo treatments. This will help us consistently deploy the brand across different digital and print channels as well as Eclipse IoT events.&lt;/p&gt;
&lt;p&gt;Overall, I am very happy with this new redesign! A huge thank you to &lt;a href=&quot;https://accounts.eclipse.org/users/epoirier&quot;&gt;Eric Poirier&lt;/a&gt;, &lt;a href=&quot;https://accounts.eclipse.org/users/mjoanisse4m4&quot;&gt;Matt Joanisse&lt;/a&gt;, a graphic designer hired by the Foundation to work on the site, &lt;a href=&quot;https://accounts.eclipse.org/users/cwitt&quot;&gt;Christie Witt&lt;/a&gt;, &lt;a href=&quot;https://accounts.eclipse.org/users/jspeedn7e&quot;&gt;Joe Speed&lt;/a&gt;, &lt;a href=&quot;https://accounts.eclipse.org/users/fdesbiens&quot;&gt;Frédéric Desbiens&lt;/a&gt; and &lt;a href=&quot;https://accounts.eclipse.org/users/malowe&quot;&gt;Martin Lowe&lt;/a&gt;!&lt;/p&gt;</description>
	<pubDate>Tue, 24 Mar 2020 14:12:32 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: What I learned about COVID-19 from Acute Myeloid Leukemia</title>
	<guid isPermaLink="false">https://medium.com/p/b587911ff74f</guid>
	<link>https://medium.com/@donraab/what-i-learned-about-covid-19-from-acute-myeloid-leukemia-b587911ff74f?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Survival tactics of a germaphobe and spouse of an AML Warrior&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*ZMHa4Q5wcLLTeBNWWKUTRQ.jpeg&quot; /&gt;&lt;figcaption&gt;Day 0 — This is the end&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote&gt;When everyone actually is out to get you, paranoia is just good thinking.&lt;/blockquote&gt;&lt;blockquote&gt;— Woody Allen&lt;/blockquote&gt;&lt;h3&gt;I’ve never written about this story before&lt;/h3&gt;&lt;p&gt;I am not superstitious, except for when it comes to the story of my wife and family and Acute Myeloid Leukemia (AML). I am active on social media and write technical blogs regularly, but have never written anything personal about my wife’s six plus year war against the boogeyman — Acute Myeloid Leukemia. I am going to tell some of the story today, because an AML Warrior on Twitter has been sharing his story the past three months and has given me the courage to write out loud.&lt;/p&gt;&lt;p&gt;I am concerned about his well being as he prepares to get a stem cell transplant, and the well being of all those around him. He needs his spouse, his family, and many heroes in health services and the larger community to be healthy to help him fight this war and every battle he will fight.&lt;/p&gt;&lt;p&gt;So many people in this world need the support of others to survive. COVID-19 is an unknown threat to us all. We need to respect it and have an abundance of caution about it, even if we ourselves are not at a particular risk of dying from exposure to it.&lt;/p&gt;&lt;h3&gt;This is not about me, and COVID-19 is not about you&lt;/h3&gt;&lt;p&gt;I am not an AML Warrior. My wife is. My wife has been an AML warrior since July 2013. I lost track of the hospital visits, blood draws, rounds of chemo, blood transfusions, platelet transfusions and sleepless nights watching my wife in audible and visible pain hitting the emergency dispense button on the morphine drip.&lt;/p&gt;&lt;p&gt;I am my wife’s shield. I am the first line of defense. I am the barrier for all visitors at the door. I am a shower of Purell at the first hint of a germ. I will kill every invisible germ in a six foot radius of my wife with complete disregard for anyone’s personal feelings. The boogeyman is real, and although I can’t see him, I will do everything in my power to be his kryptonite and keep him away from my wife.&lt;/p&gt;&lt;p&gt;This story is about the warriors and the heroes who help our loved ones fight and survive the horrible boogeymen that threaten them every day. Our actions today with respect to COVID-19 will impact many of them in ways that may not be immediately obvious.&lt;/p&gt;&lt;p&gt;Let me flash back to July 2013, when my life and the life of my family changed forever.&lt;/p&gt;&lt;h3&gt;July 2013 — I don’t need your sympathy&lt;/h3&gt;&lt;p&gt;This is a battle in a continuous war. If you step in my wife’s hospital room then you have entered the front-lines and we do not need friendly fire. You need to listen and respect my wishes as someone who’s primary focus is doing whatever is necessary to increase the chances my wife will survive. I am her shield. You shall not pass unless I say so and you will follow my rules. You say you’re the new doctor here to take her vitals? I don’t care.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;I need you to stay away if you have a cough, or are exhibiting anything that may only be an “allergy”. Not feeling like you’re ready to run a marathon and clean enough to perform heart surgery? Please just stay away.&lt;/li&gt;&lt;li&gt;Ready for a marathon, freshly showered, and wearing your cleanest clothes? Please wash your hands.&lt;/li&gt;&lt;li&gt;I need you to ignore any instincts you have. Ask me whether you should do something, before you instinctively do it. Going to shake hands? No. Hug? No. Kiss? WTF? No. Use my wife’s dedicated bathroom? No. Bring my wife flowers? No. Any other instincts you have? No.&lt;/li&gt;&lt;li&gt;Please wash your hands.&lt;/li&gt;&lt;li&gt;You need to perform any standard procedure on my wife? Wash your hands. Put on a mask. Put on gloves. Oops, accidentally touched your face instinctively with the gloves on? Take the gloves off, wash your hands and put on new gloves.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Repeat this several times a day for many years. I am proudly a germaphobe. The boogeyman is real. He is resilient. He will wait for you to let down your guard. Being a germaphobe is just good thinking when it comes to AML.&lt;/p&gt;&lt;p&gt;But I was not always a germaphobe. Let me flash back to my teenage years.&lt;/p&gt;&lt;h3&gt;I am Unbreakable&lt;/h3&gt;&lt;p&gt;When I was a teenager, I was in two near-death car accidents.&lt;/p&gt;&lt;p&gt;When I was 16, I went head first through the passenger window of a Lincoln Town car at full speed on my ten-speed bicycle and broke my jaw and clavicle. I was not wearing a helmet. I was in ICU for a week, and my mouth was wired shut for 8 weeks and I ate everything through a straw.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Do not ever try and blend pizza and eat it through a straw. Ever.&lt;/p&gt;&lt;p&gt;When I was 17, I was thrown out of the rear-windshield of a Ford Mustang. I was in the rear left passenger seat, and was not wearing a seat belt. I recall being thrown up against the back of the driver-seat, and then having the wind knocked out of me as I hit the ground. I picked myself up off the ground and wandered around looking for my shoe. Except for a few stitches to my forehead where I had a laceration, I was miraculously fine.&lt;/p&gt;&lt;p&gt;My friends and I told these stories so many times at parties. The stories are fun to tell and are embellished with humor to elevate them to the level of myth and legend. They sound unbelievable and have a happy ending — I’m able to tell them.&lt;/p&gt;&lt;p&gt;When you hear and tell stories like this enough times, you start to believe you might actually be a superhero. I am not Superman. I was just lucky. These were just two random points in time where dice were rolled, and I didn’t crap out.&lt;/p&gt;&lt;p&gt;Fast forward to my 40’s. I’ve learned who the real heroes are, and they give more of themselves than any fun sounding story can at a party, no matter how many times you tell it.&lt;/p&gt;&lt;h3&gt;AML humbled me&lt;/h3&gt;&lt;p&gt;I spent a lot of time partying and going to bars in my early twenties. After my two near-death car accidents in my teens, I wanted to enjoy life as much as I could.&lt;/p&gt;&lt;p&gt;I did not know in my 20’s what Acute Myeloid Leukemia was. I didn’t understand what chemo does to the body. Chemo kills cancer cells, but it also kills the person taking it. Maybe not immediately, but it renders the person taking the chemo unable to defend themselves against common germs by killing their white blood cells. Chemo also kills red blood cells so you will have low energy. Chemo also destroys platelets so blood doesn’t clot and you bruise and bleed very easily. The picture above shows examples of the ease of bruising when unsuccessfully inserting an IV or taking blood when platelets are low.&lt;/p&gt;&lt;p&gt;AML is not like a car accident. AML is like being on a row boat with a leak in the middle of the ocean with hungry sharks swimming all around. If you’re lucky, after several years of fighting off sharks and paddling non-stop to any shore you can find, you might get lucky. Or, as my wife and I discovered, you might wind up back in the middle of the ocean for round two.&lt;/p&gt;&lt;p&gt;I have never told this story to more than close friends and family, because it terrifies me. The boogeyman is real. He is invisible. And he is waiting for you to let your shield down.&lt;/p&gt;&lt;p&gt;I see you COVID-19. Shield’s up!&lt;/p&gt;&lt;h3&gt;I am not an expert or a hero, I am just a shield&lt;/h3&gt;&lt;p&gt;Listen to the doctors and scientists and experts on disease control. You may not have an immediate risk of dying from COVID-19. The percentages might sound ridiculously low to you.&lt;/p&gt;&lt;p&gt;The percentages for other folks who are compromised are much scarier. Without the threat of COVID-19, the percentage chance my wife was given initially to survive given her risk assessment was 46%. We had the option to go with chemo only or a Stem Cell Transplant, and we went the chemo only route, due to another complication… My wife has Celiac Disease. Every medication, food, ointment, pain treatment, etc. had to be verified Gluten Free directly by the manufacturer. The Stem Cell transplant was going to require even more potential drugs and treatments. After the chemo only route was unsuccessful, we only had one option left. We then went with the Stem Cell Transplant option. The percentage survival chance we were given for Stem Cell Transplant after trying the chemo only route was 20%.&lt;/p&gt;&lt;p&gt;When the percentages are this challenging, you need the help of all the heroes you can find, and many you will never meet.&lt;/p&gt;&lt;p&gt;My family has been fortunate and blessed as it has been six and a half years since we began this war against AML. My heart and thoughts are with every family who has to fight their own war against their own boogeymen.&lt;/p&gt;&lt;h3&gt;The Real Heroes&lt;/h3&gt;&lt;p&gt;Remember, this story is not about me, and it is not about you. This story is about the real heroes of COVID-19 and AML and every other medical challenge we face as humans.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Who are the heroes?&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The kind and generous folks that donate their blood, platelets and stem cells to help others that they will most likely never meet.&lt;/li&gt;&lt;li&gt;The nurses, doctors, pharmacists, and hospital staff, and all of the medical support staff who give their day in and day out to provide our loved ones with the care they need to survive.&lt;/li&gt;&lt;li&gt;Your family, friends, and colleagues who help you and your family daily in numerous ways while you are on auto-pilot trying to shield your loved one, and provide for your family and make sure you have health insurance, a place to sleep, and food to eat.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The heroes are real people with their own lives. They are forever part of our family. Thank you for all you have done and continue to do. We love you all.&lt;/p&gt;&lt;h3&gt;This part is about you and me and choices we make&lt;/h3&gt;&lt;p&gt;Are you going to a bar or event tonight to celebrate life? Do you know if you will pick up an invisible boogeyman to give to one of the heroes above?&lt;/p&gt;&lt;p&gt;I’m sure the heroes will be fine. They’ll stick it out for a couple weeks at home if you get them sick, and then get back to their jobs in a couple weeks when they’re well. But if a nurse or doctor or pharmacist can’t go to work, and can’t help a patient in their fight with AML or some other horrible cancer or disease, maybe their germaphobe shields won’t matter. Maybe it will only mean a half hour or hour longer to get the blood transfusion ordered from the new intern who is on call because the doctor couldn’t make it. Maybe the on call pharmacist will miss the note about making sure all medications are gluten free. Maybe the healthy person who would otherwise be donating life saving blood, platelets or stem cells will just have to wait a month or two before they can give them again.&lt;/p&gt;&lt;p&gt;Maybe this will mean the difference between life or death for someone else.&lt;/p&gt;&lt;p&gt;The night out or event you really want to attend can wait a few weeks or months. Have a drink at home and celebrate life with friends online and don’t risk those immediately around you. Take the appropriate precautions as indicated by the CDC and health professionals.&lt;/p&gt;&lt;p&gt;If you just happen to be hanging out temporarily with the boogeyman, please keep him to yourself. The person you may unintentionally harm with your personal disregard may have a face, a name and a family who loves them and wants them around for as many years as possible.&lt;/p&gt;&lt;p&gt;Thank you!&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*UhExZIOhez42NqTrf6zvDw.jpeg&quot; /&gt;&lt;figcaption&gt;My beautiful wife and AML Warrior who is the love and inspiration of my life — July 2013&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*W1xBC_tiNrvxhfGl0ri0IQ.png&quot; /&gt;&lt;figcaption&gt;Me and the love of my life in June 2019 — Thank you to all the heroes who made this picture possible!&lt;/figcaption&gt;&lt;/figure&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=b587911ff74f&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Sun, 22 Mar 2020 17:35:55 +0000</pubDate>
</item>
<item>
	<title>Karsten Thoms: Eclipse Oomph: Suppress Welcome Page</title>
	<guid isPermaLink="false">http://kthoms.wordpress.com/?p=1052</guid>
	<link>https://kthoms.wordpress.com/2020/03/19/eclipse-oomph-suppress-welcome-page/</link>
	<description>&lt;p&gt;I am frequently spawning Eclipse workspaces with Oomph setups and the first action I do when a new workspace is provisioned is to close Eclipse’s welcome page. So I wanted to suppress that for a current project setup. So I started searching where Eclipse stores the preference that disables the intro page. The location of that preference is within the workspace directory at&lt;/p&gt;
&lt;pre&gt;.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.prefs&lt;/pre&gt;
&lt;p&gt;The content of the preference file is&lt;/p&gt;
&lt;pre&gt;eclipse.preferences.version=1
showIntro=false&lt;/pre&gt;
&lt;p&gt;So to make Oomph create the preference file before the workspace is started the first time use a &lt;em&gt;Resource Creation&lt;/em&gt; task and set the &lt;em&gt;Target URL&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;${workspace.location|uri}/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.prefs&lt;/pre&gt;
&lt;p&gt;Then put the above mentioned preference content as &lt;em&gt;Content&lt;/em&gt; value.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-1058&quot; height=&quot;344&quot; src=&quot;https://kthoms.files.wordpress.com/2020/03/oomph_disable_welcome_page.png?w=584&amp;amp;h=344&quot; width=&quot;584&quot; /&gt;&lt;/p&gt;</description>
	<pubDate>Thu, 19 Mar 2020 16:37:54 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools and Red Hat CodeReady Studio for Eclipse 2019-12</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/12.14.0.ga.html</guid>
	<link>https://tools.jboss.org/blog/12.14.0.ga.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2019-12/4.14.0.Final.html&quot;&gt;JBoss Tools 4.14.0&lt;/a&gt; and
      &lt;a href=&quot;https://tools.jboss.org/downloads/devstudio/2019-12/12.14.0.GA.html&quot;&gt;Red Hat CodeReady Studio 12.14&lt;/a&gt;
      for Eclipse 2019-12 are here waiting for you. Check it out!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;crstudio12&quot; src=&quot;https://tools.jboss.org/blog/images/crstudio12.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Red Hat CodeReady Studio comes with everything pre-bundled in its installer. Simply download it from our &lt;a href=&quot;https://developers.redhat.com/products/codeready-studio/overview/&quot;&gt;Red Hat CodeReady product page&lt;/a&gt; and run it like this:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;literalblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;java -jar codereadystudio-&amp;lt;installername&amp;gt;.jar&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio require a bit more:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This release requires at least Eclipse 4.14 (2019-12) but we recommend
      using the latest &lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-12/r/eclipse-ide-enterprise-java-developers&quot;&gt;Eclipse 4.14 2019-12 JEE Bundle&lt;/a&gt;
      since then you get most of the dependencies preinstalled.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &quot;JBoss Tools&quot; or &quot;Red Hat CodeReady Studio&quot;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For JBoss Tools, you can also use our update site directly.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;literalblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;http://download.jboss.org/jbosstools/photon/stable/updates/&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is new?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Our main focus for this release was a new tooling for the Quarkus framework, improvements for container based development and bug fixing.
      Eclipse 2019-12 itself has a lot of new cool stuff but let me highlight just a few updates in both Eclipse 2019-12 and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;openshift-container-platform-4-3-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift-container-platform-4-3-support&quot;&gt;&lt;/a&gt;OpenShift Container Platform 4.3 support&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;With the new OpenShift Container Platform (OCP) 4.3 now available (see this
      &lt;a href=&quot;https://blog.openshift.com/introducing-red-hat-openshift-4-3-to-enhance-kubernetes-security/&quot; target=&quot;_blank&quot;&gt;article&lt;/a&gt;),
      JBoss Tools is compatible with
      this major release in a transparent way. Just define your connection to your
      OCP 4.3 based cluster as you did before for an OCP 3 cluster, and use the tooling !&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;new-openshift-application-explorer-view&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#new-openshift-application-explorer-view&quot;&gt;&lt;/a&gt;New OpenShift Application Explorer view&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new OpenShift Application Explorer window has been added in addition to the OpenShift Explorer. It is based on
      &lt;a href=&quot;https://github.com/openshift/odo/&quot; target=&quot;_blank&quot;&gt;OpenShift Do&lt;/a&gt;. It provides a different and simplified
      user experience allowing easy and rapid feedback through
      inner loop and debugging.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Let’s see it in action.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;opening-the-openshift-application-explorer-view&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#opening-the-openshift-application-explorer-view&quot;&gt;&lt;/a&gt;Opening the OpenShift Application Explorer view&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you opened a brand new workspace, you should see the
      OpenShift Application Explorer view in the list of views
      available on the botton part of the screen:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you don’t see the view being listed, you can open it
      through the &lt;code&gt;&lt;code&gt;Window -→ Show View -→ Other&lt;/code&gt;&lt;/code&gt; menu,
      enter &lt;code&gt;&lt;code&gt;open&lt;/code&gt;&lt;/code&gt; in the filter text box and then select
       &lt;code&gt;&lt;code&gt;OpenShift Application Explorer&lt;/code&gt;&lt;/code&gt;:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Expanding the root node will display the list of projects
      available on the cluster:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer3.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;java-based-micro-service&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#java-based-micro-service&quot;&gt;&lt;/a&gt;Java based micro service&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We will show how to deploy a Java based microservice and
      how to use the various features. But we first need to load
      the component source code in our workspace. Thanks to the
      launcher wizard, we can do that easilly. Try &lt;code&gt;&lt;code&gt;Ctrl+N&lt;/code&gt;&lt;/code&gt;
      and select the &lt;code&gt;&lt;code&gt;Launcher project&lt;/code&gt;&lt;/code&gt; wizard:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer4&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer4.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Then click the &lt;code&gt;&lt;code&gt;Next&lt;/code&gt;&lt;/code&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Select &lt;code&gt;&lt;code&gt;rest-http&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Mission&lt;/code&gt;&lt;/code&gt; field,
       &lt;code&gt;&lt;code&gt;vert.x community&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Runtime&lt;/code&gt;&lt;/code&gt; field,
       &lt;code&gt;&lt;code&gt;myservice&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Project name&lt;/code&gt;&lt;/code&gt; field:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer5&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer5.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Then click the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button: a new project will be
      added to your workspace. Once the dependencies resolution
      has been completed, we’re ready to start playing with the
      cluster.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect5&quot;&gt;
      &lt;h6 id=&quot;create-the-component&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#create-the-component&quot;&gt;&lt;/a&gt;Create the component&lt;/h6&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Now that we have the source code, we can create the component. From the OpenShift Application Explorer view,
      right select the project (myproject), and the click the
       &lt;code&gt;&lt;code&gt;New → Component&lt;/code&gt;&lt;/code&gt; menu:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer6&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer6.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enter &lt;code&gt;&lt;code&gt;myservice&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/code&gt; field, click the &lt;code&gt;&lt;code&gt;Browse&lt;/code&gt;&lt;/code&gt; button to select the project we have just created, select &lt;code&gt;&lt;code&gt;java&lt;/code&gt;&lt;/code&gt; in the
       &lt;code&gt;&lt;code&gt;Component type&lt;/code&gt;&lt;/code&gt; field, select &lt;code&gt;&lt;code&gt;8&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Component version&lt;/code&gt;&lt;/code&gt; field,
      enter &lt;code&gt;&lt;code&gt;myapp&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/code&gt; field and uncheck the
       &lt;code&gt;&lt;code&gt;Push after create&lt;/code&gt;&lt;/code&gt; check-box:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer7&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer7.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Then click the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button. The component will be created and expanding
      the project node will now show the application that contains our component:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer8&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer8.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Expanding the application will now display our component:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer9&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer9.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The component has been created but it is not yet deployed on the cluster (as we
      unchecked the &lt;code&gt;&lt;code&gt;Push after create&lt;/code&gt;&lt;/code&gt; check-box. In order to deploy it,right
      select the component and click the &lt;code&gt;&lt;code&gt;Push&lt;/code&gt;&lt;/code&gt; menu. The deployment will be
      created and then a build will be launched. A new window will be created in the
       &lt;code&gt;&lt;code&gt;Console&lt;/code&gt;&lt;/code&gt; view. After a while, you should see the following output:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer10&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer10.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The component is now deployed to the cluster but we cannot access it as we need
      to define an URL to access it externally. Right select the component and click
      the &lt;code&gt;&lt;code&gt;New → URL&lt;/code&gt;&lt;/code&gt; menu:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer11&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer11.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enter &lt;code&gt;&lt;code&gt;url1&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/code&gt; field and select &lt;code&gt;&lt;code&gt;8080&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/code&gt;
      field:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer12&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer12.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Then click on the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button. The URL is created but not on the cluster,
      so we need to push again the component so that the local configuration is
      synchronized with the configuration on the cluster. The &lt;code&gt;&lt;code&gt;Console&lt;/code&gt;&lt;/code&gt; window
      will display a message claiming that a push is now required:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer13&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer13.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;So push the component again (&lt;code&gt;&lt;code&gt;component → Push&lt;/code&gt;&lt;/code&gt;).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Let’s check that we can now access the service. Expand the component level so
      that we can see the URL we have just created:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer14&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer14.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Right select the URL and click the &lt;code&gt;&lt;code&gt;Open in Browser&lt;/code&gt;&lt;/code&gt; menu, you should see the new browser window:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer15&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer15.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can test the service: enter &lt;code&gt;&lt;code&gt;demo&lt;/code&gt;&lt;/code&gt; in the text box and click the
       &lt;code&gt;&lt;code&gt;Invoke&lt;/code&gt;&lt;/code&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer16&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer16.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect5&quot;&gt;
      &lt;h6 id=&quot;feedback-loop&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#feedback-loop&quot;&gt;&lt;/a&gt;Feedback loop&lt;/h6&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We will now see how we can get fast feedback on code changes. So let’s modify the
      application code and see how we can synchronize the changes to the cluster.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the &lt;code&gt;&lt;code&gt;Project Explorer&lt;/code&gt;&lt;/code&gt; view, locate the &lt;code&gt;&lt;code&gt;HttpApplication.java&lt;/code&gt;&lt;/code&gt; file:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer17&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer17.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Double click on the file to open the editor:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer18&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer18.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;On line 14, change the line:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;  protected static final String template = &quot;Hello, %s!&quot;;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;to&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;  protected static final String template = &quot;Hello, %s!, we modified the code&quot;;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;and press the &lt;code&gt;&lt;code&gt;Ctrl+S&lt;/code&gt;&lt;/code&gt; key in order to save the file.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For the OpenShift Application Explorer, right click the component (myservice) and
      click the &lt;code&gt;&lt;code&gt;Push&lt;/code&gt;&lt;/code&gt; menu to send the changes to the cluster: the component will be
      built again on the cluster with the next changes and after a few seconds, it will be
      available again:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer19&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer19.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Select the browser window again, enter &lt;code&gt;&lt;code&gt;demo1&lt;/code&gt;&lt;/code&gt; in the textbox (we need to change
      the value we used before in order to make sure cache is not involved) and click the
       &lt;code&gt;&lt;code&gt;Invoke&lt;/code&gt;&lt;/code&gt; button again:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer20&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer20.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We’ve seen that, through a sequence of code modification(s) followed by a synchronize
      action (push) to the cluster, we can get a very fast feedback. If you don’t want to
      manually synchronize the the cluster (push), you can opt to automatically synchronize
      to the cluster with the &lt;code&gt;&lt;code&gt;Watch&lt;/code&gt;&lt;/code&gt; action: each time a code modification is done locally
      on your workstation, a new build will be automatically launched on the cluster.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect5&quot;&gt;
      &lt;h6 id=&quot;going-further-debug-your-application-on-the-cluster&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#going-further-debug-your-application-on-the-cluster&quot;&gt;&lt;/a&gt;Going further: debug your application on the cluster&lt;/h6&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Testing an application through code changes is a great achievement so far but it
      may be difficult for complex applications where we need to understand how the code behaves
      without the need to use the UI. That’s why the next step is to be able to debug our application live on the cluster.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The new OpenShift Application Explorer allow such a scenario. We will first set up a breakpoint
      in our application code. Select again the &lt;code&gt;&lt;code&gt;HttpApplication.java&lt;/code&gt;&lt;/code&gt; file and scroll
      down to the &lt;code&gt;&lt;code&gt;greeting&lt;/code&gt;&lt;/code&gt; method:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer21&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer21.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;On line 41, double click in the left ruler column so that a breakpoint is set:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer22&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer22.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We are now ready to debug our application. In order to do that, we need to launch
      a local (Java in our case) debugger that will be connected to our application on the
      cluster. This is what the &lt;code&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/code&gt; action is doing: right select the component
      (myservice) and click the &lt;code&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/code&gt; menu: you will see that port forwarding has been
      started so that our local (Java) debugger can connect to the remote Java virtual
      machine:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer23&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer23.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;and then a local (Java) debugger is launched and connected to that port. Let’s check now that we can debug our application:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Select the browser window again, enter &lt;code&gt;&lt;code&gt;demo2&lt;/code&gt;&lt;/code&gt; in the textbox (we need to change
      the value we used before in order to make sure cache is not involved) and click the
       &lt;code&gt;&lt;code&gt;Invoke&lt;/code&gt;&lt;/code&gt; button again: as our breakpoint is hit, you will be asked if you want to
      switch to the &lt;code&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/code&gt; perspective (this may not be displayed if you previously
      selected the &lt;code&gt;&lt;code&gt;Remember my decision&lt;/code&gt;&lt;/code&gt; checkbox:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer24&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer24.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click the &lt;code&gt;&lt;code&gt;Switch&lt;/code&gt;&lt;/code&gt; button and you will see the &lt;code&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/code&gt; perspective:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer25&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer25.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You are now debugging a Java component running on a remote cluster just like it was
      running locally on your workstation. Please note that we demoed this feature using
      a Java based component but we also support the same feature to NodeJS based components.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;quarkus&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus&quot;&gt;&lt;/a&gt;Quarkus&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Starting with this release, we’ve added a new Quarkus tooling for applications built
      on top of the Supersonic Subatomic Java &lt;a href=&quot;https://quarkus.io&quot;&gt;Quarkus&lt;/a&gt; framework.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;quarkus-project-creation-wizard&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus-project-creation-wizard&quot;&gt;&lt;/a&gt;Quarkus project creation wizard&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new wizard has been added to create a new Quarkus application project in your workspace.
      In order to launch it, first enter Ctrl+N to get the list of available wizards&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus1.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the filter text box, enter the &lt;code&gt;&lt;code&gt;qu&lt;/code&gt;&lt;/code&gt; characters to filter the list of wizards:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus2.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Select the &lt;strong&gt;Quarkus Project&lt;/strong&gt; wizard and click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus3.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Project type&lt;/strong&gt; combo allows you to choose between Maven or Gradle tool used to
      manage your project. We’ll go with Maven for this tutorial.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enter a project name (we will use code-with-quarkus) and click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus4&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus4.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This dialog allows you to choose various parameters for you project, like the project
      coordinates (group id, artifact id and version) along with the base REST endpoint information.
      We’ll use the default so click on the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus5&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus5.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This dialog allows to select which Quarkus extensions you want to add to your project.
      The extensions are grouped by categories, so first select a specific category in
      the left table. We will choose the &lt;strong&gt;Web&lt;/strong&gt; one:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus6 1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus6-1.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You should have noticed that the middle table has been updated. In order to add an extension,
      double click on the extension in the middle table. We will add &lt;strong&gt;RESTEasy JAX-RS&lt;/strong&gt; and
      &lt;strong&gt;RESTEasy Qute&lt;/strong&gt; (a templating engine):&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus7 1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus7-1.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You should have noticed that the extensions that you double clicked on are now being added
      to the right table. If you want to remove an extension from the list of selected ones,
      double click again either in the center table or in the right table.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We are now all set so click on the &lt;strong&gt;Finish&lt;/strong&gt; button to launch the project creation.
      The project creation job is then launched, dependencies are being retrieved and
      after a while, the new project will appear in the &lt;strong&gt;Project Explorer&lt;/strong&gt; window:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus8&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus8.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have successfully created our first Quarkus project. Let’s see now how we can launch this application and debug it.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;running-the-quarkus-application&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#running-the-quarkus-application&quot;&gt;&lt;/a&gt;Running the Quarkus application&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Running a Quarkus application can be done from the workbench Run configurations.
      Select the &lt;strong&gt;Run → Run Configurations…​&lt;/strong&gt; menu to display the dialog allowing to create a Run configuration.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus9&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus9.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Scroll down until the &lt;strong&gt;Quarkus Application&lt;/strong&gt; is visible and select it:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus10 1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus10-1.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click on the &lt;strong&gt;New configuration&lt;/strong&gt; button (top left):&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus11 1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus11-1.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A workspace project needs to be associated with the configuration so click on the &lt;strong&gt;Browse&lt;/strong&gt;
      button to see the project selection dialog:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus12 1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus12-1.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As the workspace contains a single project, it is automatically selected and we can click
      on the &lt;strong&gt;OK&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus13 1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus13-1.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The configuration is now ready to be used. So let’s start our Quarkus application by clicking
      on the &lt;strong&gt;Run&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You should see a new Console being displayed.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus14&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus14.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The application is being built and after a while, it will be started:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus15&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus15.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;debugging-the-quarkus-application&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#debugging-the-quarkus-application&quot;&gt;&lt;/a&gt;Debugging the Quarkus application&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Debugging a Quarkus application is just a simple as launching the previous configuration
      we’ve just created in Debug.
      You just need to open the &lt;strong&gt;Run → Debug Configurations…​&lt;/strong&gt;. menu and click on the &lt;strong&gt;Debug&lt;/strong&gt; button.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It will start the Quarkus application like in the previous paragraph but also connect
      a remote JVM debug configuration to your running Quarkus application. So if you have set breakpoints
      in your application source files, the execution will automatically stops there.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;application-properties-content-assist&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#application-properties-content-assist&quot;&gt;&lt;/a&gt;application.properties content assist&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Every Quarkus application is configured through a configuration called
      &lt;strong&gt;application.properties&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The content of this configuration file is dependent of the set of Quarkus
      extensions that your application is using. Some settings are mandatory, some others
      are not and the possible values are specific to the nature of the setting:
      boolean, integer, limited set of values (enumerations).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;So, as a developer, you need to look at various guides and documentations
      (the core Quarkus and the extension specific ones)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;So Quarkus Tools provides content assist on those specific files that:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;validates the content of the application.properties files&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;provides you with the possible setting names and values&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Let’s see it in action.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Go to &lt;strong&gt;src/main/resources/application.properties&lt;/strong&gt; in the project and right click and select &lt;strong&gt;Open With → Generic Text Editor&lt;/strong&gt;:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus16&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus16.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Go the third line of the file and invoke code completion (Ctrl + Space):&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus17&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus17.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For each setting, a documentation is displayed when you mouse over the setting.
      Let try to add &lt;strong&gt;quarkus.http.port&lt;/strong&gt; to the file and mouse over this name:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus18&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus18.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If we enter a wrong value (false instead of a numeric value), then the error will be highlighted:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus19&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus19.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This is the first set of features that will be integration into the next version
      of JBoss Tools. We encourage you to used it and if you are missing features and/or enhancements, don’t hesitate to report them here: &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20JBIDE%20AND%20component%20%3D%20quarkus%20and%20status%20!%3D%20Closed%20and%20status%20!%3D%20Resolved%20&quot;&gt;JBoss Tools issue tracker&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;hibernate-runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-runtime-provider-updates&quot;&gt;&lt;/a&gt;Hibernate Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.12.Final and Hibernate Tools version 5.4.12.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.15.Final and Hibernate Tools version 5.3.15.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;deprecation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#deprecation&quot;&gt;&lt;/a&gt;Deprecation&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Forge, Java Server Tools (JST) and Visual Page Editor (VPE) have been deprecated.
      Even though they received an update with this release, we have no plan to maintain or
      add new features and they may be removed in the future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In addition, the adapters for Red Hat JBoss Enterprise Application Server 4.3 and 5.0
      have also been deprecated.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;platform&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#platform&quot;&gt;&lt;/a&gt;Platform&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;views-dialogs-and-toolbar&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#views-dialogs-and-toolbar&quot;&gt;&lt;/a&gt;Views, Dialogs and Toolbar&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;new-view-menu-icon&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#new-view-menu-icon&quot;&gt;&lt;/a&gt;New view menu icon&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The view menu chevron icon (▽) is replaced by a modern equivalent, the vertical ellipsis ( ⠇).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Almost every view has a menu that may contain additional configuration settings
      like filters, layout settings, and so on. The view menu was often overlooked and
      we expect that this change will help users to find it.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;view menu&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/view_menu.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;find-actions-the-improved-quick-access&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#find-actions-the-improved-quick-access&quot;&gt;&lt;/a&gt;Find Actions: The improved Quick Access&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The formerly called &lt;strong&gt;Quick Access&lt;/strong&gt; action has been retitled to &lt;strong&gt;Find Actions&lt;/strong&gt;
      to better emphasize its goal.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The related UI has changed a bit to improve its usage and accessibility:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The widget item is now a regular toolbar item (button-like)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;An icon is shown&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Right-clicking on the tool item works and shows typical actions, including &lt;strong&gt;Hide&lt;/strong&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;The proposals are now a regular dialog, centered on the workbench&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;These changes will greatly improve the experience if you’re using a screen reader
      as it relies on a more standardized focus state. This also leverages all the default
      and usual accessibility features of dialogs (moveable, resizable…​).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Loading the proposals has been improved as well to avoid UI freezes when loading proposals.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;find-actions-finds-text-in-file-contents&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#find-actions-finds-text-in-file-contents&quot;&gt;&lt;/a&gt;Find Actions finds text in file contents&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Find Actions&lt;/strong&gt; is now extended by the &lt;strong&gt;Quick Text Search&lt;/strong&gt; feature to show the potential text
      matches in file contents also in the proposals.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;file content find action&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/file-content-find-action.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If the Quick Text Search bundle wasn’t started yet, you may miss those matches. In this case,
      you can use &lt;strong&gt;Find Actions&lt;/strong&gt; itself to activate the Quick Text Search by finding and selecting
      the &lt;strong&gt;Activate bundle for 'File content'&lt;/strong&gt; proposals entry.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;activate file content&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/activate-file-content.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;find-actions-lists-workspace-files&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#find-actions-lists-workspace-files&quot;&gt;&lt;/a&gt;Find Actions lists workspace files&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Find Actions&lt;/strong&gt; can now list matching file names from the workspace (similar to the
      &lt;strong&gt;Open Resource&lt;/strong&gt; dialog). Upon selection the file is opened in the editor.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;find actions resources&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/find-actions-resources.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;inline-rename-for-simple-resources-while-in-project-explorer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#inline-rename-for-simple-resources-while-in-project-explorer&quot;&gt;&lt;/a&gt;Inline rename for simple resources while in Project Explorer.&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the &lt;strong&gt;Project Explorer&lt;/strong&gt;, renaming (with the &lt;code&gt;&lt;code&gt;F2&lt;/code&gt;&lt;/code&gt; shortcut or Rename context menu)
      will start an inline rename for normal resources when other files aren’t affected by
      the rename.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;project explorer inline renaming&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/project-explorer-inline-renaming.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In cases where other files are affected by the rename, or the rename operation
      is customized, the rename dialog will appear as it previously did.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;text-editors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#text-editors&quot;&gt;&lt;/a&gt;Text Editors&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;show-problem-markers-inline&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#show-problem-markers-inline&quot;&gt;&lt;/a&gt;Show problem markers inline&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now see the &lt;strong&gt;errors, warnings, and info markers&lt;/strong&gt; inline in most of the
      text editors. No more mousing around to see the actual error message!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;annotation code mining jdt&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/annotation-code-mining-jdt.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can see the available quick fixes by clicking on the message.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;annotation code mining quickfix&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/annotation-code-mining-quickfix.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can enable it on the &lt;strong&gt;General &amp;gt; Editors &amp;gt; Text Editors&lt;/strong&gt; preference page and set
      &lt;strong&gt;Show Code Minings for Annotations&lt;/strong&gt; to:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;None (default)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Errors only&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Errors and Warnings&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Errors, Warnings and Info&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;backspace-delete-can-treat-spaces-as-tabs&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#backspace-delete-can-treat-spaces-as-tabs&quot;&gt;&lt;/a&gt;Backspace/delete can treat spaces as tabs&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you use the &lt;strong&gt;Insert spaces for tabs&lt;/strong&gt; option, now you can also change the
      backspace and delete keys behavior to remove multiple spaces at once, as if
      they were a tab.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The new setting is called &lt;strong&gt;Remove multiple spaces on backspace/delete&lt;/strong&gt; and is
      found on the &lt;strong&gt;General &amp;gt; Editors &amp;gt; Text Editors&lt;/strong&gt; preference page.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;delete spaces as tabs&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/delete-spaces-as-tabs.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;debug&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#debug&quot;&gt;&lt;/a&gt;Debug&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;collapse-all-button-in-the-debug-view&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#collapse-all-button-in-the-debug-view&quot;&gt;&lt;/a&gt;Collapse All Button in the Debug View&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the &lt;strong&gt;Debug&lt;/strong&gt; View, now you can now use the new &lt;strong&gt;Collapse All&lt;/strong&gt; button to collapse
      all the launches.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Before collapsing:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;collapse all debug view before&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/collapse-all-debug-view-before.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;After collapsing:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;collapse all debug view after&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/collapse-all-debug-view-after.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;control-character-interpretation-in-console-view&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#control-character-interpretation-in-console-view&quot;&gt;&lt;/a&gt;Control character interpretation in Console View&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;Console&lt;/strong&gt; View can now interpret the control characters backslash (&lt;code&gt;&lt;code&gt;\b&lt;/code&gt;&lt;/code&gt;)
      and carriage return (&lt;code&gt;&lt;code&gt;\r&lt;/code&gt;&lt;/code&gt;).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This feature is disabled by default. You can enable it on the &lt;strong&gt;Run/Debug &amp;gt; Console&lt;/strong&gt;
      preference page.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;animated progress in console&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/animated-progress-in-console.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;themes-and-styling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#themes-and-styling&quot;&gt;&lt;/a&gt;Themes and Styling&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;improvements-in-ui-forms-styling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#improvements-in-ui-forms-styling&quot;&gt;&lt;/a&gt;Improvements in UI Forms Styling&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;CSS customization of &lt;code&gt;&lt;code&gt;ExpandableComposite&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;Section&lt;/code&gt;&lt;/code&gt; was reworked to
      give you more control over their styling. In dark mode, those elements now
      integrate better with other Form elements.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Old:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;pom dark old&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/pom_dark_old.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;New:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;pom dark new&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/pom_dark_new.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;perspective-switcher-gets-aligned-with-normal-toolbar-styling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#perspective-switcher-gets-aligned-with-normal-toolbar-styling&quot;&gt;&lt;/a&gt;Perspective switcher gets aligned with normal toolbar styling&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The special styling of the &lt;strong&gt;Perspective switcher&lt;/strong&gt; has been removed to make the
      Toolbar look consistent. This also reduces OS specific styling issues with the
      perspective switcher.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Old:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;old perspective switcher&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/old-perspective-switcher.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;New:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;new perspective switcher&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/new-perspective-switcher.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;usage-of-consistent-colors-for-the-dark-theme&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#usage-of-consistent-colors-for-the-dark-theme&quot;&gt;&lt;/a&gt;Usage of consistent colors for the dark theme&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The usage of different shades of gray in the dark theme was reduced.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The styling of the widgets is also not based on the selected view anymore, which
      makes the UI more consistent.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;general-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general-updates&quot;&gt;&lt;/a&gt;General Updates&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;ant-1-10-7&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#ant-1-10-7&quot;&gt;&lt;/a&gt;Ant 1.10.7&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Eclipse has adopted Ant version 1.10.7.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;support-for-the-ant-include-task-added&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#support-for-the-ant-include-task-added&quot;&gt;&lt;/a&gt;Support for the Ant include task added&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Ant &lt;code&gt;&lt;code&gt;include&lt;/code&gt;&lt;/code&gt; task (available in the Ant library since 1.8.0) is now
      fully recognized by the ant-ui-plugin and validated accordingly.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;java-developement-tools-jdt&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#java-developement-tools-jdt&quot;&gt;&lt;/a&gt;Java Developement Tools (JDT)&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;java-13-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#java-13-support&quot;&gt;&lt;/a&gt;Java 13 Support&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;java-13&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#java-13&quot;&gt;&lt;/a&gt;Java 13&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Java™ 13 is available and Eclipse JDT supports Java 13 for the Eclipse 4.14 release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The release notably includes the following Java 13 features:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;JEP 354: Switch Expressions (Preview).&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;JEP 355: Text Blocks (Preview).&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please note that these are preview language feature and hence enable preview option
      should be on. For an informal introduction of the support, please refer to
      &lt;a href=&quot;https://wiki.eclipse.org/Java13/Examples&quot;&gt;Java 13 Examples wiki&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;keyboard-shortcut-for-text-block-creation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#keyboard-shortcut-for-text-block-creation&quot;&gt;&lt;/a&gt;Keyboard shortcut for Text Block creation&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A keyboard shortcut &lt;strong&gt;Ctrl + Shift + '&lt;/strong&gt; is added in the Java Editor for &lt;strong&gt;text
      blocks&lt;/strong&gt;, which is a preview feature added in Java 13.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Conditions under which this keyboard shortcut works are:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The Java Project should have a compliance of 13 or above and the preview features should be enabled.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;The selection in the editor should not be part of a string or a comment or a text block.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Examples:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;textblock pre creation1&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/textblock-pre-creation1.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Pressing the shortcut gives:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;textblock post creation1&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/textblock-post-creation1.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can also encompass a selected text in text block as below:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;textblock pre creation2&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/textblock-pre-creation2.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;On pressing the shortcut, you get this:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;textblock post creation2&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/textblock-post-creation2.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;java-editor&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#java-editor&quot;&gt;&lt;/a&gt;Java Editor&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;remove-unnecessary-array-creation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#remove-unnecessary-array-creation&quot;&gt;&lt;/a&gt;Remove unnecessary array creation&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new cleanup action &lt;strong&gt;Remove unnecessary array creation&lt;/strong&gt; has been added. It will
      remove explicit array creation for &lt;code&gt;&lt;code&gt;varargs&lt;/code&gt;&lt;/code&gt; parameters.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;unnecessary array creation option&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/unnecessary-array-creation-option.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For the given code:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;unnecessary array creation before&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/unnecessary-array-creation-before.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;After cleanup, you get this:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;unnecessary array creation after&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/unnecessary-array-creation-after.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;push-negation-down-in-expression&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#push-negation-down-in-expression&quot;&gt;&lt;/a&gt;Push negation down in expression&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new Java cleanup/save action &lt;strong&gt;Push down negation&lt;/strong&gt; has been added. It reduces
      the double negation by reverting the arithmetic expressions.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For instance:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;code&gt;!!isValid;&lt;/code&gt; becomes &lt;code&gt;isValid;&lt;/code&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;code&gt;!(a != b);&lt;/code&gt; becomes &lt;code&gt;(a == b);&lt;/code&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;push down negation&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/push-down-negation.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;provide-templates-for-empty-java-source-files&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#provide-templates-for-empty-java-source-files&quot;&gt;&lt;/a&gt;Provide templates for empty Java source files&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When dealing with empty Java source files, some basic templates (class, interface, enum)
      will now be available from the content assist popup.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;templates empty java file&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/templates-empty-java-file.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;postfix-completion-proposal-category&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#postfix-completion-proposal-category&quot;&gt;&lt;/a&gt;Postfix completion proposal category&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Postfix completion allows certain kinds of language constructs to be applied to
      the previously entered text.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For example: Entering &lt;code&gt;&lt;code&gt;&quot;input text&quot;.var&lt;/code&gt;&lt;/code&gt; and selecting the
      &lt;strong&gt;var - Creates a new variable&lt;/strong&gt; proposal, will result in &lt;code&gt;&lt;code&gt;String name = &quot;input text&quot;&lt;/code&gt;&lt;/code&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;postfix completion&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/postfix-completion.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;try-with-resources-quickfix&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#try-with-resources-quickfix&quot;&gt;&lt;/a&gt;try-with-resources quickfix&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A quickfix has been added to create a &lt;code&gt;&lt;code&gt;try-with-resources&lt;/code&gt;&lt;/code&gt; statement based on
      the selected lines. Lines that are selected must start with declarations of objects
      that implement &lt;code&gt;&lt;code&gt;AutoCloseable&lt;/code&gt;&lt;/code&gt;. These declarations are added as the resources
      of the &lt;code&gt;&lt;code&gt;try-with-resources&lt;/code&gt;&lt;/code&gt; statement.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If there are selected statements that are not eligible resources (such as Objects
      that don’t implement &lt;code&gt;&lt;code&gt;AutoCloseable&lt;/code&gt;&lt;/code&gt;), then the first such statement and all
      the following selected statements will be placed in the &lt;code&gt;&lt;code&gt;try-with-resources&lt;/code&gt;&lt;/code&gt;
      body.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Method before applying try-with-resources:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;tryWithResource1&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/tryWithResource1.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Select all the lines inside the method, then use the short-cut &lt;strong&gt;Ctrl+1&lt;/strong&gt; and click
      on &lt;strong&gt;Surround with try-with-resources&lt;/strong&gt; from the list:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;tryWithResource2&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/tryWithResource2.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This results in:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;tryWithResource3&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/tryWithResource3.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;javadoc-tag-checking-for-modules&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#javadoc-tag-checking-for-modules&quot;&gt;&lt;/a&gt;Javadoc tag checking for modules&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Support has been added to check the Javadoc of a module-info.java file to report
      missing and duplicate &lt;code&gt;&lt;code&gt;@uses&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;@provides&lt;/code&gt;&lt;/code&gt; tags depending on the
      compiler settings (&lt;strong&gt;Preferences &amp;gt; Java &amp;gt; Compiler &amp;gt; Javadoc&lt;/strong&gt;).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;checkModuleJavadoc&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/checkModuleJavadoc.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;java-formatter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#java-formatter&quot;&gt;&lt;/a&gt;Java Formatter&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;formatting-of-text-blocks&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#formatting-of-text-blocks&quot;&gt;&lt;/a&gt;Formatting of text blocks&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The code formatter can now handle &lt;strong&gt;text blocks&lt;/strong&gt;, which is a preview feature added
      in Java 13. It’s controlled by the &lt;strong&gt;Text block indentation&lt;/strong&gt; setting, found right
      in the &lt;strong&gt;Indentation&lt;/strong&gt; section of the &lt;strong&gt;Profile Editor (Preferences &amp;gt; Java &amp;gt; Code Style &amp;gt; Formatter &amp;gt; Edit…​&lt;/strong&gt;).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;By default, text block lines are indented the same way as wrapped code lines,
      that is with two extra tabs relative to the starting indentation (or whatever is
      set as &lt;strong&gt;Default indentation for wrapped lines&lt;/strong&gt; in the &lt;strong&gt;Line Wrapping&lt;/strong&gt; section).
      You can also set it to use only one tab for indentation (&lt;strong&gt;Indent by one&lt;/strong&gt;), align
      all lines to the position of the opening quotes (&lt;strong&gt;Indent on column&lt;/strong&gt;), or preserve
      the original formatting (&lt;strong&gt;Do not touch&lt;/strong&gt;).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;formatter text block&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/formatter-text-block.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;blank-lines-between-javadoc-tags&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#blank-lines-between-javadoc-tags&quot;&gt;&lt;/a&gt;Blank lines between Javadoc tags&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The code formatter can now divide Javadoc tags into groups (by type, for example
       &lt;code&gt;&lt;code&gt;@param&lt;/code&gt;&lt;/code&gt;, &lt;code&gt;&lt;code&gt;@throws&lt;/code&gt;&lt;/code&gt;, &lt;code&gt;&lt;code&gt;@returns&lt;/code&gt;&lt;/code&gt;) and separate these groups with blank
      lines. This feature can be turned on in the &lt;strong&gt;Comments &amp;gt; Javadocs&lt;/strong&gt; section by
      checking the &lt;strong&gt;Blank lines between tags of different type&lt;/strong&gt; box.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;space-after-not-operator&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#space-after-not-operator&quot;&gt;&lt;/a&gt;Space after not operator&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new setting has been added to control whether a space should be added &lt;strong&gt;after not
      (&lt;code&gt;&lt;code&gt;!&lt;/code&gt;&lt;/code&gt;) operator&lt;/strong&gt;, independently from other unary operators. To find it, expand
      sections &lt;strong&gt;Whitespace &amp;gt; Expressions &amp;gt; Unary&lt;/strong&gt; operators and go to the last checkbox.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;formatter space after not&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/formatter-space-after-not.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;junit&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#junit&quot;&gt;&lt;/a&gt;JUnit&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;bree-update-for-org-eclipse-jdt-junit-runtime&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#bree-update-for-org-eclipse-jdt-junit-runtime&quot;&gt;&lt;/a&gt;BREE update for org.eclipse.jdt.junit.runtime&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Bundle Required Execution Environment (BREE) for the
       &lt;code&gt;&lt;code&gt;org.eclipse.jdt.junit.runtime&lt;/code&gt;&lt;/code&gt; bundle is now J2SE-1.5.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;debug-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#debug-2&quot;&gt;&lt;/a&gt;Debug&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;no-suspending-on-exception-recurrence&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#no-suspending-on-exception-recurrence&quot;&gt;&lt;/a&gt;No suspending on exception recurrence&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new workspace preference has been added for exception breakpoints: &lt;strong&gt;Suspend
      policy for recurring exception instances&lt;/strong&gt; controls whether the same exception
      instance may cause the debugger to suspend more than once.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;preference exception recurrence&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/preference-exception-recurrence.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This option is relevant when debugging an application that has &lt;code&gt;&lt;code&gt;try&lt;/code&gt;&lt;/code&gt; blocks at
      several levels of the architecture. In this situation an exception breakpoint
      may fire multiple times for the same actual exception instance: A &lt;code&gt;&lt;code&gt;throw&lt;/code&gt;&lt;/code&gt;
      statement inside a &lt;code&gt;&lt;code&gt;catch&lt;/code&gt;&lt;/code&gt; block may re-throw the same exception. The same
      holds for each &lt;code&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/code&gt; block or &lt;code&gt;&lt;code&gt;try-with-resources&lt;/code&gt;&lt;/code&gt; block.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When the debugger stops due to an exception breakpoint, you may want to continue
      your debug session by pressing &lt;strong&gt;Resume (F8)&lt;/strong&gt;, but all that catching and re-throwing
      will force you to observe all locations where the same exception will surface again
      and again. Suspending at all &lt;code&gt;&lt;code&gt;try&lt;/code&gt;&lt;/code&gt; blocks on the call stack may also spoil your
      context of open Java editors, by opening more editors of classes that are likely
      irrelevant for the debugging task at hand.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The &lt;strong&gt;JDT Debugger&lt;/strong&gt; will now detect this situation, and the first time it notices the
      same exception instance recurring at the surface, a new question dialog is shown:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;dialog exception recurrence&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.14/images/dialog-exception-recurrence.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you select &lt;strong&gt;Skip&lt;/strong&gt; in this dialog, the current exception instance will be dismissed for good.
      Still, new instances of the same exception type will cause suspending when they are thrown.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you check &lt;strong&gt;Remember my decision&lt;/strong&gt; your choice will be stored in the mentioned workspace
      preference to be effective for all exception breakpoints.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Even after choosing &lt;strong&gt;Skip&lt;/strong&gt; — resp. &lt;strong&gt;Only once&lt;/strong&gt; in the preferences — you can have the old
      behavior simply by pressing &lt;strong&gt;Step Return (F7)&lt;/strong&gt; instead of &lt;strong&gt;Resume&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;jdt-developers&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jdt-developers&quot;&gt;&lt;/a&gt;JDT Developers&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;flag-whether-content-assist-extension-needs-to-run-in-ui-thread&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#flag-whether-content-assist-extension-needs-to-run-in-ui-thread&quot;&gt;&lt;/a&gt;Flag whether content assist extension needs to run in UI thread&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The existing &lt;code&gt;&lt;code&gt;org.eclipse.jdt.ui.javaCompletionProposalComputer&lt;/code&gt;&lt;/code&gt;,
       &lt;code&gt;&lt;code&gt;org.eclipse.jdt.ui.javadocCompletionProposalComputer&lt;/code&gt;&lt;/code&gt; and
       &lt;code&gt;&lt;code&gt;org.eclipse.jdt.ui.javaCompletionProposalSorters&lt;/code&gt;&lt;/code&gt; extension points now allow
      a new attribute &lt;strong&gt;requiresUIThread&lt;/strong&gt; that allows a developer to declare whether running
      in the UI thread is required or not.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This information will be used by the &lt;strong&gt;Content Assist&lt;/strong&gt; operation to allow some
      optimizations and prevent UI freezes by reducing the amount of work happening
      in the UI thread.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;To preserve backward compatibility, the default value for this attribute (if unset)
      is &lt;code&gt;&lt;code&gt;true&lt;/code&gt;&lt;/code&gt;, meaning the extension is expected to run in the UI thread.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;and-more&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#and-more&quot;&gt;&lt;/a&gt;And more…​&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more noteworthy updates in on &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.14.0.Final.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-next&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-next&quot;&gt;&lt;/a&gt;What is next?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Having JBoss Tools 4.14.0 and Red Hat CodeReady Studio 12.14 out we are already working on the next release for Eclipse 2020-03.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 19 Mar 2020 13:04:43 +0000</pubDate>
</item>
<item>
	<title>Webtools News: WTP 3.17 Released!</title>
	<guid isPermaLink="false">http://www.eclipse.org/webtools/news.php#permalink191</guid>
	<link>http://eclipse.org/webtools/releases/3.17</link>
	<description>&lt;div&gt;
		The Eclipse Web Tools Platform 3.17 has been released!
		&lt;a href=&quot;https://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F&quot;&gt;Installation&lt;/a&gt;
		and updates can be performed using the
		Eclipse IDE 2020-03
		&lt;a href=&quot;http://download.eclipse.org/releases/2020-03/&quot;&gt;Update Site&lt;/a&gt;
		or through the
		&lt;a href=&quot;https://marketplace.eclipse.org/user/nitind/listings&quot;&gt;Eclipse Marketplace&lt;/a&gt;
		.
		Release 3.17 is included in the 2020-03
		&lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2020-03/r/eclipse-ide-enterprise-java-developers-includes-incubating-components&quot;&gt;
			Eclipse IDE for Enterprise Java Developers
		&lt;/a&gt;
		, with selected portions also included in several
		&lt;a href=&quot;http://www.eclipse.org/downloads/compare.php&quot;&gt;other packages&lt;/a&gt;
		. Adopters can download
		&lt;a href=&quot;http://download.eclipse.org/webtools/downloads/&quot;&gt;the R3.17 build&lt;/a&gt;
		directly and combine it with the necessary dependencies.&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.eclipse.org/webtools/news.php#permalink191&quot;&gt;More news&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 18 Mar 2020 15:30:59 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: EMF Forms and EMF Client Platform 1.24.0 released!</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=42768</guid>
	<link>https://eclipsesource.com/blogs/2020/03/18/emf-forms-and-emf-client-platform-1-24-0-released/</link>
	<description>&lt;p&gt;We are happy to announce that with the Eclipse Release 2020-03, we have also shipped  EMF Forms and EMF Client Platform...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2020/03/18/emf-forms-and-emf-client-platform-1-24-0-released/&quot; rel=&quot;nofollow&quot;&gt;EMF Forms and EMF Client Platform 1.24.0 released!&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Wed, 18 Mar 2020 14:43:27 +0000</pubDate>
</item>
<item>
	<title>vert.x project: Easy SSO for Vert.x with Keycloak</title>
	<guid isPermaLink="true">https://vertx.io/blog/easy-sso-for-vert-x-with-keycloak</guid>
	<link>https://vertx.io/blog/easy-sso-for-vert-x-with-keycloak</link>
	<description>&lt;article&gt;&lt;h1 id=&quot;easy-sso-for-vert-x-with-keycloak&quot;&gt;Easy SSO for Vert.x with Keycloak&lt;/h1&gt;
&lt;h2 id=&quot;tl-dr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;In this blog post you’ll learn:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How to implement Single Sign-on with OpenID Connect&lt;/li&gt;
&lt;li&gt;How to use Keycloak’s OpenID Discovery to infer OpenID provider configuration&lt;/li&gt;
&lt;li&gt;How to obtain user information&lt;/li&gt;
&lt;li&gt;How to check for authorization&lt;/li&gt;
&lt;li&gt;How to call a Bearer protected service with an Access Token&lt;/li&gt;
&lt;li&gt;How to implement a form based logout&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;hello-blog&quot;&gt;Hello Blog&lt;/h2&gt;
&lt;p&gt;This is my first post in the Vert.x Blog and I must admit that up until now I have never used Vert.x in a real project.
“Why are you here?”, you might ask… Well I currently have two main hobbies, learning new things and securing apps with &lt;a href=&quot;https://www.keycloak.org/&quot;&gt;Keycloak&lt;/a&gt;.
So a few days ago, I stumbled upon the &lt;a href=&quot;https://www.youtube.com/watch?v=LsaXy7SRXMY&amp;amp;list=PLkeCJDaCC2ZsnySdg04Aq9D9FpAZY6K5D&quot;&gt;Introduction to Vert.x video series on youtube&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/infosec812&quot;&gt;Deven Phillips&lt;/a&gt; and I was immediately hooked. Vert.x was a new thing for me, so the next logical step was to figure out how to secure a Vert.x app with Keycloak.&lt;/p&gt;
&lt;p&gt;For this example I build a small web app with Vert.x that shows how to implement Single Sign-on (SSO) with Keycloak
and OpenID Connect, obtain information about the current user, check for roles, call bearer protected services and properly handling logout.&lt;/p&gt;
&lt;h2 id=&quot;keycloak&quot;&gt;Keycloak&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.keycloak.org/&quot;&gt;Keycloak&lt;/a&gt; is a Open Source Identity and Access Management solution which provides support for OpenID Connect
based Singe-Sign on, among many other things. I briefly looked for ways to securing a Vert.x app with Keycloak
and quickly found an &lt;a href=&quot;https://vertx.io/blog/vertx-3-and-keycloak-tutorial/&quot;&gt;older Vert.x Keycloak integration example&lt;/a&gt; in this very blog.
Whilst this is a good start for beginners, the example contains a few issues, e.g.:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It uses hardcoded OpenID provider configuration&lt;/li&gt;
&lt;li&gt;Features a very simplistic integration (for the sake of simplicity)&lt;/li&gt;
&lt;li&gt;No user information used&lt;/li&gt;
&lt;li&gt;No logout functionality is shown&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That somehow nerdsniped me a bit and so it came that, after a long day of consulting work, I sat down to create an example for a complete Keycloak integration based on &lt;a href=&quot;https://vertx.io/docs/vertx-auth-oauth2/java/&quot;&gt;Vert.x OpenID Connect / OAuth2 Support&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So let’s get started!&lt;/p&gt;
&lt;h3 id=&quot;keycloak-setup&quot;&gt;Keycloak Setup&lt;/h3&gt;
&lt;p&gt;To secure a Vert.x app with Keycloak we of course need a Keycloak instance. Although &lt;a href=&quot;https://www.keycloak.org/docs/latest/getting_started/&quot;&gt;Keycloak has a great getting started guide&lt;/a&gt; I wanted to make it a bit easier to put everything together, therefore I prepared a local Keycloak docker container &lt;a href=&quot;https://github.com/thomasdarimont/vertx-playground/tree/master/keycloak-vertx#start-keycloak-with-the-vertx-realm&quot;&gt;as described here&lt;/a&gt; that you can start easily, which comes with all the required configuration in place.&lt;/p&gt;
&lt;p&gt;The preconfigured Keycloak realm named &lt;code&gt;vertx&lt;/code&gt; contains a &lt;code&gt;demo-client&lt;/code&gt; for our Vert.x web app and a set
of users for testing.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs&quot;&gt;docker run \
  -&lt;span class=&quot;ruby&quot;&gt;it \
&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt;-name vertx-keycloak \
&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt;-rm \
&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt;e &lt;span class=&quot;hljs-constant&quot;&gt;KEYCLOAK_USER&lt;/span&gt;=admin \
&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt;e &lt;span class=&quot;hljs-constant&quot;&gt;KEYCLOAK_PASSWORD&lt;/span&gt;=admin \
&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt;e &lt;span class=&quot;hljs-constant&quot;&gt;KEYCLOAK_IMPORT&lt;/span&gt;=&lt;span class=&quot;hljs-regexp&quot;&gt;/tmp/vertx&lt;/span&gt;-realm.json \
&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt;v &lt;span class=&quot;hljs-variable&quot;&gt;$PWD&lt;/span&gt;/vertx-realm.&lt;span class=&quot;hljs-symbol&quot;&gt;json:&lt;/span&gt;/tmp/vertx-realm.json \
&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt;p &lt;span class=&quot;hljs-number&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;8080&lt;/span&gt; \
&lt;/span&gt;  quay.io/keycloak/keycloak:9.0.0&lt;/code&gt;&lt;/pre&gt;


&lt;h2 id=&quot;vert-x-web-app&quot;&gt;Vert.x Web App&lt;/h2&gt;
&lt;p&gt;The simple web app consists of a single &lt;code&gt;Verticle&lt;/code&gt;, runs on &lt;code&gt;http://localhost:8090&lt;/code&gt; and provides a few routes with protected resources. &lt;a href=&quot;https://github.com/thomasdarimont/vertx-playground/blob/master/keycloak-vertx/src/main/java/demo/MainVerticle.java&quot;&gt;You can find the complete example here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The web app contains the following routes with handlers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/&lt;/code&gt; - The unprotected index page&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/protected&lt;/code&gt; - The protected page, which shows a greeting message, users need to login to access pages beneath this path.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/protected/user&lt;/code&gt; - The protected user page, which shows some information about the user.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/protected/admin&lt;/code&gt; - The protected admin page, which shows some information about the admin, only users with role &lt;code&gt;admin&lt;/code&gt; can access this page.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/protected/userinfo&lt;/code&gt; - The protected userinfo page, obtains user information from the bearer token protected userinfo endpoint in Keycloak.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/logout&lt;/code&gt; - The protected logout resource, which triggers the user logout.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;running-the-app&quot;&gt;Running the app&lt;/h3&gt;
&lt;p&gt;To run the app, we need to build our app via:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;cd&lt;/span&gt; keycloak-vertx
mvn clean &lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This creates a runnable jar, which we can run via:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs&quot;&gt;&lt;span class=&quot;hljs-title&quot;&gt;java&lt;/span&gt; -jar target/&lt;span class=&quot;hljs-regexp&quot;&gt;*.jar&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note, that you need to start Keycloak, since our app will try to fetch configuration from Keycloak.&lt;/p&gt;
&lt;p&gt;If the application is running, just browse to: &lt;code&gt;http://localhost:8090/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;An example interaction with the app can be seen in the following gif:
&lt;img alt=&quot;Vert.x Keycloak Integration Demo&quot; src=&quot;https://vertx.io/assets/blog/vertx-keycloak-integration/2020-03-07-vertx-keycloak-integration.gif&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;router-sessionstore-and-csrf-protection&quot;&gt;Router, SessionStore and CSRF Protection&lt;/h3&gt;
&lt;p&gt;We start the configuration of our web app by creating a &lt;code&gt;Router&lt;/code&gt; where we can add custom handler functions for our routes.
To properly handle the authentication state we need to create a &lt;code&gt;SessionStore&lt;/code&gt; and attach it to the &lt;code&gt;Router&lt;/code&gt;.
The &lt;code&gt;SessionStore&lt;/code&gt; is used by our OAuth2/OpenID Connect infrastructure to associate authentication information with a session.
By the way, the &lt;code&gt;SessionStore&lt;/code&gt; can also be clustered if you need to distribute the server-side state.&lt;/p&gt;
&lt;p&gt;Note that if you want to keep your server stateless but still want to support clustering,
then you could provide your own implementation of a &lt;code&gt;SessionStore&lt;/code&gt; which stores the session information
as an encrypted cookie on the Client.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;Router router = Router.router(vertx);

&lt;span class=&quot;hljs-comment&quot;&gt;// Store session information on the server side&lt;/span&gt;
SessionStore sessionStore = LocalSessionStore.create(vertx);
SessionHandler sessionHandler = SessionHandler.create(sessionStore);
router.route().handler(sessionHandler);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In order to protected against CSRF attacks it is good practice to protect HTML forms with a CSRF token.
We need this for our logout form that we’ll see later.&lt;/p&gt;
&lt;p&gt;To do this we configure a &lt;code&gt;CSRFHandler&lt;/code&gt; and add it to our &lt;code&gt;Router&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// CSRF handler setup required for logout form&lt;/span&gt;
String csrfSecret = &lt;span class=&quot;hljs-string&quot;&gt;&quot;zwiebelfische&quot;&lt;/span&gt;;
CSRFHandler csrfHandler = CSRFHandler.create(csrfSecret);
router.route().handler(ctx -&amp;gt; {
            &lt;span class=&quot;hljs-comment&quot;&gt;// Ensures that the csrf token request parameter is available for the CsrfHandler&lt;/span&gt;
            &lt;span class=&quot;hljs-comment&quot;&gt;// after the logout form was submitted.&lt;/span&gt;
            &lt;span class=&quot;hljs-comment&quot;&gt;// See &quot;Handling HTML forms&quot; https://vertx.io/docs/vertx-core/java/#_handling_requests&lt;/span&gt;
            ctx.request().setExpectMultipart(&lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;);
            ctx.request().endHandler(v -&amp;gt; csrfHandler.handle(ctx));
        }
);&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;keycloak-setup-via-openid-connect-discovery&quot;&gt;Keycloak Setup via OpenID Connect Discovery&lt;/h3&gt;
&lt;p&gt;Our app is registered as a confidential OpenID Connect client with Authorization Code Flow in Keycloak,
thus we need to configure &lt;code&gt;client_id&lt;/code&gt; and &lt;code&gt;client_secret&lt;/code&gt;. Confidential clients are typically used
for server-side web applications, where one can securely store the &lt;code&gt;client_secret&lt;/code&gt;. You can find out more
about&lt;a href=&quot;https://www.keycloak.org/docs/latest/server_admin/index.html#_access-type&quot;&gt;The different Client Access Types&lt;/a&gt; in the Keycloak documentation.&lt;/p&gt;
&lt;p&gt;Since we don’t want to configure things like OAuth2 / OpenID Connect Endpoints ourselves, we use Keycloak’s OpenID Connect discovery endpoint to infer the necessary Oauth2 / OpenID Connect endpoint URLs.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;String hostname = System.getProperty(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http.host&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;localhost&quot;&lt;/span&gt;);
&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; port = Integer.getInteger(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http.port&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8090&lt;/span&gt;);
String baseUrl = String.format(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://%s:%d&quot;&lt;/span&gt;, hostname, port);
String oauthCallbackPath = &lt;span class=&quot;hljs-string&quot;&gt;&quot;/callback&quot;&lt;/span&gt;;

OAuth2ClientOptions clientOptions = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; OAuth2ClientOptions()
    .setFlow(OAuth2FlowType.AUTH_CODE)
    .setSite(System.getProperty(&lt;span class=&quot;hljs-string&quot;&gt;&quot;oauth2.issuer&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://localhost:8080/auth/realms/vertx&quot;&lt;/span&gt;))
    .setClientID(System.getProperty(&lt;span class=&quot;hljs-string&quot;&gt;&quot;oauth2.client_id&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;demo-client&quot;&lt;/span&gt;))
    .setClientSecret(System.getProperty(&lt;span class=&quot;hljs-string&quot;&gt;&quot;oauth2.client_secret&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;1f88bd14-7e7f-45e7-be27-d680da6e48d8&quot;&lt;/span&gt;));

KeycloakAuth.discover(vertx, clientOptions, asyncResult -&amp;gt; {

    OAuth2Auth oauth2Auth = asyncResult.result();

    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (oauth2Auth == &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;) {
        &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Could not configure Keycloak integration via OpenID Connect Discovery Endpoint. Is Keycloak running?&quot;&lt;/span&gt;);
    }

    AuthHandler oauth2 = OAuth2AuthHandler.create(oauth2Auth, baseUrl + oauthCallbackPath)
        .setupCallback(router.get(oauthCallbackPath))
        &lt;span class=&quot;hljs-comment&quot;&gt;// Additional scopes: openid for OpenID Connect&lt;/span&gt;
        .addAuthority(&lt;span class=&quot;hljs-string&quot;&gt;&quot;openid&quot;&lt;/span&gt;);

    &lt;span class=&quot;hljs-comment&quot;&gt;// session handler needs access to the authenticated user, otherwise we get an infinite redirect loop&lt;/span&gt;
    sessionHandler.setAuthProvider(oauth2Auth);

    &lt;span class=&quot;hljs-comment&quot;&gt;// protect resources beneath /protected/* with oauth2 handler&lt;/span&gt;
    router.route(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/protected/*&quot;&lt;/span&gt;).handler(oauth2);

    &lt;span class=&quot;hljs-comment&quot;&gt;// configure route handlers&lt;/span&gt;
    configureRoutes(router, webClient, oauth2Auth);
});

getVertx().createHttpServer().requestHandler(router).listen(port);&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;route-handlers&quot;&gt;Route handlers&lt;/h3&gt;
&lt;p&gt;We configure our route handlers via &lt;code&gt;configureRoutes&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;configureRoutes&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Router router, WebClient webClient, OAuth2Auth oauth2Auth)&lt;/span&gt; &lt;/span&gt;{

    router.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt;).handler(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;::handleIndex);

    router.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/protected&quot;&lt;/span&gt;).handler(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;::handleGreet);
    router.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/protected/user&quot;&lt;/span&gt;).handler(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;::handleUserPage);
    router.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/protected/admin&quot;&lt;/span&gt;).handler(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;::handleAdminPage);

    &lt;span class=&quot;hljs-comment&quot;&gt;// extract discovered userinfo endpoint url&lt;/span&gt;
    String userInfoUrl =  ((OAuth2AuthProviderImpl)oauth2Auth).getConfig().getUserInfoPath();
    router.get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/protected/userinfo&quot;&lt;/span&gt;).handler(createUserInfoHandler(webClient, userInfoUrl));

    router.post(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/logout&quot;&lt;/span&gt;).handler(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;::handleLogout);
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The index handler exposes an unprotected resource:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;handleIndex&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(RoutingContext ctx)&lt;/span&gt; &lt;/span&gt;{
    respondWithOk(ctx, &lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;h1&gt;Welcome to Vert.x Keycloak Example&lt;/h1&gt;&lt;br /&gt;&lt;a href=&quot;https://vertx.io/feed.xml&quot;&gt;Protected&lt;/a&gt;&quot;&lt;/span&gt;);
}&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;extract-user-information-from-the-openid-connect-id-token&quot;&gt;Extract User Information from the OpenID Connect ID Token&lt;/h3&gt;
&lt;p&gt;Our app exposes a simple greeting page which shows some information about the user and provides links to other pages.&lt;/p&gt;
&lt;p&gt;The user greeting handler is protected by the Keycloak OAuth2 / OpenID Connect integration. To show information about
the current user, we first need to call the &lt;code&gt;ctx.user()&lt;/code&gt; method to get an user object we can work with.
To access the OAuth2 token information, we need to cast it to &lt;code&gt;OAuth2TokenImpl&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can extract the user information like the username from the &lt;code&gt;IDToken&lt;/code&gt; exposed by the user object via &lt;code&gt;user.idToken().getString(&quot;preferred_username&quot;)&lt;/code&gt;.
Note, there are many more claims like (name, email, givenanme, familyname etc.) available. The &lt;a href=&quot;https://openid.net/specs/openid-connect-core-1_0.html#Claims&quot;&gt;OpenID Connect Core Specification&lt;/a&gt; contains a list of available claims.&lt;/p&gt;
&lt;p&gt;We also generate a list with links to the other pages which are supported:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;handleGreet&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(RoutingContext ctx)&lt;/span&gt; &lt;/span&gt;{

    OAuth2TokenImpl oAuth2Token = (OAuth2TokenImpl) ctx.user();

    String username = oAuth2Token.idToken().getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;preferred_username&quot;&lt;/span&gt;);

    String greeting = String.format(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;h1&gt;Hi %s @%s&lt;/h1&gt;&lt;ul&gt;&quot; +
            &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;li&gt;&lt;a href=&quot;https://vertx.io/feed.xml&quot;&gt;User Area&lt;/a&gt;&lt;/li&gt;&quot;&lt;/span&gt; +
            &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;li&gt;&lt;a href=&quot;https://vertx.io/feed.xml&quot;&gt;Admin Area&lt;/a&gt;&lt;/li&gt;&quot;&lt;/span&gt; +
            &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;li&gt;&lt;a href=&quot;https://vertx.io/feed.xml&quot;&gt;User Info (Remote Call)&lt;/a&gt;&lt;/li&gt;&quot;&lt;/span&gt; +
            &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;/span&gt;&lt;/ul&gt;&quot;&lt;/span&gt;, username, Instant.now());

    String logoutForm = createLogoutForm(ctx);

    respondWithOk(ctx, &lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html&quot;&lt;/span&gt;, greeting + logoutForm);
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The user page handler shows information about the current user:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;handleUserPage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(RoutingContext ctx)&lt;/span&gt; &lt;/span&gt;{

    OAuth2TokenImpl user = (OAuth2TokenImpl) ctx.user();

    String username = user.idToken().getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;preferred_username&quot;&lt;/span&gt;);
    String displayName = oAuth2Token.idToken().getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;);

    String content = String.format(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;h1&gt;User Page: %s (%s) @%s&lt;/h1&gt;&lt;a href=&quot;https://vertx.io/feed.xml&quot;&gt;Protected Area&lt;/a&gt;&quot;&lt;/span&gt;,
                                   username, displayName, Instant.now());
    respondWithOk(ctx, &lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html&quot;&lt;/span&gt;, content);
}&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;authorization-checking-for-required-roles&quot;&gt;Authorization: Checking for Required Roles&lt;/h3&gt;
&lt;p&gt;Our app exposes a simple admin page which shows some information for admins, which should only be visible for admins. Thus we require that users must have the &lt;code&gt;admin&lt;/code&gt; realm role in Keycloak to be able to access the admin page.&lt;/p&gt;
&lt;p&gt;This is done via a call to &lt;code&gt;user.isAuthorized(&quot;realm:admin&quot;, cb)&lt;/code&gt;. The handler function &lt;code&gt;cb&lt;/code&gt; exposes
the result of the authorization check via the &lt;code&gt;AsyncResult res&lt;/code&gt;. If the current user has the
&lt;code&gt;admin&lt;/code&gt; role then the result is &lt;code&gt;true&lt;/code&gt; otherwise &lt;code&gt;false&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;handleAdminPage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(RoutingContext ctx)&lt;/span&gt; &lt;/span&gt;{

    OAuth2TokenImpl user = (OAuth2TokenImpl) ctx.user();

    &lt;span class=&quot;hljs-comment&quot;&gt;// check for realm-role &quot;admin&quot;&lt;/span&gt;
    user.isAuthorized(&lt;span class=&quot;hljs-string&quot;&gt;&quot;realm:admin&quot;&lt;/span&gt;, res -&amp;gt; {

        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!res.succeeded() || !res.result()) {
            respondWith(ctx, &lt;span class=&quot;hljs-number&quot;&gt;403&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;h1&gt;Forbidden&lt;/h1&gt;&quot;&lt;/span&gt;);
            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;
        }

        String username = user.idToken().getString(&lt;span class=&quot;hljs-string&quot;&gt;&quot;preferred_username&quot;&lt;/span&gt;);

        String content = String.format(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;h1&gt;Admin Page: %s @%s&lt;/h1&gt;&lt;a href=&quot;https://vertx.io/feed.xml&quot;&gt;Protected Area&lt;/a&gt;&quot;&lt;/span&gt;,
                                        username, Instant.now());
        respondWithOk(ctx, &lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html&quot;&lt;/span&gt;, content);
    });
}&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;call-services-protected-with-bearer-token&quot;&gt;Call Services protected with Bearer Token&lt;/h4&gt;
&lt;p&gt;Often we need to call other services from our web app that are protected via Bearer Authentication. This means
that we need a valid &lt;code&gt;access token&lt;/code&gt; to access a resource provided on another server.&lt;/p&gt;
&lt;p&gt;To demonstrate this we use Keycloak’s &lt;code&gt;/userinfo&lt;/code&gt; endpoint as a straw man to demonstrate backend calls with a bearer token.&lt;/p&gt;
&lt;p&gt;We can obtain the current valid &lt;code&gt;access token&lt;/code&gt; via &lt;code&gt;user.opaqueAccessToken()&lt;/code&gt;.
Since we use a &lt;code&gt;WebClient&lt;/code&gt; to call the protected endpoint, we need to pass the &lt;code&gt;access token&lt;/code&gt;
via the &lt;code&gt;Authorization&lt;/code&gt; header by calling &lt;code&gt;bearerTokenAuthentication(user.opaqueAccessToken())&lt;/code&gt;
in the current &lt;code&gt;HttpRequest&lt;/code&gt; object:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Handler &lt;span class=&quot;hljs-title&quot;&gt;createUserInfoHandler&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(WebClient webClient, String userInfoUrl)&lt;/span&gt; &lt;/span&gt;{

    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (RoutingContext ctx) -&amp;gt; {

        OAuth2TokenImpl user = (OAuth2TokenImpl) ctx.user();

        URI userInfoEndpointUri = URI.create(userInfoUrl);
        webClient
            .get(userInfoEndpointUri.getPort(), userInfoEndpointUri.getHost(), userInfoEndpointUri.getPath())
            &lt;span class=&quot;hljs-comment&quot;&gt;// use the access token for calls to other services protected via JWT Bearer authentication&lt;/span&gt;
            .bearerTokenAuthentication(user.opaqueAccessToken())
            .as(BodyCodec.jsonObject())
            .send(ar -&amp;gt; {

                &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!ar.succeeded()) {
                    respondWith(ctx, &lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;application/json&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;{}&quot;&lt;/span&gt;);
                    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;
                }

                JsonObject body = ar.result().body();
                respondWithOk(ctx, &lt;span class=&quot;hljs-string&quot;&gt;&quot;application/json&quot;&lt;/span&gt;, body.encode());
            });
    };
}&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;handle-logout&quot;&gt;Handle logout&lt;/h3&gt;
&lt;p&gt;Now that we got a working SSO login with authorization, it would be great if we would allow users to logout again.
To do this we can leverage the built-in OpenID Connect logout functionality which can be called via &lt;code&gt;oAuth2Token.logout(cb)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The handler function &lt;code&gt;cb&lt;/code&gt; exposes the result of the logout action via the &lt;code&gt;AsyncResult res&lt;/code&gt;.
If the logout was successfull we destory our session via &lt;code&gt;ctx.session().destroy()&lt;/code&gt; and redirect the user to the index page.&lt;/p&gt;
&lt;p&gt;The logout form is generated via the &lt;code&gt;createLogoutForm&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;As mentioned earlier, we need to protect our logout form with a CSRF token to prevent &lt;a href=&quot;https://owasp.org/www-community/attacks/csrf&quot;&gt;CSRF attacks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note: If we had endpoints that would accept data sent to the server, then we’d need to guard those endpoints with an CSRF token as well.&lt;/p&gt;
&lt;p&gt;We need to obtain the generated &lt;code&gt;CSRFToken&lt;/code&gt; and render it into a hidden form input field that’s transfered via HTTP POST when the logout form is submitted:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;handleLogout&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(RoutingContext ctx)&lt;/span&gt; &lt;/span&gt;{

    OAuth2TokenImpl oAuth2Token = (OAuth2TokenImpl) ctx.user();
    oAuth2Token.logout(res -&amp;gt; {

        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (!res.succeeded()) {
            &lt;span class=&quot;hljs-comment&quot;&gt;// the user might not have been logged out, to know why:&lt;/span&gt;
            respondWith(ctx, &lt;span class=&quot;hljs-number&quot;&gt;500&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html&quot;&lt;/span&gt;, String.format(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;h1&gt;Logout failed %s&lt;/h1&gt;&quot;&lt;/span&gt;, res.cause()));
            &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;
        }

        ctx.session().destroy();
        ctx.response().putHeader(&lt;span class=&quot;hljs-string&quot;&gt;&quot;location&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;/?logout=true&quot;&lt;/span&gt;).setStatusCode(&lt;span class=&quot;hljs-number&quot;&gt;302&lt;/span&gt;).end();
    });
}

&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;createLogoutForm&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(RoutingContext ctx)&lt;/span&gt; &lt;/span&gt;{

    String csrfToken = ctx.get(CSRFHandler.DEFAULT_HEADER_NAME);

    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;form action=&quot;https://vertx.io/feed.xml&quot;&gt;&quot;
            + String.format(&lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;input type=&quot;&quot; /&gt;&quot;&lt;/span&gt;, CSRFHandler.DEFAULT_HEADER_NAME, csrfToken)
            + &lt;span class=&quot;hljs-string&quot;&gt;&quot;&lt;button&gt;Logout&lt;/button&gt;&quot;&lt;/span&gt;&lt;/form&gt;;
}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Some additional plumbing:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;respondWithOk&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(RoutingContext ctx, String contentType, String content)&lt;/span&gt; &lt;/span&gt;{
    respondWith(ctx, &lt;span class=&quot;hljs-number&quot;&gt;200&lt;/span&gt;, contentType, content);
}

&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;respondWith&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(RoutingContext ctx, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; statusCode, String contentType, String content)&lt;/span&gt; &lt;/span&gt;{
    ctx.request().response() &lt;span class=&quot;hljs-comment&quot;&gt;//&lt;/span&gt;
            .putHeader(&lt;span class=&quot;hljs-string&quot;&gt;&quot;content-type&quot;&lt;/span&gt;, contentType) &lt;span class=&quot;hljs-comment&quot;&gt;//&lt;/span&gt;
            .setStatusCode(statusCode)
            .end(content);
}&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;more-examples&quot;&gt;More examples&lt;/h2&gt;
&lt;p&gt;This concludes the Keycloak integration example.&lt;/p&gt;
&lt;p&gt;Check out the complete example in &lt;a href=&quot;https://github.com/thomasdarimont/vertx-playground/tree/master/keycloak-vertx&quot;&gt;keycloak-vertx Examples Repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thank you for your time, stay tuned for more updates! If you want to learn more about Keycloak, feel free to reach out to me. You can find me via &lt;a href=&quot;https://twitter.com/thomasdarimont&quot;&gt;thomasdarimont on twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy Hacking!&lt;/p&gt;
&lt;/article&gt;</description>
	<pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Niko Stotz: MPS’ Quest of the Holy GraalVM of Interpreters</title>
	<guid isPermaLink="false">https://www.nikostotz.de/blog/?p=458</guid>
	<link>https://www.nikostotz.de/blog/mps-quest-of-the-holy-graalvm-of-interpreters/</link>
	<description>&lt;p&gt;A vision how to combine MPS and GraalVM&lt;/p&gt;
&lt;p&gt;Way too long ago, I &lt;a href=&quot;https://www.nikostotz.de/blog/high-performance-interpreters-for-jetbrains-mps/&quot;&gt;prototyped&lt;/a&gt; a way to use &lt;a href=&quot;https://www.graalvm.org/&quot;&gt;GraalVM&lt;/a&gt; and &lt;a href=&quot;https://github.com/oracle/graal/tree/master/truffle&quot;&gt;Truffle&lt;/a&gt; inside &lt;a href=&quot;https://www.jetbrains.com/mps/&quot;&gt;JetBrains MPS&lt;/a&gt;. I hope to pick up this work soon. In this article, I describe the &lt;em&gt;grand picture&lt;/em&gt; of what might be possible with this combination.&lt;/p&gt;
&lt;h2 id=&quot;_part_i_get_it_working&quot;&gt;Part I: Get it Working&lt;/h2&gt;
&lt;h3 id=&quot;_step_0_teach_annotation_processors_to_mps&quot;&gt;Step 0: Teach Annotation Processors to MPS&lt;/h3&gt;
&lt;p&gt;Truffle uses &lt;a href=&quot;https://docs.oracle.com/en/java/javase/13/docs/api/java.compiler/javax/annotation/processing/Processor.html&quot;&gt;Java Annotation Processors&lt;/a&gt; heavily. Unfortunately, MPS doesn’t support them during its internal Java compilation. The &lt;a href=&quot;https://youtrack.jetbrains.com/issue/MPS-27653&quot;&gt;feature request&lt;/a&gt; doesn’t show any activity.&lt;/p&gt;
&lt;p&gt;So, we have to do it ourselves. A little less time ago, I started with an &lt;a href=&quot;https://github.com/enikao/mps-annotation-processor-facet/tree/intermediate-state&quot;&gt;alternative Java Facet&lt;/a&gt; to include Annotation Processors. I just pushed my work-in-progress state from 2018. As far as I remember, there were no fundamental problems with the approach.&lt;/p&gt;
&lt;h3 id=&quot;_optional_step_1_teach_truffle_structured_sources&quot;&gt;Optional Step 1: Teach Truffle Structured Sources&lt;/h3&gt;
&lt;p&gt;For Truffle, all executed programs stem from a &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/source/Source.html&quot;&gt;&lt;tt&gt;Source&lt;/tt&gt;&lt;/a&gt;. However, this &lt;tt&gt;Source&lt;/tt&gt; can only provide &lt;tt&gt;Byte&lt;/tt&gt;s or &lt;tt&gt;Character&lt;/tt&gt;s. In our case, we want to provide the input model. The prototype just put the &lt;em&gt;Node id&lt;/em&gt; of the input model as a String into the Source; later steps resolved the id against MPS API. This approach works and is acceptable; directly passing the input node as object would be much nicer.&lt;/p&gt;
&lt;h3 id=&quot;_step_2_implement_truffle_annotations_as_mps_language&quot;&gt;Step 2: Implement Truffle Annotations as MPS Language&lt;/h3&gt;
&lt;p&gt;We have to provide all additional hints as Annotations to Truffle. They are complex enough, so we want to leverage MPS’ language features to directly represent all Truffle concepts.&lt;/p&gt;
&lt;p&gt;This might be a simple one-to-one representation of Java Annotations as MPS Concepts, but I’d guess we can add some more semantics and checks. Such feedback within MPS should simplify the next steps: Annotation Processors (and thus, Truffle) have only limited options to report issues back to us.&lt;/p&gt;
&lt;p&gt;We use this MPS language to implement the interpreter for our DSL. This results in a &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/TruffleLanguage.html&quot;&gt;&lt;tt&gt;TruffleLanguage&lt;/tt&gt;&lt;/a&gt; for our DSL.&lt;/p&gt;
&lt;h3 id=&quot;_step_3_start_truffle_within_mps&quot;&gt;Step 3: Start Truffle within MPS&lt;/h3&gt;
&lt;p&gt;At the time when I wrote the proof-of-concept, a &lt;tt&gt;TruffleLanguage&lt;/tt&gt; had to be loaded at JVM startup. To my understanding, Truffle overcame this limitation. I haven’t looked into the current possibilities in detail yet.&lt;/p&gt;
&lt;p&gt;I can imagine two ways to provide our DSL interpreter to the Truffle runtime:&lt;/p&gt;
&lt;ol class=&quot;loweralpha&quot; type=&quot;a&quot;&gt;
&lt;li&gt;Always register &lt;tt&gt;MpsTruffleLanguage1&lt;/tt&gt;, &lt;tt&gt;MpsTruffleLanguage2&lt;/tt&gt;, etc. as placeholders. This would also work at JVM startup. If required, we can register additional placeholders with one JVM restart.&lt;br /&gt;
All &lt;em&gt;non-colliding&lt;/em&gt; DSL interpreters would be &lt;tt&gt;MpsTruffleLanguage1&lt;/tt&gt; from Truffle’s point of view. This works, as we know the MPS language for each input model, and can make sure Truffle uses the right evaluation for the node at hand. We might suffer a performance loss, as Truffle had to manage more evaluations.&lt;p&gt;&lt;/p&gt;
&lt;p&gt;What are non-colliding interpreters? Assume we have a state machine DSL, an expression DSL, and a test DSL. The expression DSL is used within the state machines; we provide an interpreter for both of them.&lt;br /&gt;
We provide two interpreters for the test DSL: One executes the test and checks the assertions, the other one only marks model nodes that are covered by the test.&lt;br /&gt;
The state machine interpreter, the expression interpreter, and the first test interpreter are non-colliding, as they never want to execute on the same model node. All of them go to &lt;tt&gt;MpsTruffleLanguage1&lt;/tt&gt;.&lt;br /&gt;
The second test interpreter &lt;em&gt;does&lt;/em&gt; collide, as it wants to do something with a node also covered by the other interpreters. We put it to &lt;tt&gt;MpsTruffleLanguage2&lt;/tt&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;We register every DSL interpreter as a separate &lt;tt&gt;TruffleLanguage&lt;/tt&gt;. Nice and clean one-to-one relation. In this scenario, we probably had to get &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/interop/InteropLibrary.html&quot;&gt;Truffle Language Interop&lt;/a&gt; right. I have not yet investigated this topic.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;translate-input-model&quot;&gt;Step 4: Translate Input Model to Truffle Nodes&lt;/h3&gt;
&lt;p&gt;A lot of Truffle’s magic stems from its AST representation. Thus, we need to translate our input model (a.k.a. DSL instance, a.k.a. program to execute) from MPS nodes into &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/nodes/Node.html&quot;&gt;Truffle &lt;tt&gt;Node&lt;/tt&gt;s&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ideally, the Truffle AST would dynamically adopt any changes of the input model — like hot code replacement in a debugger, except we don’t want to stop the running program. From Truffle’s point of view this shouldn’t be a problem: It rewrites the AST all the time anyway.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ModelingValueGroup/DclareForMPS&quot;&gt;DclareForMPS&lt;/a&gt; seems a fitting technology. We define mapping rules from MPS node to Truffle &lt;tt&gt;Node&lt;/tt&gt;. Dclare makes sure they are in sync, and input changes are propagated optimally. These rules could either be generic, or be generated from the interpreter definition.&lt;/p&gt;
&lt;p&gt;We need to take care that Dclare doesn’t try to adapt the MPS nodes to Truffle’s optimizing AST changes (no back-propagation).&lt;/p&gt;
&lt;p&gt;We require special handling for edge cases of MPS → Truffle change propagation, e.g. the user deletes the currently executed part of the program.&lt;/p&gt;
&lt;p&gt;For memory optimization, we might translate only the entry nodes of our input model immediately. Instead of the actual child Truffle &lt;tt&gt;Node&lt;/tt&gt;s, we’d add special nodes that translate the next part of the AST.&lt;br /&gt;
Unloading the not required parts might be an issue. Also, on-demand processing seems to conflict with Dclare’s rule-based approach.&lt;/p&gt;
&lt;h2 id=&quot;_part_ii_adapt_to_mps&quot;&gt;Part II: Adapt to MPS&lt;/h2&gt;
&lt;h3 id=&quot;_step_5_re_create_interpreter_language&quot;&gt;Step 5: Re-create Interpreter Language&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;http://mbeddr.com/interpreter/Interpreter.html&quot;&gt;MPS interpreter framework&lt;/a&gt; removes even more boilerplate from writing interpreters than Truffle. The same language concepts should be built again, as abstraction on top of the Truffle Annotation DSL. This would be a new language aspect.&lt;/p&gt;
&lt;h3 id=&quot;migrate-framework&quot;&gt;Step 6: Migrate MPS Interpreter Framework&lt;/h3&gt;
&lt;p&gt;Once we had the Truffle-based interpreter language, we want to use it! Also, we don’t want to rewrite all our nice interpreters.&lt;/p&gt;
&lt;p&gt;I think it’s feasible to automatically migrate at least large parts of the existing MPS interpreter framework to the new language. I would expect some manual adjustment, though. That’s the price we had to pay for two orders of magnitude performance improvement.&lt;/p&gt;
&lt;h3 id=&quot;plumbing&quot;&gt;Step 7: Provide Plumbing for BaseLanguage, Checking Rules, Editors, and Tests&lt;/h3&gt;
&lt;p&gt;Using the interpreter should be as easy as possible. Thus, we have to provide the appropriate utilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Call the interpreter from any BaseLanguage code.&lt;br /&gt;
We had to make sure we get language / model loading and dependencies right. This should be easier with Truffle than with the current interpreter, as most language dependencies are only required at interpreter build time.&lt;/li&gt;
&lt;li&gt;Report interpreter results in Checking Rules.&lt;br /&gt;
Creating warnings or errors based on the interpreter’s results is a standard use-case, and should be supported by dedicated language constructs.&lt;/li&gt;
&lt;li&gt;Show interpreter results in an editor.&lt;br /&gt;
As another standard use-case, we might want to show the interpreter’s results (or a derivative) inside an MPS editor. Especially for long-running or asynchronous calculations, getting this right is tricky. Dedicated editor extensions should take care of the details.&lt;/li&gt;
&lt;li&gt;Run tests that involve the interpreter.&lt;br /&gt;
Yet another standard use-case: our DSL defines both calculation rules and examples. We want to assure they are in sync, meaning executing the rules in our DSL interpreter and comparing the results with the examples. This must work both inside MPS, and in a headless build / CI test environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;_step_8_support_asynchronous_interpretation_andor_caching&quot;&gt;Step 8: Support Asynchronous Interpretation and/or Caching&lt;/h3&gt;
&lt;p&gt;The simple implementation of interpreter support accepts a language, parameters, and a program (a.k.a. input model), and blocks until the interpretation is complete.&lt;/p&gt;
&lt;p&gt;This working mode is useful in various situations. However, we might want to run long-running interpretations in the background, and notify a callback once the computation is finished.&lt;/p&gt;
&lt;p&gt;Example: An MPS editor uses an interpreter to color a rule red if it is not in accordance with a provided example. This interpretation result is very useful, even if it takes several seconds to calculate. However, we don’t want to block the editor (or even whole MPS) for that long.&lt;/p&gt;
&lt;p&gt;Extending the example, we might also want to show an error on such a rule. The typesystem runs asynchronously anyways, so blocking is not an issue. However, we now run the same expensive interpretation twice. The interpreter support should provide configurable caching mechanisms to avoid such waste.&lt;/p&gt;
&lt;p&gt;Both asynchronous interpretation and caching benefit from proper &lt;a href=&quot;https://www.nikostotz.de/blog/feed/#plumbing&quot;&gt;language extensions&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;_step_9_integrate_with_mps_typesystem_and_scoping&quot;&gt;Step 9: Integrate with MPS Typesystem and Scoping&lt;/h3&gt;
&lt;p&gt;Truffle needs to know about our DSL’s types, e.g. for resolving overloaded functions or type casting. We already provide this information to the MPS typesystem. I didn’t look into the details yet; I’d expect we could generate at least part of the Truffle input from MPS’ type aspect.&lt;/p&gt;
&lt;p&gt;Truffle requires scoping knowledge to store variables in the right stack frame (and possibly other things I don’t understand yet). I’d expect we could use the resolved references in our model as input to Truffle. I’m less optimistic to re-use MPS’ actual scoping system.&lt;/p&gt;
&lt;p&gt;For both aspects, we can amend the missing information in the Interpreter Language, similar to the existing one.&lt;/p&gt;
&lt;h3 id=&quot;_step_10_support_interpreter_development&quot;&gt;Step 10: Support Interpreter Development&lt;/h3&gt;
&lt;p&gt;As DSL developers, we want to make sure we implemented our interpreter correctly. Thus, we write tests; they are similar to other &lt;a href=&quot;https://www.nikostotz.de/blog/feed/#plumbing&quot;&gt;tests involving the interpreter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, if they fail, we &lt;em&gt;don’t&lt;/em&gt; want to &lt;a href=&quot;https://www.nikostotz.de/blog/feed/#debugger&quot;&gt;debug the program expressed in our DSL&lt;/a&gt;, but our interpreter. For example, we might implement the interpreter for a &lt;tt&gt;switch&lt;/tt&gt;-like construct, and had forgotten to handle an implicit &lt;tt&gt;default&lt;/tt&gt; case.&lt;/p&gt;
&lt;p&gt;Using a regular Java debugger (attached to our running MPS instance) has only limited use, as we had to debug through the highly optimized Truffle code. We cannot use Truffle’s debugging capabilities, as they work on the DSL.&lt;br /&gt;
There might be ways to attach a regular Java debugger running inside MPS in a different thread to its own JVM. Combining the direct debugger access with our knowledge of the interpreter’s structure, we might be able to provide sensible stepping through the interpreter to the DSL developer.&lt;/p&gt;
&lt;p&gt;Simpler ways to support the developers might be providing traces through the interpreter, or ship test support where the DSL developer can assure specific evaluators were (not) executed.&lt;/p&gt;
&lt;h3 id=&quot;_step_11_create_language_for_interop&quot;&gt;Step 11: Create Language for Interop&lt;/h3&gt;
&lt;p&gt;Truffle provides a framework to describe any runtime in-memory data structure as &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/object/Shape.html&quot;&gt;&lt;tt&gt;Shape&lt;/tt&gt;&lt;/a&gt;, and to convert them between languages. This should be a nice extension of MPS’ multi-language support into the runtime space, supported by an appropriate Meta-DSL (a.k.a. language aspect).&lt;/p&gt;
&lt;h2 id=&quot;_part_iii_leverage_programming_language_tooling&quot;&gt;Part III: Leverage Programming Language Tooling&lt;/h2&gt;
&lt;h3 id=&quot;debugger&quot;&gt;Step 12: Connect Truffle to MPS’ Debugger&lt;/h3&gt;
&lt;p&gt;MPS contains the standard interactive debugger inherited from IntelliJ platform.&lt;/p&gt;
&lt;p&gt;Truffle exposes a standard &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/debug/DebuggerSession.html&quot;&gt;interface for interactive debuggers&lt;/a&gt; of the interpreted input. It takes care of the heavy lifting from Truffle AST to MPS input node.&lt;/p&gt;
&lt;p&gt;If we ran Truffle in a different thread than the MPS debugger, we should manage to connect both parts.&lt;/p&gt;
&lt;h3 id=&quot;instrumentation&quot;&gt;Step 13: Integrate Instrumentation&lt;/h3&gt;
&lt;p&gt;Truffle also exposes an &lt;a href=&quot;https://www.graalvm.org/truffle/javadoc/com/oracle/truffle/api/instrumentation/TruffleInstrument.html&quot;&gt;instrumentation interface&lt;/a&gt;. We could provide standard instrumentation applications like “code” coverage (in our case: DSL node coverage) and tracing out-of-the-box.&lt;/p&gt;
&lt;p&gt;One might think of nice visualizations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Color node background based on coverage&lt;/li&gt;
&lt;li&gt;Mark the currently executed part of the model&lt;/li&gt;
&lt;li&gt;Project runtime values inline&lt;/li&gt;
&lt;li&gt;Show traces in trace explorer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other possible applications:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Snapshot mechanism for current interpreter state&lt;/li&gt;
&lt;li&gt;Provide traces for offline debugging, and play them back&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;_part_iv_beyond_mps&quot;&gt;Part IV: Beyond MPS&lt;/h2&gt;
&lt;h3 id=&quot;_step_14_serialize_truffle_nodes&quot;&gt;Step 14: Serialize Truffle Nodes&lt;/h3&gt;
&lt;p&gt;If we could serialize Truffle &lt;tt&gt;Node&lt;/tt&gt;s (before any run-time optimization), we would have an MPS-independent representation of the executable DSL. Depending on the serialization format (implement &lt;a href=&quot;https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/io/Serializable.html&quot;&gt;Serializable&lt;/a&gt;, custom binary format, JSON, etc.), we could optimize for use-case, size, loading time, or other priorities.&lt;/p&gt;
&lt;h3 id=&quot;_step_15_execute_dsl_stand_alone_without_generator&quot;&gt;Step 15: Execute DSL stand-alone without Generator&lt;/h3&gt;
&lt;p&gt;Assume an insurance calculation DSL.&lt;br /&gt;
Usually, we would implement&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;an interpreter to execute test cases within MPS,&lt;/li&gt;
&lt;li&gt;a Generator to C to execute on the production server,&lt;/li&gt;
&lt;li&gt;and a Generator to Java to provide an preview for the insurance agent.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With serialized Truffle &lt;tt&gt;Node&lt;/tt&gt;s, we need only one interpreter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It runs out-of-the-box in MPS,&lt;/li&gt;
&lt;li&gt;Works stand-alone through GraalVM’s &lt;a href=&quot;https://github.com/oracle/graal/tree/master/substratevm&quot;&gt;ahead-of-time compiler Substrate VM&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;and can be used on any JVM using Truffle runtime.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;_part_v_crazy_ideas&quot;&gt;Part V: Crazy Ideas&lt;/h2&gt;
&lt;h3 id=&quot;step-back&quot;&gt;Step 16: Step Back Debugger&lt;/h3&gt;
&lt;p&gt;By combining &lt;a href=&quot;https://www.nikostotz.de/blog/feed/#instrumentation&quot;&gt;Instrumentation&lt;/a&gt; and &lt;a href=&quot;https://www.nikostotz.de/blog/feed/#debugger&quot;&gt;debugger&lt;/a&gt;, it might be feasible to provide step-back debugging.&lt;/p&gt;
&lt;p&gt;In the interpreter, we know the complete global state of the program, and can store deltas (to reduce memory usage). For quite some DSLs, this might be sufficient to store every intermediate state and thus arbitrary debug movement.&lt;/p&gt;
&lt;h3 id=&quot;side-step&quot;&gt;Step 17: Side Step Debugger&lt;/h3&gt;
&lt;p&gt;By &lt;a href=&quot;https://www.nikostotz.de/blog/feed/#step-back&quot;&gt;stepping back&lt;/a&gt; through our execution and following different execution paths, we could explore alternate outcomes. The different execution path might stem from other input values, or &lt;a href=&quot;https://www.nikostotz.de/blog/feed/#translate-input-model&quot;&gt;hot code replacement&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;_step_18_explorative_simulations&quot;&gt;Step 18: Explorative Simulations&lt;/h3&gt;
&lt;p&gt;If we had a &lt;a href=&quot;https://www.nikostotz.de/blog/feed/#side-step&quot;&gt;side step debugger&lt;/a&gt;, nice support to &lt;a href=&quot;https://www.nikostotz.de/blog/feed/#plumbing&quot;&gt;project interpretation results&lt;/a&gt;, and a &lt;a href=&quot;https://www.nikostotz.de/blog/feed/#migrate-framework&quot;&gt;really fast interpreter&lt;/a&gt;, we could run explorative simulations on lots of different executions paths. This might enable &lt;a href=&quot;https://vimeo.com/36579366#t=10m20s&quot;&gt;legendary interactive development&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Wed, 11 Mar 2020 23:19:42 +0000</pubDate>
        <enclosure url="https://nikostotz.de/blog/wp-content/uploads/2012/06/favicon-v2-512x512.png" length="2854" type="image/png"/>
</item>
<item>
	<title>Tanja Obradovic: Jakarta EE Community Update March 2020</title>
	<guid isPermaLink="false">6779 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-update-march-2020</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;Welcome to the latest Jakarta EE update. We have a number of initiatives underway and many great opportunities to get involved with Jakarta EE, so I’ll get right to it.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;The Adopt-A-Spec Program for Java User Groups Is Now Live&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We encourage all Java User Groups (JUGs) to adopt a Jakarta EE spec. You’ll find the instructions to sign up, along with more information about the program,&lt;a href=&quot;https://jakarta.ee/community/adopt-a-spec/&quot;&gt; here&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We’re very pleased to tell you that the Madras JUG in India and the SouJava JUG in Brazil are the first JUGs to adopt a Jakarta EE specification.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;It’s Now Even Easier to Get Involved with Jakarta EE!&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We welcome you to get involved and we made it simpler for you to join! Please see below to learn more about the steps to become a contributor and a committer. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;For details about specification project committer agreements, check out Wayne Beaton’s&lt;a href=&quot;https://blogs.eclipse.org/post/wayne-beaton/specification-project-committer-agreements&quot;&gt; blog post&lt;/a&gt; on the topic.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We welcome everyone who wants to get involved with Jakarta EE!&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/5T6MPAVJMeQAV0tU4klqwkNkkEQAyQVd5euY6uxlIsCAiU7Z6l7vvO0VD4sLVVjnSAiMeo_bhMQvpMUW7ilzvbGVWXDGgXz9uf2iXtutb0WItz4CSbxEDsD7iXL4vckV0OI4Qaba&quot; style=&quot;height: 308px; width: 624px;&quot; /&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Great progress on Jakarta EE 9&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Work on Jakarta EE 9 is now underway and you can check the progress we’re making&lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/17&quot;&gt; here&lt;/a&gt;. Will attempt to get an RC out this week for Platform and Web Profile APIs!&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;For additional insight into Jakarta EE 9, check out the:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  &lt;a href=&quot;https://jakarta.ee/specifications/platform/9/&quot;&gt;Jakarta EE Platform specification page&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  &lt;a href=&quot;https://github.com/eclipse-ee4j/jakartaee-platform&quot;&gt;GitHub page&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Alignment With MicroProfile Specs Is up to Us&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;After a recent MicroProfile Hangout discussion, it was decided that MicroProfile will produce specs and other communities, including Jakarta EE, can determine how they want to adopt them.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; You can find a summary of the discussion by John Clingan in the thread &lt;a href=&quot;https://docs.google.com/document/d/1VQ5cvzhVhKYr27FKC1tVmf081eGLSNiuX-dhQ2BxItc/edit?pli=1#heading=h.7e20q7f70ond&quot;&gt;MicroProfile Working Group discussion – Push vs pull&lt;/a&gt; on the MicroProfile&lt;a href=&quot;https://groups.google.com/forum/#!forum/microprofile&quot;&gt; mailing list&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; If you’d like to join MicroProfile discussions, check out the calendar&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=gbnbc373ga40n0tvbl88nkc3r4@group.calendar.google.com&amp;amp;ctz=America/Toronto&amp;amp;pli=1&quot;&gt; here&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt; CN4J Day at KubeCon Amsterdam Is Postponed&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;With the postponement of the KubeCon + CloudNativeCon event, we’ve also postponed CN4J Day, which was originally planned for March 30. We’ll let you know when the event is rescheduled as soon as we can.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; In the meantime, you can follow updates about KubeCon rescheduling and get more information about what the postponement means for your involvement&lt;a href=&quot;https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/attend/novel-coronavirus-update/&quot;&gt; here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jakartification of Oracle Specs: We always welcome your help!&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Thanks to everyone who has been helping us Jakartify the Oracle specifications. We’re making progress, but we still need helping hands. Now that we have the copyright for all of the specifications that Oracle contributed, there’s a lot of work to do.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;To help you get started:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  The Specification Committee created a document that explains&lt;a href=&quot;https://github.com/jakartaee/specification-committee/blob/master/steps_javaee_to_jakartaee.adoc&quot;&gt; how to convert Java EE specifications to Jakarta EE&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Ivar Grimstad provided a demo during the community call in October. You can&lt;a href=&quot;https://www.youtube.com/watch?v=s8Kwz5_u88Y&amp;amp;list=PLy7t4z5SYNaSY0Um6Vbez3G5Lc2AMaMw7&amp;amp;index=5&quot;&gt; view it here&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Join Community Update Calls&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Every month, the Jakarta EE community holds a community call for everyone in the Jakarta EE community. For upcoming dates and connection details, see the&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot;&gt; Jakarta EE Community Calendar&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Our next call is Wednesday, March 18 at 10:00 a.m. EST using&lt;a href=&quot;https://www.crowdcast.io/e/communitycall_mar_20&quot;&gt; this meeting link&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We know it’s not always possible to join calls in real time, so here are links to the recordings and presentations:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  &lt;a href=&quot;https://www.youtube.com/playlist?list=PLy7t4z5SYNaSY0Um6Vbez3G5Lc2AMaMw7&quot;&gt;The complete playlist&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  February 12 call and&lt;a href=&quot;https://drive.google.com/drive/u/0/folders/1YAwdKkx7vJJrducok0et6_6P7-Yu8Pcl&quot;&gt; presentation&lt;/a&gt;, featuring Wayne Beaton’s update on enabling individual participation in Jakarta EE, Shabnam Mayel’s update on enabling JUG participating, and Ivar Grimstad’s update on Jakarta EE 9.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;February Event Summary&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;February was a busy month for events:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  &lt;a href=&quot;https://fosdem.org/2020/&quot;&gt;FOSDEM&lt;/a&gt;. Eclipse Foundation Executive Director, Mike Milinkovich, presented to a full room at this unique, free event in Brussels. For more insight, read&lt;a href=&quot;https://www.agilejava.eu/2020/02/02/hashtag-jakarta-ee-5/&quot;&gt; Ivar’s blog&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  &lt;a href=&quot;https://devnexus.com/&quot;&gt;Devnexus&lt;/a&gt;. We hosted a Cloud Native for Java Meetup for more than 100 participants at this conference organized by the Atlanta JUG. We also had a Jakarta EE booth in the community corner of the exhibition hall. This is an awesome event for Java developers with 2,400 attendees and world-class speakers. Here’s a photo to inspire you to attend next year.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/Capture1.PNG&quot; style=&quot;height: 329px; width: 441px;&quot; /&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  JakartaOne Livestream - Japan. The first Livestream event in Japanese was a success with 211 registered participants. You can watch the replay&lt;a href=&quot;https://www.youtube.com/playlist?list=PLy7t4z5SYNaQBuTOVEiO3wmBkSZg-Qe1q&quot;&gt; here&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  &lt;a href=&quot;https://confoo.ca/en/yul2020&quot;&gt;ConFoo&lt;/a&gt;. Ivar spoke at the 18th edition of this event in Montreal, Canada. For more information, read&lt;a href=&quot;https://www.agilejava.eu/2020/03/02/hashtag-jakarta-ee-9/&quot;&gt; Ivar’s blog&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Stay Connected With the Jakarta EE Community&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;The Jakarta EE community is very active and there are a number of channels to help you stay up to date with all of the latest and greatest news and information. Tanja Obradovic’s&lt;a href=&quot;https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-engagement&quot;&gt; blog&lt;/a&gt; summarizes the community engagement plan, which includes:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Social media:&lt;a href=&quot;https://twitter.com/jakartaee&quot;&gt; Twitter&lt;/a&gt;,&lt;a href=&quot;https://www.facebook.com/JakartaEE/&quot;&gt; Facebook&lt;/a&gt;,&lt;a href=&quot;https://www.linkedin.com/groups/13597511/&quot;&gt; LinkedIn Group&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Mailing lists: jakarta.ee-community@eclipse.org and jakarta.ee-wg@eclipse.org&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Newsletters, blogs, and emails:&lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot;&gt; Eclipse newsletter&lt;/a&gt;,&lt;a href=&quot;https://jakartablogs.ee/#main-content&quot;&gt; Jakarta EE blogs&lt;/a&gt;, monthly update emails to jakarta.ee-community@eclipse.org, and community blogs on&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1JflN_xJ9d5ZWu5VUbDV9Spj7mc8WuPGMfd6EZgabXz0/edit#gid=0&quot;&gt; “how are you involved with Jakarta EE”&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Meetings:&lt;a href=&quot;https://www.meetup.com/jakartatechtalks_/&quot;&gt; Jakarta Tech Talks&lt;/a&gt;,&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot;&gt; Jakarta EE Update&lt;/a&gt;, Jakarta Town Hall, and Eclipse Foundation events and conferences&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Subscribe to your preferred channels today. And, get involved in the&lt;a href=&quot;https://jakarta.ee/membership/&quot;&gt; Jakarta EE Working Group&lt;/a&gt; to help shape the future of open source, cloud native Java.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Bookmark the&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot;&gt; Jakarta EE Community Calendar&lt;/a&gt; to learn more about Jakarta EE-related plans and check the date for the next Jakarta Tech Talk.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 11 Mar 2020 16:47:23 +0000</pubDate>
</item>
<item>
	<title>Eclipse Dirigible: Release 4.3</title>
	<guid isPermaLink="false">http://dirigible.io/release/2020/03/11/news_new_release_4_3</guid>
	<link>http://dirigible.io/release/2020/03/11/news_new_release_4_3.html</link>
	<description>&lt;p&gt;New version &lt;a href=&quot;https://download.eclipse.org/dirigible/drops/R-4.3-202003111648/index.html&quot;&gt;4.3&lt;/a&gt; has been released.&lt;/p&gt;

&lt;p&gt;Release is of &lt;em&gt;Type B&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;features&quot;&gt;Features&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Calculated properties support&lt;/li&gt;
  &lt;li&gt;SAP Cloud Foundry tailored package&lt;/li&gt;
  &lt;li&gt;Content v4 API&lt;/li&gt;
  &lt;li&gt;Template Engine&lt;/li&gt;
  &lt;li&gt;Configurable Internal Jobs&lt;/li&gt;
  &lt;li&gt;Multiple Schema Support in OData&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;fixes&quot;&gt;Fixes&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Add Execute Button in the SQL View&lt;/li&gt;
  &lt;li&gt;Add tooltips for all icons in the Entity Data Modeller&lt;/li&gt;
  &lt;li&gt;Debugger via https&lt;/li&gt;
  &lt;li&gt;Minor fixes&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;statistics&quot;&gt;Statistics&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;68K+ Sessions&lt;/li&gt;
  &lt;li&gt;47K+ Users&lt;/li&gt;
  &lt;li&gt;182 Countries&lt;/li&gt;
  &lt;li&gt;360 Repositories in DirigibleLabs&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;operational&quot;&gt;Operational&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Available packages for download - &lt;a href=&quot;https://download.eclipse.org/dirigible/drops/R-4.3-202003111648/index.html&quot;&gt;https://download.eclipse.org/dirigible/drops/R-4.3-202003111648/index.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Docker images at Docker Hub under DirigibleLabs organization:	&lt;a href=&quot;https://hub.docker.com/u/dirigiblelabs/&quot;&gt;https://hub.docker.com/u/dirigiblelabs/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Maven Central artifacts by org.eclipse.dirigible namespace: &lt;a href=&quot;https://mvnrepository.com/artifact/org.eclipse.dirigible&quot;&gt;https://mvnrepository.com/artifact/org.eclipse.dirigible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The full list of bug-fixes and enhancements can be found here: &lt;a href=&quot;https://github.com/eclipse/dirigible/milestone/30?closed=1&quot;&gt;https://github.com/eclipse/dirigible/milestone/29?closed=1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The source code is available at GitHub repository here: &lt;a href=&quot;https://github.com/eclipse/dirigible/tree/4.3.0&quot;&gt;https://github.com/eclipse/dirigible/tree/4.3.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The instant trial is updated accordingly with the released version here: &lt;a href=&quot;http://trial.dirigible.io&quot;&gt;http://trial.dirigible.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;enjoy&quot;&gt;Enjoy!&lt;/h4&gt;</description>
	<pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Scott Lewis: ECF 3.14.7 released</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-20358640.post-3056386663627758979</guid>
	<link>http://eclipseecf.blogspot.com/2020/03/ecf-3147-released.html</link>
	<description>&lt;a href=&quot;http://www.eclipse.org/ecf&quot;&gt;ECF 3.14.7&lt;/a&gt; has been released and may be &lt;a href=&quot;https://www.eclipse.org/ecf/downloads.php&quot;&gt;downloaded&lt;/a&gt; here.&lt;br /&gt;&lt;br /&gt;In concert with this bug fix release have been a number of additions to &lt;a href=&quot;https://github.com/ECF&quot;&gt;ECF's github projects for Remote Services Development.&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Distribution and Discovery Providers&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Enhanced:  &lt;a href=&quot;https://github.com/ECF/HazelcastProvider&quot;&gt;Hazelcast-based Distribution Provider&lt;/a&gt; v1.7.0.  Upgraded to use Hazelcast 4&lt;br /&gt;Enhanced:  System and Service-Properties docs for &lt;a href=&quot;https://wiki.eclipse.org/Distribution_Providers&quot;&gt;Distribution Providers&lt;/a&gt; and &lt;a href=&quot;https://wiki.eclipse.org/Discovery_Providers&quot;&gt;Discovery Providers&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Bndtools Development&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Enhanced:  &lt;a href=&quot;https://github.com/ECF/bndtools.workspace&quot;&gt;Bndtools Workspace template with new Bndrun templates for Remote Services Development&lt;/a&gt;&lt;br /&gt;Enhanced:  &lt;a href=&quot;https://wiki.eclipse.org/Bndtools_Support_for_Remote_Services_Development&quot;&gt;Tutorial for using Bndtools for Remote Services Development&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Wed, 04 Mar 2020 00:54:36 +0000</pubDate>
	<author>noreply@blogger.com (Scott Lewis)</author>
</item>
<item>
	<title>Alex Blewitt: Measuring bundle startup time with JFR</title>
	<guid isPermaLink="false">http://alblue.bandlem.com/2020/02/jfr-bundle-listener</guid>
	<link>http://alblue.bandlem.com/2020/02/jfr-bundle-listener.html</link>
	<description>&lt;p&gt;Several years ago, I gave a presentation at EclipseCon 2016 on
“&lt;a href=&quot;http://alblue.bandlem.com/2016/10/eclipsecon-books.html&quot;&gt;Optimising Eclipse Plug-ins&lt;/a&gt;”
in which I talked about a few different ways of making Eclipse faster, at least
from a start-up and memory usage perspective.&lt;/p&gt;

&lt;p&gt;The presentation wasn’t recorded, but is
&lt;a href=&quot;https://speakerdeck.com/alblue/optimising-eclipse-plug-ins&quot;&gt;available on SpeakerDeck&lt;/a&gt;
as well as a narrated copy I recorded
&lt;a href=&quot;https://vimeo.com/190419390&quot;&gt;subsequently at Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One of the techniques I discussed was using Java Flight Recorder as a means to
record how long bundles take to start up, since the main cost of starting up
Eclipse (or other OSGi applications) is how long it takes for the bundles to
move into the &lt;code&gt;STARTED&lt;/code&gt; state. Bundles that have a &lt;code&gt;Bundle-Activator&lt;/code&gt; can slow
this down, and since the majority of OSGi frameworks have a means to start up
bundles sequentially, can lead to a lesser user experience.&lt;/p&gt;

&lt;p&gt;At the original time of writing, JFR was still a commercial feature (requiring
&lt;code&gt;-XX:+UnlockCommercialFeatures&lt;/code&gt; setting and the wrath of licensing) in Java 8,
and the API was evolving in Java 9 and onwards. However, now that Java 11 has
been released, we have a free (both as in beer and in speech) implementation
that we can code against in order to work as expected.&lt;/p&gt;

&lt;p&gt;A number of API changes meant that the code needed some TLC, and so I recently
uploaded a
&lt;a href=&quot;https://github.com/alblue/com.bandlem.osgi.jfrbundlelistener&quot;&gt;new version&lt;/a&gt;
of the &lt;code&gt;JFRBundleListener&lt;/code&gt; project to GitHub. The project can be downloaded and
installed into an OSGi runtime (or Eclipse application) to find out where the
start-up costs lie. At the present time, I have not published it anywhere for
binary consumption.&lt;/p&gt;

&lt;p&gt;The
&lt;a href=&quot;https://github.com/alblue/com.bandlem.osgi.jfrbundlelistener/blob/master/README.md&quot;&gt;README.md&lt;/a&gt;
contains more information about how to use it, but the TL;DR is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build and install the bundle with a low start level (e.g. 1) so that it
tracks all subsequent bundle activation&lt;/li&gt;
&lt;li&gt;Start your OSGi framework or Eclipse application with the magic invocation to
start JFR recording, e.g.
&lt;code&gt;-XX:StartFlightRecording=filename=/tmp/dump.jfr,dumponexit=true,disk=true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Load and inspect the recording into Java Mission Control, or use the embedded
&lt;code&gt;java -jar JFRBundleListener.jar &amp;lt; /tmp/dump.jfr &amp;gt; /tmp/stacks.txt&lt;/code&gt; to
generate a stacks list that can be processed by FlameGraph.pl&lt;/li&gt;
&lt;li&gt;Use Brendan Gregg’s flamegraph tool to create an interactive SVG
&lt;code&gt;flamegraph.pl --hash --countname ms &amp;lt; /tmp/stacks.txt &amp;gt; /tmp/bundles.svg&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The resulting SVG looks something like this:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Bundle startup&quot; src=&quot;http://alblue.bandlem.com/2020/02/bundles.svg&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;Custom JFR events&lt;/h2&gt;

&lt;p&gt;The API for interacting with JFR has improved significantly since its first
inception in Java 8. I am looking forward to the backport of Java 11 to Java 8
to improve the experience significantly there.&lt;/p&gt;

&lt;p&gt;To create a custom event, subclass the &lt;code&gt;jdk.jfr.Event&lt;/code&gt; class. Provided that it
has public fields of a known Java primitive or String, it will be written out
when commanded. The
&lt;a href=&quot;https://github.com/alblue/com.bandlem.osgi.jfrbundlelistener/blob/master/src/main/java/com/bandlem/osgi/jfrbundlelistener/JFRBundleEvent.java&quot;&gt;&lt;code&gt;JFRBundleEvent&lt;/code&gt;&lt;/a&gt;
class is used to surface an OSGi &lt;code&gt;BundleEvent&lt;/code&gt;, and so persists pertinent data
to the &lt;code&gt;JFRBundleEvent&lt;/code&gt; class upon creation.&lt;/p&gt;

&lt;p&gt;These are created when receiving (synchronous) events with the
&lt;code&gt;SynchronousBundleListener&lt;/code&gt; implemented in the
&lt;a href=&quot;https://github.com/alblue/com.bandlem.osgi.jfrbundlelistener/blob/master/src/main/java/com/bandlem/osgi/jfrbundlelistener/JFRBundleListener.java&quot;&gt;&lt;code&gt;JFRBundleListener&lt;/code&gt;&lt;/a&gt;
class. To mark a span, the event has &lt;code&gt;begin()&lt;/code&gt; called at the start of a bundle
coming on-line, and &lt;code&gt;end()&lt;/code&gt; once it has finished. The &lt;code&gt;commit()&lt;/code&gt; ensures that
this bundle event is recorded; provided that the &lt;code&gt;commit()&lt;/code&gt; occurs at some
point later, and that the object is not reused in the meantime, it could be
done at a later time.&lt;/p&gt;

&lt;p&gt;The event information is recorded with specific key fields; they are identified
using the field name in the class, or the one specified with the &lt;code&gt;@Name&lt;/code&gt;
annotation as defined in the event itself. For simplicity, I have chosen the
OSGi bundle headers as the identifiers in the event, which may make
post-processing it easier.&lt;/p&gt;

&lt;h2&gt;Processing JFR files&lt;/h2&gt;

&lt;p&gt;Similarly, the API for processing a JFR file has become significantly better.
There is a helper method &lt;code&gt;RecordingFile.readAllEvents()&lt;/code&gt; which translates a
dump file at a given path into a list of &lt;code&gt;RecordedEvent&lt;/code&gt; objects, or it can be
used as an iterator to read through all events.&lt;/p&gt;

&lt;p&gt;Events are identified by type; if not specified then the fully qualified name
of the event class is used. This makes it easy to filter out specific events
from the log, although it may be desirable that they are combined with other
JFR events (e.g. thread sleeping, class loading, garbage collections etc.) in
the log.&lt;/p&gt;

&lt;p&gt;The
&lt;a href=&quot;https://github.com/alblue/com.bandlem.osgi.jfrbundlelistener/blob/master/src/main/java/com/bandlem/osgi/jfrbundlelistener/JFRFlameGraph.java&quot;&gt;&lt;code&gt;JFRFlameGraph&lt;/code&gt;&lt;/a&gt;
implementation provides a means to go through the log file, and generate a
stack of bundle startup to allow for investigation as to why something is taken
so long.&lt;/p&gt;

&lt;p&gt;It prunes the list of events in the JFR recording to only include those
&lt;code&gt;JFRBundleEvent&lt;/code&gt; of interest, and then builds up a sorted data structure based
on the earliest start-up time recorded. These are then interactively popped off
to write out events before the end time, so that the resulting file contains a
list of the bundles starting up:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;...
Start-Level...;org.eclipse.ui.trace;org.eclipse.core.runtime;org.eclipse.equinox.preferences 28
Start-Level...;org.eclipse.ui.trace;org.eclipse.core.runtime;org.eclipse.core.contenttype;org.eclipse.equinox.registry 877
Start-Level...;org.eclipse.ui.trace;org.eclipse.core.runtime;org.eclipse.core.contenttype 6
Start-Level...;org.eclipse.ui.trace;org.eclipse.core.runtime;org.eclipse.equinox.app 28
Start-Level...;org.eclipse.ui.trace;org.eclipse.core.runtime 14
Start-Level...;org.eclipse.ui.trace 10
Start-Level...;org.eclipse.update.configurator 977
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These can then be post-processed with
&lt;a href=&quot;https://github.com/brendangregg/FlameGraph/blob/master/flamegraph.pl&quot;&gt;FlameGraph.pl&lt;/a&gt;
to generate the interactive SVG above.&lt;/p&gt;

&lt;p&gt;The code prepends the Java thread name to the stack shown; this allows some
threads (such as background &lt;code&gt;Worker-n&lt;/code&gt; threads) to be ignored, while focussing
on specific threads (such as the &lt;code&gt;main&lt;/code&gt; thread and the &lt;code&gt;Start-Level...&lt;/code&gt;
thread). Since the SVG is interactive, clicking on the thread name will focus
the view on just those bundles, which may provide more detailed analysis.&lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;Java Flight Recorder is available as open source in Java 11, and can be used to
export timing information using a custom event format. With sufficient
post-processing of the data, it can generate flame graphs that can be more
expressive than just looking at numbers.&lt;/p&gt;

&lt;p&gt;The API for programmatically interacting with JFR recordings has been
significantly improved, and being able to log timely information in conjunction
with other events can be a significant bonus in performance analysis.&lt;/p&gt;</description>
	<pubDate>Sat, 22 Feb 2020 22:20:00 +0000</pubDate>
</item>
<item>
	<title>Denis Roy: Postmortem - February 7 storage and authentication outage</title>
	<guid isPermaLink="false">6774 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/denis-roy/postmortem-february-7-storage-and-authentication-outage</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;On Friday, February 7 2020, Eclipse.org suffered a severe service disruption to many of its web properties when our primary authentication server and file server suffered a hardware failure.&lt;/p&gt;

&lt;p&gt;For 90 minutes, our main website, &lt;a href=&quot;http://www.eclipse.org&quot;&gt;www.eclipse.org&lt;/a&gt;, was mostly available, as was our Bugzilla bug tracking tool, but logging in was not possible. Wiki, Eclipse Marketplace and other web properties were degraded. Git and Gerrit were both completely offline for 2 hours and 18 minutes. Authenticated access to Jiro -- our Jenkins+Kubernetes-based CI system, was not possible, and builds that relied on Git access failed during that time.&lt;/p&gt;

&lt;p&gt;There was no data loss, but there were data inconsistencies. A dozen Git repositories and Gerrit code changes were in an inconsistent state due to replication schedules, but thanks to the distributed nature of Git, the code commits were still in local developer Git repositories, as well as on the failed server, which we were eventually able to revive (in an offline environment). Data inconsistencies were more severe in our LDAP accounts database, where dozens of users were unable to log in, and in some isolated cases, users reported that their account was reverted back to old data from years prior.&lt;/p&gt;

&lt;p&gt;In hindsight, we feel this outage could have, and should have been avoided. We’ve identified many measures we must enact to prevent such unplanned outages in the future. Furthermore, our communication and incident handling processes proved to be flawed, and will be scrutinized and improved, to ensure our community is better informed during unplanned incidents.&lt;/p&gt;

&lt;p&gt;Lastly, we’ve identified aging hardware and Single Points of Failure (SPoF) that must be addressed.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;&lt;strong&gt;File server &amp;amp; authentication setup&lt;/strong&gt;&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;At the center of the Eclipse infra is a pair of servers that handle 2 specific tasks:&lt;/p&gt;

&lt;ul&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;Network Attached Storage (NAS) via NFS&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;User Authentication via OpenLDAP&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The server pair consists of a primary system, which handles all the traffic, and a hot spare. Both servers are configured identically for production service, but the spare server sits idly and receives data periodically from the primary. This specific architecture was originally implemented in 2005, with periodical hardware upgrades over time.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;&lt;strong&gt;Timeline of events&lt;/strong&gt;&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Friday Feb 7 - 12:33pm EST:&lt;/strong&gt; Fred Gurr (Eclipse Foundation IT/Releng team) reports on the Foundation’s internal Slack channel that something is happening to the Infra. Denis observes many “Flaky” status reports on &lt;a href=&quot;https://status.eclipse.org&quot;&gt;https://status.eclipse.org&lt;/a&gt; but is in transit and cannot investigate further. Webmaster Matt Ward investigates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12:43pm: &lt;/strong&gt;Matt confirms that our primary nfs/ldap server is not responding, and activates “Plan A: assess and fix”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12:59pm: &lt;/strong&gt;Denis reaches a computer and activates “Plan B: prepare for Failover” while Matt works on Plan A. The “Sorry, we are down” page is served for all Flaky services except &lt;a href=&quot;http://www.eclipse.org&quot;&gt;www.eclipse.org&lt;/a&gt;, which continues to be served successfully by our nginx cache.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1:18pm: &lt;/strong&gt;The standby server is ready to assume the “primary” role.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1:29pm: &lt;/strong&gt;Matt makes the call for failover, as the severity of the hardware failure is not known, and not easily recoverable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1:49pm: &lt;/strong&gt;&lt;a href=&quot;http://www.eclipse.org&quot;&gt;www.eclipse.org&lt;/a&gt;, Bugzilla, Marketplace, Wiki return to stable service on the new primary.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2:18pm: &lt;/strong&gt;Git and Gerrit return to stable service.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2:42pm: &lt;/strong&gt;Our Kubernetes/OpenShift cluster is updated to the latest patchlevel and all CI services restarted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4:47pm: &lt;/strong&gt;All legacy JIPP servers are restarted, and all other remaining services report functional.  At this time, we are not aware of any issues.&lt;/p&gt;

&lt;p&gt;During the weekend, Matt continues to monitor the infra. Authentication issues crop up over the weekend, which are caused by duplicated accounts and are fixed by Matt.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monday, 4:49am EST: &lt;/strong&gt;Mikaël Barbero (Eclipse Foundation IT/Releng team) reports that there are more duplicate users in LDAP that cannot log into our systems. This is now a substantial issue. They are fixed systematically with an LDAP duplicate finder, but the process is very slow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10:37am: &lt;/strong&gt;First Foundation broadcast on the cross-project mailing list that there is an issue with authentication.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tuesday, 9:51am: &lt;/strong&gt;Denis blogs about the incident and posts a message to the eclipse.org-committers mailing list about the ongoing authentication issues. The message, however, is held for moderation and is not distributed until many hours later.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Later that day: &lt;/strong&gt;Most duplicated accounts have been removed, and just about everything is stabilized. We do not yet understand the source of the duplicates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wednesday: &lt;/strong&gt;duplicate removals continue, as well as investigation into the cause.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thursday 9:52am: &lt;/strong&gt;We file a dozen bugs against projects whose Git and Gerrit repos may be out of sync. Some projects had already re-pushed or rebased their missing code patches and resolved the issue as FIXED.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Friday, 2:58pm: &lt;/strong&gt;All remaining duplicates are removed. Our LDAP database is fully cleaned. The failed server re-enters production as the hot standby - even though its hardware is not reliable. New hardware is sourced and ordered.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;&lt;strong&gt;Hardware failure&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;The physical servers assuming our NAS/LDAP setup are server-class hardware, 2U chassis with redundant power supplies, ECC (error checking and correction) memory, RAID-5 disk arrays with a battery-backup RAID controller memory. Both primary and standby servers were put into production in 2011.&lt;/p&gt;

&lt;p&gt;On February 7, the primary server experienced a kernel crash from the RAID controller module. The RAID controller detected an unrecoverable ECC memory error. The entire server became unresponsive.&lt;/p&gt;

&lt;p&gt;As originally designed in 2005, periodical (batched) data updates from the primary to the hot spare were simple to set up and maintain. This method also had a distinct advantage over live replication: rapid recovery in case of erasure (accidental or malicious) or data tampering. Of course, this came at a cost of possible data loss. However, it was deemed that critical data (in our case, Source Code) susceptible to loss during the short time was also available on developer workstations.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;Failover and return to stability&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;As the standby server was prepared for production service, the reasons for the crash on the primary server were investigated. We assessed the possibility of continuing service on the primary; that course of action would have provided the fastest recovery with the fewest surprises later on.&lt;/p&gt;

&lt;p&gt;As the nature of the hardware failure remained unknown, failover was the only option. We confirmed that some data replication tasks had run less than one hour prior to failure, and all data replication was completed no later than 3 hours prior. IP addresses were updated, and one by one, services that depended on NFS and authentication were restarted to flush caches and minimize any potential for an inconsistent state.&lt;/p&gt;

&lt;p&gt;At about 4:30pm, or four hours after the failure, both webmasters were confident that the failover was successful, and that very little dust would settle over the weekend.&lt;br /&gt;
 &lt;/p&gt;

&lt;h1 dir=&quot;ltr&quot;&gt;&lt;strong&gt;Authentication issues&lt;/strong&gt;&lt;/h1&gt;

&lt;p dir=&quot;ltr&quot;&gt;Throughout the weekend, we had a few reports of authentication issues -- which were expected, since we failed over to a standby authentication source that was at least 12 hours behind the primary. These issues were fixed as they were reported, and nothing seemed out of place.&lt;/p&gt;

&lt;p&gt;On Monday morning, Feb 10th, the Foundation’s Releng team reported that several committers had authentication issues to the CI systems. We then suspected that something else was at play with our authentication database, but it was not clear to us what had happened, or what the magnitude was. The common issue was duplicate accounts -- some users had an account in two separate containers simultaneously, which prevented users from being able to authenticate. These duplicates were removed as rapidly as we could, and we wrote scripts to identify old duplicates and purge them -- but with &amp;gt;450,000 accounts, it was time-consuming.&lt;/p&gt;

&lt;p&gt;At that time, we got so wrapped up in trying to understand and resolve the issue that we completely underestimated its impact on the community, and we were absolutely silent about it.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;&lt;strong&gt;Problem solved&lt;/strong&gt;&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;On Friday afternoon, February 14, we were able to finally clean up all the duplicate accounts and understand why they existed in the first place.&lt;/p&gt;

&lt;p&gt;Prior to December, 2011, our LDAP database only contained committer accounts. In December 2011, we imported all the non-committer accounts from Bugzilla and Wiki into an LDAP container we named “Community”. This allowed us to centralize authentication around a single source of truth: LDAP.&lt;/p&gt;

&lt;p&gt;All new accounts were, and are created in the Community container, and are moved into the Committer container if/when they became an Eclipse Committer.&lt;/p&gt;

&lt;p&gt;Our primary-&amp;gt;secondary LDAP sync mechanism was altered, at that time, to sync the Community container as well -- but it was purely additive. Once you had an account in Community, it was there for life on the standby server, even if you became a committer later on. Or if you’d ever change your email address. This was the source of the duplicate accounts on the standby server.&lt;/p&gt;

&lt;p&gt;A new server pair has been ordered on February 14, 2020 . These servers will be put into production service as soon as possible, and the old hardware will be recommissioned to clustered service. With these new machines, we believe our existing architecture and configuration can continue to serve us well over the coming months and years.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;&lt;strong&gt;Take-aways and proposed improvements&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Although the outage didn’t last incredibly long (2 hours from failure to the beginning of restored service), we feel it shouldn’t have occurred in the first place. Furthermore, we’ve identified key areas where our processes can be improved - notably, in how we communicate with you.&lt;/p&gt;

&lt;p&gt;Here are the action items we’re committed to implementing in the near term, to improve our handling of such incidents:&lt;/p&gt;

&lt;ul&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Communication: &lt;/strong&gt;Improved Service Status page.  &lt;a href=&quot;https://status.eclipse.org&quot;&gt;https://status.eclipse.org&lt;/a&gt; gives a picture of what’s going on, but with an improved service, we can communicate the nature of outages, the impact, and estimated time until service is restored.&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Communication: &lt;/strong&gt;Internally, we will improve communication within our team and establish a maintenance log, whereby members of the team can discover the work that has been done.&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Staffing: &lt;/strong&gt;we will explore the possibility of an additional IT hire, thus enhancing our collective skillset, and enabling more overall time on the quality and reliability of the infra.&lt;/p&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Aging Hardware: &lt;/strong&gt;we will put top-priority on resolving aging SPoF, and be more strict about not running hardware devices past their reasonable life expectancy.&lt;/p&gt;

	&lt;ul&gt;
		&lt;li dir=&quot;ltr&quot;&gt;
		&lt;p dir=&quot;ltr&quot;&gt;In the longer term, we will continue our investment in replacing SPoF with more robust technologies. This applies to authentication, storage, databases and networking.&lt;/p&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li dir=&quot;ltr&quot;&gt;
	&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Process and procedures: &lt;/strong&gt;we will allocate more time to testing our disaster recovery and business continuity procedures. Such tests would likely have revealed the LDAP sync bug.&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We believe that these steps will significantly reduce unplanned outages such as the one that occured on February 7. They will also help us ensure that, should a failure occur, we recover and return to a state of stability more rapidly. Finally, they will help you understand what is happening, and what the timelines to restore service are, so that you can plan your work tasks and remain productive.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 20 Feb 2020 16:12:00 +0000</pubDate>
</item>
<item>
	<title>Wayne Beaton: Git Contribution Activity Charts for Eclipse Projects</title>
	<guid isPermaLink="false">http://waynebeaton.wordpress.com/?p=5642</guid>
	<link>https://waynebeaton.wordpress.com/2020/02/18/git-contribution-activity-charts-for-eclipse-projects/</link>
	<description>&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignright&quot;&gt;&lt;img alt=&quot;Eclipse EGit: Git Integration for Eclipse&quot; src=&quot;https://projects.eclipse.org/sites/default/files/egit.png&quot; /&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;&lt;em&gt;This post is brought to you today by the &lt;a href=&quot;https://projects.eclipse.org/projects/technology.egit&quot;&gt;Eclipse EGit&lt;img alt=&quot;â„¢&quot; class=&quot;wp-smiley&quot; src=&quot;https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/2122.png&quot; style=&quot;height: 1em;&quot; /&gt; Project&lt;/a&gt;. Eclipse EGit is the Eclipse open source project that provides Git integration for the Eclipse Platform.&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;On Eclipse open source project pages (which we often refer to as the &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#pmi&quot;&gt;Project Management Interface&lt;/a&gt; or “PMI”), the “&lt;a href=&quot;https://projects.eclipse.org/projects/technology.egit/who&quot;&gt;Who’s Involved&lt;/a&gt;” pages include some commit activity graphs. &lt;/p&gt;



&lt;p&gt;The Contribution Activity chart shows the absolute number of commits made on project repositories over the last twelve months. Eclipse open source projects may have multiple Git repositories; this chart shows commit activity across all branches on all repositories owned by the project team.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-5652&quot; src=&quot;https://waynebeaton.files.wordpress.com/2020/02/image-1.png?w=508&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;The Individual Contribution Activity chart shows the commits attributed to individual developers over the last three months (across all repositories and branches). The identify of the individual committer comes directly from the author field in the Git commit. For project committers, we map author credentials to the information that committers provide in their Eclipse Foundation Account, so–for committers–the name shown here will match what’s in their account, not what’s on the commit record.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-5653&quot; src=&quot;https://waynebeaton.files.wordpress.com/2020/02/image-2.png?w=473&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;Note that any developer listed as an “Also-by” in the commit message will get credit for the commit (“Some Bodyelse”, from the &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#resources-commit&quot;&gt;example&lt;/a&gt; shown below, would share author credit for the commit). Because of the “Also-by” folks being counted as authors/contributors, some commits may be represented multiple times in the Individual Contribution Activity and Organization Contribution Activity charts (once each for each author).&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-5647&quot; src=&quot;https://waynebeaton.files.wordpress.com/2020/02/image.png?w=567&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;If you click on a committer’s picture on the “Who’s Involved” page, you’ll see a chart of lifetime contributions to the project. If the chart is missing, that means that the person hasn’t authored any commits.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-5654&quot; src=&quot;https://waynebeaton.files.wordpress.com/2020/02/image-3.png?w=567&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;The Organization Contribution Activity chart shows relative contributions from Eclipse Foundation &lt;a href=&quot;https://www.eclipse.org/membership/exploreMembership.php#allmembers&quot;&gt;member companies&lt;/a&gt;. Commits made by all project committers affiliated with the company (across all project Git repositories and branches) are grouped together.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-5655&quot; src=&quot;https://waynebeaton.files.wordpress.com/2020/02/image-4.png?w=567&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;On this chart, “Other Committer” groups together contributions from committers who do not work for a member company, and “Contributor” refers to activity by contributors (i.e., developers who are not yet not committers).&lt;/p&gt;



&lt;p&gt;Active Member Companies are those Eclipse Foundation member companies that have at least on committer that has made at least one commit on the project in the last three months (note that the order is random).&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-5656&quot; src=&quot;https://waynebeaton.files.wordpress.com/2020/02/image-5.png?w=532&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;These charts take a very narrow view of “contribution”. There are many ways to contribute to an open source project. You can answer questions on forums or mailing lists, open and comment on issues, present at conferences, …&lt;/p&gt;</description>
	<pubDate>Tue, 18 Feb 2020 17:57:13 +0000</pubDate>
</item>
<item>
	<title>Denis Roy: Anatomy of a server failure</title>
	<guid isPermaLink="false">6770 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/denis-roy/anatomy-server-failure</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Last Friday, Feb 7 at around 12:30pm (Ottawa time), I received a notification from &lt;a href=&quot;https://www.eclipse.org/org/foundation/staff.php&quot;&gt;Fred Gurr&lt;/a&gt; (part of our release engineering team) that something was going on with the infra. The multitude of colours on the &lt;a href=&quot;https://status.eclipse.org/&quot;&gt;Eclipse Service Status&lt;/a&gt; page confirmed it -- many of our services and tools were either slow, or unresponsive.&lt;/p&gt;

&lt;p&gt;After some initial digging, we discovered that the primary backend file server (housing Git, Gerrit, web session data, and a lot of files for our various web properties) was not responding. It was also host to our accounts database -- the center for all user authentication.&lt;/p&gt;

&lt;h3&gt;Jumping into action&lt;/h3&gt;

&lt;p&gt;It's a well-rehearsed routine for colleage Matt Ward and I -- he worked on assessing the problem and identifying the fix, while I worked on Plan B - failover to our hot standby. At around 1:35pm, roughly 1 hour into the outage, Matt made the call -- failover is the only option, as a  hardware component has failed. 20 minutes later, most services had either recovered or were well on their way.&lt;/p&gt;

&lt;p&gt;But the failover is not perfect. Data is sync'ed every 2 hours. Account and authentication info is replicated nightly. This was a by-design strategy decision, as it offers us a recovery window in case of data erasure, corruption or unauthenticated access.&lt;/p&gt;

&lt;h3&gt;Lessons learned&lt;/h3&gt;

&lt;p&gt;The failed server was put in service in 2011, celebrating its *gasp* ninth year of 24/7 service. That is a few years too many, and although it (and its standby counterpart) were slated for replacement in 2017, the effort was pushed back to make room for competing priorities. In a moment of bitter irony, the failed hardware was planned to be replaced in the second quarter of this year -- mere months away. We gambled with the house, we lost.&lt;/p&gt;

&lt;h3&gt;Cleaning up&lt;/h3&gt;

&lt;p&gt;Today, there is much dust to settle. Our authentication database has some gremlins that we need to fix, and there could be a few missing commits that were not replicated.&lt;/p&gt;

&lt;p&gt;We also need to source replacement hardware for the failed component, so that we can re-enable our hot standby. At the same time, we need to immediately source replacement servers for those 2011 dinosaurs. They've served us well, but their retirement is long overdue.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 11 Feb 2020 14:51:32 +0000</pubDate>
</item>
<item>
	<title>Stephan Herrmann: Interfacing null-safe code with legacy code</title>
	<guid isPermaLink="false">http://objectteams.wordpress.com/?p=685</guid>
	<link>https://objectteams.wordpress.com/2020/02/06/interfacing-null-safe-code-with-legacy-code/</link>
	<description>&lt;p&gt;When you adopt null annotations like &lt;a href=&quot;https://help.eclipse.org/2019-12/topic/org.eclipse.jdt.doc.isv/reference/api/org/eclipse/jdt/annotation/package-summary.html?cp=3_1_0_9&quot;&gt;these&lt;/a&gt;, your ultimate hope is that the compiler will tell you about &lt;em&gt;every&lt;/em&gt; possible NullPointerException (NPE) in your program (except for tricks like reflection or bytecode weaving etc.). Hallelujah.&lt;/p&gt;
&lt;p&gt;Unfortunately, most of us use libraries which don’t have the blessing of &lt;a href=&quot;https://help.eclipse.org/2019-12/topic/org.eclipse.jdt.doc.user/tasks/task-using_null_type_annotations.htm?cp=1_3_9_1&quot;&gt;annotation based null analysis&lt;/a&gt;, simply because those are not annotated appropriately (neither in source nor using &lt;a href=&quot;https://help.eclipse.org/2019-12/topic/org.eclipse.jdt.doc.user/tasks/task-using_external_null_annotations.htm?cp=1_3_9_2&quot;&gt;external annotations&lt;/a&gt;). Let’s for now call such code: &lt;strong&gt;“legacy”&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In this post I will walk through the options to warn you about the risks incurred by legacy code. The general theme will be:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Can we assert that no NPE will happen &lt;strong&gt;in null-checked code&lt;/strong&gt;?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I.e., if your code consistently uses null annotations, and has passed analysis without warnings, can we be sure that NPEs can only ever be thrown in the legacy part of the code?&lt;em&gt; (NPEs inside legacy code are still to be expected, there’s nothing we can change about that)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Using existing Eclipse versions, one category of problems would still go undetected whereby null-checked code could still throw NPE. &lt;strong&gt;This has been &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=482242&quot;&gt;recently fixed &lt;img alt=&quot;bug&quot; class=&quot;alignnone size-full wp-image-691&quot; src=&quot;https://objectteams.files.wordpress.com/2020/02/bug.png?w=700&quot; /&gt;&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Simple data flows&lt;/h2&gt;
&lt;p&gt;Let’s start with simple data flows, e.g., when your program obtains a value from legacy code, like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;NullFrom_getProperty&quot; class=&quot;alignnone size-full wp-image-690&quot; src=&quot;https://objectteams.files.wordpress.com/2020/02/nullfrom_getproperty.png?w=700&quot; /&gt;&lt;/p&gt;
&lt;p&gt;You shouldn’t be surprised, the javadoc even says: “&lt;em&gt;The method returns &lt;code&gt;null&lt;/code&gt; if the property is not found.&lt;/em&gt;” While the compiler doesn’t read javadoc, it can recognize that a value with unspecified nullness flows into a variable with a non-null type. Hence the warning:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Null type safety (type annotations): The expression of type ‘String’ needs unchecked conversion to conform to ‘@NonNull String’&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;As we can see, the compiler warned us, so we are urged to fix the problem in our code. Conversely, if we pass any value &lt;em&gt;into&lt;/em&gt; a legacy API, all bad that can happen would happen inside legacy code, so nothing to be done for our mentioned goal.&lt;/p&gt;
&lt;p&gt;The underlying rule is: legacy values can be safely &lt;strong&gt;assigned&lt;/strong&gt; to nullable variables, but not to non-null variables (example &lt;code&gt;Properties.getProperty()&lt;/code&gt;). On the other hand, &lt;em&gt;any value&lt;/em&gt; can be assigned to a legacy variable (or method argument).&lt;/p&gt;
&lt;p&gt;Put differently: values flowing from null-checked to legacy pose no problems, whereas values flowing the opposite direction must be assumed to be nullable, to avoid problems in null-checked code.&lt;/p&gt;
&lt;h2&gt;Enter generics&lt;/h2&gt;
&lt;p&gt;Here be dragons.&lt;/p&gt;
&lt;p&gt;As a minimum requirement we now need &lt;a href=&quot;https://help.eclipse.org/2019-12/topic/org.eclipse.jdt.doc.user/tasks/task-using_null_type_annotations.htm?cp=1_3_9_1&quot;&gt;null annotations with target TYPE_USE&lt;/a&gt; (“type annotations”), but we have this since 2014. Good.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;NullFromLegacyList&quot; class=&quot;alignnone size-full wp-image-692&quot; src=&quot;https://objectteams.files.wordpress.com/2020/02/nullfromlegacylist.png?w=700&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Here we obtain a &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; value from a &lt;code&gt;Legacy&lt;/code&gt; class, where indeed the list &lt;code&gt;names&lt;/code&gt; is non-null (as can be seen by successful output from &lt;code&gt;names.size()&lt;/code&gt;). Still things are going south in our code, because the list contained an unexpected &lt;code&gt;null&lt;/code&gt; element.&lt;/p&gt;
&lt;p&gt;To protect us from this problem, I marked the entire class as &lt;code&gt;@NonNullByDefault&lt;/code&gt;, which causes the type of the variable &lt;code&gt;names&lt;/code&gt; to become &lt;code&gt;List&amp;lt;@NonNull String&amp;gt;&lt;/code&gt;. Now the compiler can again warn us about an unsafe assignment:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Null type safety (type annotations): The expression of type ‘List&amp;lt;String&amp;gt;’ needs unchecked conversion to conform to ‘List&amp;lt;@NonNull String&amp;gt;’&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This captures the situation, where a null value is passed from legacy to null-checked code, which is wrapped in a non-null container value (the list).&lt;/p&gt;
&lt;p&gt;Here’s a tricky question:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Is it safe to pass a null-checked value of a parameterized type into legacy code?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In the case of simple values, we saw no problem, but the following example tells us otherwise once generics are involved:&lt;br /&gt;
&lt;img alt=&quot;NullIntoNonNullList&quot; class=&quot;alignnone size-full wp-image-693&quot; src=&quot;https://objectteams.files.wordpress.com/2020/02/nullintononnulllist.png?w=700&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Again we have a list of type &lt;code&gt;List&amp;lt;@NonNull String&amp;gt;&lt;/code&gt;, so dereferencing values obtained from that list should never throw NPE. Unfortunately, the legacy method &lt;code&gt;printNames()&lt;/code&gt; succeeded to break our contract by inserting &lt;code&gt;null&lt;/code&gt; into the list, resulting in yet another NPE thrown in null-checked code.&lt;/p&gt;
&lt;p&gt;To describe this situation it helps to draw boundaries not only between null-checked and legacy &lt;em&gt;code&lt;/em&gt;, but also to draw a boundary around the null-checked &lt;em&gt;value&lt;/em&gt; of parameterized type &lt;code&gt;List&amp;lt;@NonNull String&amp;gt;&lt;/code&gt;. That boundary is breached when we pass this value into legacy code, because that code will only see &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; and happily invoke &lt;code&gt;add(null)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This is were I &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=482242&quot;&gt;recently&lt;/a&gt; invented a new diagnostic message:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Unsafe null type conversion (type annotations): The value of type ‘List&amp;lt;@NonNull String&amp;gt;’ is made accessible using the less-annotated type ‘List&amp;lt;String&amp;gt;’&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;By passing &lt;code&gt;names&lt;/code&gt; into legacy code, we enable a &lt;em&gt;hidden&lt;/em&gt; data flow in the opposite direction. In the general case, this introduces the risk of NPE in otherwise null-checked code. Always?&lt;/p&gt;
&lt;h2&gt;Wildcards&lt;/h2&gt;
&lt;p&gt;Java would be a much simpler language without wildcards, but a closer look reveals that wildcards actually don’t only help for type safety but also for null-safety. How so?&lt;/p&gt;
&lt;p&gt;If the legacy method were written using a wildcard, it would not be (easily) possible to sneak in a &lt;code&gt;null&lt;/code&gt; value, here are two attempts:&lt;br /&gt;
&lt;img alt=&quot;SneakAttempts&quot; class=&quot;alignnone size-full wp-image-697&quot; src=&quot;https://objectteams.files.wordpress.com/2020/02/sneakattempts-1.png?w=700&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The first attempt is an outright Java type error. The second triggers a warning from Eclipse, despite the lack of null annotations:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Null type mismatch (type annotations): ‘null’ is not compatible to the free type variable ‘?’&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Of course, compiling the legacy class without null-checking would still bypass our detection, but chances are already better.&lt;/p&gt;
&lt;p&gt;If we add an &lt;em&gt;upper bound&lt;/em&gt; to the wildcard, like in &lt;code&gt;List&amp;lt;? extends CharSequence&amp;gt;&lt;/code&gt;, not much is changed. A &lt;em&gt;lower bound&lt;/em&gt;, however, is an invitation for the legacy code to insert &lt;code&gt;null&lt;/code&gt; at whim: &lt;code&gt;List&amp;lt;? super String&amp;gt;&lt;/code&gt; will cause &lt;code&gt;names.add()&lt;/code&gt; to accept any String, including the &lt;code&gt;null&lt;/code&gt; value. That’s why Eclipse will also complain against lower bounded wildcards:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Unsafe null type conversion (type annotations): The value of type ‘List&amp;lt;@NonNull String&amp;gt;’ is made accessible using the less-annotated type ‘List&amp;lt;? super String&amp;gt;’&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2&gt;Comparing to raw types&lt;/h2&gt;
&lt;p&gt;It has been suggested to treat legacy (not null-annotated) types like raw types. Both are types with a part of the contract ignored, thereby causing risks for parts of the program that still rely on the contract.&lt;/p&gt;
&lt;p&gt;Interestingly, raw types are more permissive in the parameterized-to-raw conversion. We are generally not protected against legacy code inserting an &lt;code&gt;Integer&lt;/code&gt; into a &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; when passed as a raw &lt;code&gt;List&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;More interestingly, using a raw type as a type argument produces an outright Java type error, so my final attempt at hacking the type system failed:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;RawTypeArgument&quot; class=&quot;alignnone size-full wp-image-698&quot; src=&quot;https://objectteams.files.wordpress.com/2020/02/rawtypeargument-1.png?w=700&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;We have seen several kinds of data flow with different risks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simple values flowing &lt;em&gt;checked-to-legacy&lt;/em&gt; don’t cause any specific headache&lt;/li&gt;
&lt;li&gt;Simple values flowing &lt;em&gt;legacy-to-checked&lt;/em&gt; should be treated as nullable to avoid bad surprises. This is checked.&lt;/li&gt;
&lt;li&gt;Values of parameterized type flowing &lt;em&gt;legacy-to-checked&lt;/em&gt; must be handled with care at the receiving side. This is checked.&lt;/li&gt;
&lt;li&gt;Values of parameterized type flowing &lt;em&gt;checked-to-legacy&lt;/em&gt; add more risks, depending on:
&lt;ul&gt;
&lt;li&gt;nullness of the type argument (&lt;code&gt;@Nullable&lt;/code&gt; type argument has no risk)&lt;/li&gt;
&lt;li&gt;presence of wildcards, unbounded or lower-bounded.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Eclipse can detect all mentioned situations that would cause NPE to be thrown from null-checked code – the capstone to be released with Eclipse 2020-03, i.e., coming soon …&lt;/p&gt;</description>
	<pubDate>Thu, 06 Feb 2020 19:38:50 +0000</pubDate>
</item>
<item>
	<title>Mat Booth: Eclipse and Handling Content Types on Linux</title>
	<guid isPermaLink="false">tag:blog.matbooth.co.uk,2020-02-06:/13-eclipse-handling-content-types.html/</guid>
	<link>http://blog.matbooth.co.uk/13-eclipse-handling-content-types.html</link>
	<description>&lt;p&gt;Getting deep desktop integration on Linux.&lt;/p&gt;</description>
	<pubDate>Thu, 06 Feb 2020 15:00:00 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Jakarta EE Community Update February 2020</title>
	<guid isPermaLink="false">6767 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-update-february-2020</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;With the&lt;a href=&quot;https://blogs.eclipse.org/post/mike-milinkovich/moving-forward-jakarta-ee-9&quot;&gt; Jan 16 announcement&lt;/a&gt; that we’re targeting a mid-2020 release for Jakarta EE9, the year is off to a great start for the entire Jakarta EE community. But, the Jakarta EE 9 release announcement certainly wasn’t our only achievement in the first month of 2020.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Here’s a look at the great progress the Jakarta EE community made in January, along with some important reminders and details about events you won’t want to miss.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;____________________________________________________________&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;The Java EE Guardians Are Now the Jakarta EE Ambassadors&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;The&lt;a href=&quot;https://jakartaee-ambassadors.io/blog/&quot;&gt; rebranding is complete&lt;/a&gt; and the&lt;a href=&quot;https://jakartaee-ambassadors.io/&quot;&gt; website has been updated&lt;/a&gt; to reflect the evolution. Also note that the group’s:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Twitter handle has been renamed to @jee_ambassadors&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Google Group has been renamed to&lt;a href=&quot;https://groups.google.com/forum/#!forum/jakartaee-ambassadors&quot;&gt; https://groups.google.com/forum/#!forum/jakartaee-ambassadors&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Everyone at the Eclipse Foundation and in the Jakarta EE community is thrilled the Java EE Guardians took the time and effort to rebrand themselves for Jakarta EE. I’d like to take this opportunity to thank everyone involved with the Jakarta EE Ambassadors for their contributions to the advancement of Jakarta EE. As Eclipse Foundation Executive Director, Mike Milinkovich,&lt;a href=&quot;https://www.infoq.com/news/2020/01/rebranding-java-ee-guardians/&quot;&gt; noted&lt;/a&gt;, “The new Jakarta EE Ambassadors are an important part of our community, and we very much appreciate their support and trust.”&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;I look forward to collaborating with the Jakarta EE Ambassadors to drive the success and growth of the Jakarta EE community. I’d also like to encourage all Jakarta EE Ambassadors to start using the new logo to associate themselves with the group.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;____________________________________________________________&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;Java User Groups Will Be Able to Adopt a Jakarta EE Specification&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;We’re working to enable Java User Groups (JUGs) to become actively involved in evolving the Jakarta EE Specification through our adopt-a-spec program.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;In addition to being Jakarta EE contributors and committers, JUG members that adopt-a-spec will be able to:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Blog about the Specification&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Tweet about the Specification&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Write an end-to-end test web application, such as Pet Store for Jakarta EE&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Review the specification and comment on unclear content&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Write additional tests to supplement those we already have&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We’ll share more information and ideas for JUG groups, organizers, and individuals to get involved as we finalize the adopt-a-spec program details and sign up process.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;____________________________________________________________ &lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;We’re Improving Opportunities for Individuals in the Jakarta EE Working Group&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;Let me start by saying we welcome everyone who wants to get involved with Jakarta EE! We’re fully aware there’s always room for improvement, and that there are issues we don’t yet know about. If you come across a problem, &lt;a href=&quot;mailto:membership.coordination@eclipse-foundation.org&quot;&gt;please get in touch&lt;/a&gt; and we’ll be happy to help.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We recently realized we’ve made it very difficult (read impossible) for individuals employed by companies that are neither Jakarta EE Working Group participants nor Eclipse Foundation Members to become committers in Jakarta EE Specification projects.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We’re working to address the problem for these committers and are aiming to have a solution in place in the coming weeks. In the meantime, these individuals can become contributors.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We’ve provided the information below to help people understand the paperwork that must be completed to become a Jakarta EE contributor or a committer. Please look for announcements in the next week or so about the.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/Individual%20paperwork.PNG&quot; style=&quot;height: 287px; width: 600px;&quot; /&gt; ______________________________________________________ &lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;It’s Time to Start Working on Jakarta EE 9               &lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;Now that the Jakarta EE 9 Release Plan is approved, it’s time for everyone in the Jakarta EE community to come together and start working on the release.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Here’re link that can help you get informed and motivate you to get involved!&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Start with the&lt;a href=&quot;https://jakarta.ee/specifications/platform/9/&quot;&gt; Jakarta EE Platform specification page&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Access the files you need on the&lt;a href=&quot;https://github.com/eclipse-ee4j/jakartaee-platform&quot;&gt; Jakarta EE Platform GitHub page&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Monitor release progress&lt;a href=&quot;https://github.com/orgs/eclipse-ee4j/projects/17&quot;&gt; here&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;____________________________________________________________&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;All Oracle Contributed Specifications Are Now Available for Jakartification&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;We now have the copyright for all of the Java EE specifications that Oracle contributed so we need the community’s help with Jakartification more than ever. This is the only way the Java EE specifications can be contributed to Jakarta EE. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;To help you get started:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·      The Specification Committee has created a document that explains&lt;a href=&quot;https://github.com/jakartaee/specification-committee/blob/master/steps_javaee_to_jakartaee.adoc&quot;&gt; how to convert Java EE specifications to Jakarta EE&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·      Ivar Grimstad provided a demo during the community call in October. You can&lt;a href=&quot;https://www.youtube.com/watch?v=s8Kwz5_u88Y&amp;amp;list=PLy7t4z5SYNaSY0Um6Vbez3G5Lc2AMaMw7&amp;amp;index=5&quot;&gt; view it here&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;______________________________________________&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;Upcoming Events&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;Here’s a brief look at two upcoming Jakarta EE events to mark on your calendar.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·      JakartaOne Livestream – Japan, February 26&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;This event builds on the success of the JakartaOne Livestream event in September 2019. Registration for&lt;a href=&quot;https://jakartaone.org/japan2020/&quot;&gt; JakartaOne Livestream – Japan&lt;/a&gt; is open and can be accessed&lt;a href=&quot;https://www.crowdcast.io/e/aduh2zba/register&quot;&gt; here&lt;/a&gt;. Please keep in mind this entire event will be presented in Japanese. For all the details, be sure to follow the event on Twitter @JakartaOneJPN.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·  Cloud Native for Java Day at KubeCon + CloudNativeCon Amsterdam, March 30&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;http://eclipse.org/cn4j-day&quot;&gt;Cloud Native for Java (CN4J) Day&lt;/a&gt; will be the first time the best and brightest minds from the Java ecosystem and the Kubernetes ecosystem come together at one event to collaborate and share their expertise. And, momentum is quickly building.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;To learn more about this ground-breaking event, get a sense of the excitement surrounding it, and access the registration page, check out these links:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;o   Eclipse Foundation’s&lt;a href=&quot;https://jakarta.ee/news/announcements/2020/01/28/the-eclipse-foundation-announces-the-cn4j-day-2020-event-for-building-enterprise-java-on-kubernetes/&quot;&gt; official announcement&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;o   Mike Milinkovich’s&lt;a href=&quot;https://blogs.eclipse.org/post/mike-milinkovich/cloud-native-java-day-kubecon-eu&quot;&gt; blog&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;o   Reza Rahman’s&lt;a href=&quot;https://reza-rahman.me/2020/01/25/jakarta-ee-microprofile-kubernetes-cloud-native-for-java-day-kubecon-cloudnativecon/&quot;&gt; blog&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;In addition to CN4J day at KubeCon, the Eclipse Foundation will have a booth #S73 featuring innovations from our Jakarta EE and Eclipse MicroProfile communities. Be sure to drop by to meet community experts in person and check out the demos.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;________________________________________________________&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;Join Community Update Calls&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;Every month, the Jakarta EE community holds a community call for everyone in the Jakarta EE community. For upcoming dates and connection details, see the&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot;&gt; Jakarta EE Community Calendar&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Our next call is Wednesday, February 12, at 11:00 a.m. EST using&lt;a href=&quot;https://eclipse.zoom.us/j/267901694&quot;&gt; this meeting ID&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We know it’s not always possible to join calls in real time, so here are links to the recordings and presentations from previous calls:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·     &lt;a href=&quot;https://www.youtube.com/playlist?list=PLy7t4z5SYNaSY0Um6Vbez3G5Lc2AMaMw7&quot;&gt; The complete playlist&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·      January 15 call and&lt;a href=&quot;https://drive.google.com/drive/u/0/folders/1OAUaU1e7oMvU6c_MwY53PksmLiVxZst4&quot;&gt; presentation&lt;/a&gt;, featuring:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;o   Updates on the Jakarta EE 9 release from Steve Millage&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;o   A call for action to help with Jakartifying specifications from Ivar Grimstad&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;o   A review of the Jakarta EE 2020 Marketing Plan and budget from Neil Paterson&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;o   A retrospective on Jakarta EE 8 from Ed Bratt&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;o   A heads up for the CN4J and JakartaOne Livestream events from Tanja Obradovic&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;  ____________________________________________________________&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Stay Connected With the Jakarta EE Community&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;The Jakarta EE community is very active and there are a number of channels to help you stay up to date with all of the latest and greatest news and information. Tanja Obradovic’s&lt;a href=&quot;https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-engagement&quot;&gt; blog&lt;/a&gt; summarizes the community engagement plan, which includes:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;• Social media:&lt;a href=&quot;https://twitter.com/jakartaee&quot;&gt; Twitter&lt;/a&gt;,&lt;a href=&quot;https://www.facebook.com/JakartaEE/&quot;&gt; Facebook&lt;/a&gt;,&lt;a href=&quot;https://www.linkedin.com/groups/13597511/&quot;&gt; LinkedIn Group&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;• Mailing lists: jakarta.ee-community@eclipse.org and jakarta.ee-wg@eclipse.org&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;• Newsletters, blogs, and emails:&lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot;&gt; Eclipse newsletter&lt;/a&gt;,&lt;a href=&quot;https://jakartablogs.ee/#main-content&quot;&gt; Jakarta EE blogs&lt;/a&gt;, monthly update emails to jakarta.ee-community@eclipse.org, and community blogs on&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1JflN_xJ9d5ZWu5VUbDV9Spj7mc8WuPGMfd6EZgabXz0/edit#gid=0&quot;&gt; “how are you involved with Jakarta EE”&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;• Meetings:&lt;a href=&quot;https://www.meetup.com/jakartatechtalks_/&quot;&gt; Jakarta Tech Talks&lt;/a&gt;,&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot;&gt; Jakarta EE Update&lt;/a&gt;, Jakarta Town Hall, and Eclipse Foundation events and conferences&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Subscribe to your preferred channels today. And, get involved in the&lt;a href=&quot;https://jakarta.ee/membership/&quot;&gt; Jakarta EE Working Group&lt;/a&gt; to help shape the future of open source, cloud native Java.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;To learn more about Jakarta EE-related plans and check the date for the next Jakarta Tech Talk, be sure to bookmark the&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot;&gt; Jakarta EE Community Calendar&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;hr /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 05 Feb 2020 19:21:32 +0000</pubDate>
</item>
<item>
	<title>Thabang Mashologu: CN4J Day Is an Important Industry First</title>
	<guid isPermaLink="false">6761 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/thabang-mashologu/cn4j-day-important-industry-first</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Mark Cloud Native for Java (CN4J) Day on March 30 on your calendars. This all-day event at KubeCon + CloudNativeCon Europe will be the first time the best and brightest minds from the Java and the Kubernetes communities join forces at a single event to collaborate and share their expertise.&lt;br /&gt;
 &lt;br /&gt;
CN4J Day attendees will benefit from expert talks, demos, and thought-provoking sessions focused on building cloud native enterprise applications using Jakarta EE-based microservices on Kubernetes.&lt;br /&gt;
&lt;br /&gt;
CN4J Day is a major milestone in open source software development. It’s also a significant day for everyone involved with the Eclipse Foundation because it confirms the Jakarta EE and MicroProfile communities are at the forefront of open source innovation, delivering on the promise of cloud native Java. Given that the Eclipse Foundation is Europe’s largest open source organization, it makes perfect sense to hold this first-of-its-kind event in Amsterdam.&lt;/p&gt;

&lt;p&gt;The timing of CN4J Day could not be better. As our Executive Director, Mike Milinkovich, noted in &lt;a href=&quot;https://blogs.eclipse.org/post/mike-milinkovich/moving-forward-jakarta-ee-9&quot;&gt;his blog&lt;/a&gt;, momentum toward Jakarta EE 9 is building. This event gives all of us an important and truly unique opportunity to:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Learn more about the future of cloud native Java development from industry and community leaders&lt;/li&gt;
	&lt;li&gt;Gain deeper insight into key aspects of Jakarta EE, MicroProfile, and Kubernetes technologies&lt;/li&gt;
	&lt;li&gt;Meet and share ideas with global Java and Kubernetes ecosystem innovators &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Leading minds from the global Java ecosystem will be on hand at CN4J Day to share their expertise. Along with keynote talks from our own Mike Milinkovich and IBM Java CTO, Tim Ellison, CN4J Day offers technical insights from well-known Java experts and Eclipse Foundation community members, including:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Adam Bien, an internationally recognized Java architect, developer, workshop leader, and author&lt;/li&gt;
	&lt;li&gt;Sebastian Daschner, lead java developer advocate at IBM&lt;/li&gt;
	&lt;li&gt;Clement Escoffier, principal software engineer at Red Hat&lt;/li&gt;
	&lt;li&gt;Ken Finnegan, senior principal engineer at Red Hat&lt;/li&gt;
	&lt;li&gt;Emily Jiang, liberty architect for MicroProfile and CDI at IBM&lt;/li&gt;
	&lt;li&gt;Dmitry Kornilov, Jakarta EE and Helidon Team Leader at Oracle&lt;/li&gt;
	&lt;li&gt;Tomas Langer, Helidon Architect &amp;amp; Developer at Oracle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Leading players in the Java ecosystem have signed on to sponsor CN4J activities and show their support for the initiative. Our sponsors include the Cloud Native Computing Foundation (CNCF), IBM, Oracle, and Red Hat.&lt;/p&gt;

&lt;p&gt;Since we have limited capacity, this is a first-come, first-served event. To register today, just include CN4J Day when you’re registering for KubeCon + CloudNativeCon Europe. Thanks to the generous support of our sponsors, a limited amount of discounted CN4J Day add-on registrations will be made available to Jakarta EE and MicroProfile community members. For more information about CN4J Day and a link to the registration page, click &lt;a href=&quot;http://eclipse.org/cn4j-day&quot;&gt;here&lt;/a&gt;.&lt;br /&gt;
 &lt;br /&gt;
For additional questions regarding this event, please reach out to events-info@eclipse.org. We’ll let you know when we add speakers and sponsors for CN4J Day. Watch our&lt;a href=&quot;https://blogs.eclipse.org/&quot;&gt; blogs&lt;/a&gt; and&lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot;&gt; newsletters&lt;/a&gt; for updates.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-tags field-type-taxonomy-term-reference field-label-above&quot;&gt;&lt;div class=&quot;field-label&quot;&gt;Tags: &lt;/div&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/jakarta-ee&quot;&gt;Jakarta EE&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item odd&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/eclipse-microprofile&quot;&gt;Eclipse MicroProfile&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/kubernetes&quot;&gt;kubernetes&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item odd&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/cn4j-day&quot;&gt;CN4J Day&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/kubecon-europe-2020&quot;&gt;KubeCon Europe 2020&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 29 Jan 2020 02:44:31 +0000</pubDate>
</item>
<item>
	<title>Tom Schindl: Setting up e(fx)clipse RCP development for Java11+ and PDE</title>
	<guid isPermaLink="false">http://tomsondev.bestsolution.at/?p=5197</guid>
	<link>https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/</link>
	<description>&lt;p&gt;As I’m currently converting a Java-8 project to AdoptJDK-11 and JavaFX-11+ I thought it would be a good idea document the steps involved.&lt;/p&gt;
&lt;h2&gt;Prequisits&lt;/h2&gt;
&lt;p&gt;I assume you have installed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eclipse 2019-12 – &lt;a href=&quot;http://download.eclipse.org/eclipse/&quot; rel=&quot;nofollow&quot;&gt;http://download.eclipse.org/eclipse/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Installed e(fx)clipse 3.6.0 or above – &lt;a href=&quot;https://marketplace.eclipse.org/content/efxclipse&quot; rel=&quot;nofollow&quot;&gt;https://marketplace.eclipse.org/content/efxclipse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AdoptJDK-11 – &lt;a href=&quot;https://adoptopenjdk.net/?variant=openjdk11&amp;amp;jvmVariant=hotspot&quot; rel=&quot;nofollow&quot;&gt;https://adoptopenjdk.net/?variant=openjdk11&amp;amp;jvmVariant=hotspot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Downloaded and extracted the JavaFX-SDK-11 – &lt;a href=&quot;https://openjfx.io/&quot; rel=&quot;nofollow&quot;&gt;https://openjfx.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Configure your Eclipse&lt;/h2&gt;
&lt;h3&gt;Java Settings&lt;/h3&gt;
&lt;p&gt;Make AdoptJDK-11 the default JRE unless it is already the default.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-03-59/&quot; rel=&quot;attachment wp-att-5203&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5203&quot; height=&quot;585&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.03.59.png?w=640&amp;amp;h=585&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Make sure AdoptJDK-11 is used for the Java-SE-11 EE&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-05-46/&quot; rel=&quot;attachment wp-att-5205&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5205&quot; height=&quot;362&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.05.46.png?w=640&amp;amp;h=362&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;e(fx)clipse Settings&lt;/h3&gt;
&lt;p&gt;Open the JavaFX-Preference Page and point it to your JavaFX-11-SDK&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-10-44/&quot; rel=&quot;attachment wp-att-5208&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5208&quot; height=&quot;472&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.10.44.png?w=640&amp;amp;h=472&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This step is required because JavaFX is not part of AdoptJDK-11 and hence Eclipse won’t find the libraries and your code won’t compile inside the IDE (we’ll revisit this topic below once more)&lt;/p&gt;
&lt;h3&gt;Setup a target platform&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-15-43/&quot; rel=&quot;attachment wp-att-5233&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5233&quot; height=&quot;618&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.15.43.png?w=640&amp;amp;h=618&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-17-54/&quot; rel=&quot;attachment wp-att-5235&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5235&quot; height=&quot;593&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.17.54.png?w=640&amp;amp;h=593&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-19-06/&quot; rel=&quot;attachment wp-att-5237&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5237&quot; height=&quot;684&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.19.06.png?w=640&amp;amp;h=684&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Create your project&lt;/h2&gt;
&lt;h3&gt;Bootstrap your project&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-22-27/&quot; rel=&quot;attachment wp-att-5216&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5216&quot; height=&quot;584&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.22.27.png?w=640&amp;amp;h=584&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-24-19/&quot; rel=&quot;attachment wp-att-5217&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5217&quot; height=&quot;584&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.24.19.png?w=640&amp;amp;h=584&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-24-40/&quot; rel=&quot;attachment wp-att-5219&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5219&quot; height=&quot;584&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.24.40.png?w=640&amp;amp;h=584&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Check your project setup&lt;/h3&gt;
&lt;p&gt;Check if Eclipse correctly recognized the javafx-library and magically added them to your plug-in dependendencies&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-27-01/&quot; rel=&quot;attachment wp-att-5221&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5221&quot; height=&quot;591&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.27.01.png?w=640&amp;amp;h=591&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Implement the UI&lt;/h2&gt;
&lt;h3&gt;Add javax.annotation to your MANIFEST.MF&lt;/h3&gt;
&lt;p&gt;Before you can write the Java-Code for your UI you need to add javax.annotation-package to your bundle (this used to ship with Java-8 has been removed since then)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-32-48/&quot; rel=&quot;attachment wp-att-5223&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5223&quot; height=&quot;346&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.32.48.png?w=640&amp;amp;h=346&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Create a Java-Class&lt;/h3&gt;
&lt;pre class=&quot;brush: java; title: ; notranslate&quot;&gt;package my.app.app;

import javax.annotation.PostConstruct;

import javafx.scene.control.Label;
import javafx.scene.layout.BorderPane;

public class SamplePart {
  @PostConstruct
  void init(BorderPane root) {
    root.setCenter(
      new Label(System.getProperty(&quot;javafx.version&quot;))
    );
  }
}
&lt;/pre&gt;
&lt;h3&gt;Adapt your e4xmi&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-38-34/&quot; rel=&quot;attachment wp-att-5228&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5228&quot; height=&quot;514&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.38.34.png?w=640&amp;amp;h=514&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Running your application&lt;/h2&gt;
&lt;p&gt;While everything happily compiles running the application would fail because in the initial steps we only satisfied the Eclipse compiler by magically injecting the JavaFX-Libraries in your Plug-in-Dependency (see above).&lt;/p&gt;
&lt;p&gt;To run the application we need to decide how we’d like to ship JavaFX:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;next to your application in a folder&lt;/li&gt;
&lt;li&gt;as part of your eclipse application inside the the plugins-directory&lt;/li&gt;
&lt;li&gt;you jlink yourself a JDK&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’ll not take a look at the 3rd solution as part of this blog post!&lt;/p&gt;
&lt;h3&gt;Running with an external folder&lt;/h3&gt;
&lt;p&gt;Open the generated launch configuration and append &lt;code&gt;-Defxclipse.java-modules.dir=PATH_TO_YOUR_JAVAFX_LIBS&lt;/code&gt; in the VM arguments-field&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-21-04/&quot; rel=&quot;attachment wp-att-5239&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5239&quot; height=&quot;487&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.21.04.png?w=640&amp;amp;h=487&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Running with bundled javafx-modules&lt;/h3&gt;
&lt;p&gt;We provide OSGi-Bundles who contain the original and unmodified JavaFX-Modules (note you can NOT use them are OSGi-Dependencies!) you can use them by adding &lt;a href=&quot;http://downloads.efxclipse.bestsolution.at/p2-repos/openjfx-11/repository/&quot; rel=&quot;nofollow&quot;&gt;http://downloads.efxclipse.bestsolution.at/p2-repos/openjfx-11/repository/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-32-02/&quot; rel=&quot;attachment wp-att-5241&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5241&quot; height=&quot;633&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.32.02.png?w=640&amp;amp;h=633&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-32-48/&quot; rel=&quot;attachment wp-att-5242&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5242&quot; height=&quot;597&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.32.48.png?w=640&amp;amp;h=597&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Add them to your launch configuration&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-35-44/&quot; rel=&quot;attachment wp-att-5244&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5244&quot; height=&quot;489&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.35.44.png?w=640&amp;amp;h=489&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Exporting your application&lt;/h2&gt;
&lt;p&gt;The project wizard already generated the basic infrastructure for you but we need to make some small changes. We assume you’ve chosen to option to ship the JavaFX-modules as part of the plugins-directory to keep it simple.&lt;/p&gt;
&lt;p&gt;The wizard already added the JavaFX-Standard-Feature into your product-File&lt;br /&gt;
&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-44-17/&quot; rel=&quot;attachment wp-att-5246&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5246&quot; height=&quot;489&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.44.17.png?w=640&amp;amp;h=489&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It also added the parts to satisfy the compiler in your releng/pom.xml&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-45-50/&quot; rel=&quot;attachment wp-att-5248&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5248&quot; height=&quot;489&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.45.50.png?w=640&amp;amp;h=489&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While most of the stuff is already in place we need to make 2 small modifications:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update the tycho-version property to 1.5.0&lt;/li&gt;
&lt;li&gt;Change the export environment to match the operation-system(s) you want to target
&lt;ul&gt;
&lt;li&gt;Windows: os=win32, ws=win32, arch=x86_64&lt;/li&gt;
&lt;li&gt;Linux: os=linux, ws=gtk, arch=x86_64&lt;/li&gt;
&lt;li&gt;OS-X: os=macosx, ws=cocoa, arch=x86_64&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-15-07-53/&quot; rel=&quot;attachment wp-att-5250&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5250&quot; height=&quot;384&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-15.07.53.png?w=640&amp;amp;h=384&quot; width=&quot;640&quot; /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h3&gt;Producing a native launcher&lt;/h3&gt;
&lt;p&gt;As we anyway have to produce a platform-dependent we can also add the creation of a native launcher. For that open your .product-File:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tick the “The product includes native launcher artifacts”&lt;/li&gt;
&lt;li&gt;Change the application to main-thread-application&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-15-53-49/&quot; rel=&quot;attachment wp-att-5254&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5254&quot; height=&quot;384&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-15.53.49.png?w=640&amp;amp;h=384&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Tue, 28 Jan 2020 15:00:08 +0000</pubDate>
</item>
<item>
	<title>Rohan Kumar: Introduction to Eclipse JKube: Java tooling for Kubernetes and Red Hat OpenShift</title>
	<guid isPermaLink="false">https://developers.redhat.com/blog/?p=669677</guid>
	<link>https://developers.redhat.com/blog/2020/01/28/introduction-to-eclipse-jkube-java-tooling-for-kubernetes-and-red-hat-openshift/</link>
	<description>&lt;p&gt;We as Java developers are often busy working on our applications by optimizing application memory, speed, etc. In recent years, encapsulating our applications into lightweight, independent units called containers has become quite a trend, and almost every enterprise is trying to shift its infrastructure onto container technologies like Docker and &lt;a href=&quot;https://developers.redhat.com/topics/kubernetes/&quot;&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Kubernetes is an open source system for automating deployment, scaling, and management of containerized applications, but it has a steep learning curve, and an application developer with no background in &lt;a href=&quot;https://developers.redhat.com/topics/devops/&quot;&gt;DevOps&lt;/a&gt; can find this system a bit overwhelming. In this article, I will talk about tools that can help when deploying your Maven applications to Kubernetes/&lt;a href=&quot;https://developers.redhat.com/openshift&quot;&gt;Red Hat OpenShift&lt;/a&gt;.&lt;span id=&quot;more-669677&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;b&gt;Background: Eclipse JKube&lt;/b&gt;&lt;/h2&gt;
&lt;p&gt;This project was not built from scratch. It’s just a refactored and rebranded version of the &lt;a href=&quot;https://github.com/fabric8io/fabric8-maven-plugin&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Fabric8 Maven plugin&lt;/a&gt;, which was a Maven plugin used in the &lt;a href=&quot;http://fabric8.io&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Fabric8&lt;/a&gt; ecosystem. Although the Fabric8 project was liked and appreciated by many people in the open source community, due to unfortunate reasons it could not become successful, and the idea of Fabric8 as an integrated development platform on top of Kubernetes died. Although the main project is archived, there are still active repositories used by the community, such as the &lt;a href=&quot;https://github.com/fabric8io/docker-maven-plugin&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Fabric8 Docker Maven plugin&lt;/a&gt;, the &lt;a href=&quot;https://github.com/fabric8io/kubernetes-client&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Fabric8 Kubernetes client&lt;/a&gt;, and of course the Fabric8 Maven plugin.&lt;/p&gt;
&lt;p&gt;As maintainers of the Fabric8 Maven plugin, we started decoupling the Fabric8 ecosystem related pieces from the plugin to make a general-purpose Kubernetes/OpenShift plugin. We also felt there was a need for rebranding because most people were confused about whether this plugin had something to do with Fabric8. Hence, we decided to rebrand it, and fortunately, someone from the Eclipse foundation approached us to take in our project. Now, the project is being renamed to Eclipse JKube and can be &lt;a href=&quot;https://github.com/eclipse/jkube&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;found in the Eclipse Foundation repos on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Eclipse JKube can be seen as a reincarnation of the Fabric8 Maven plugin. It contains the good parts of this plugin and offers a clean and smooth workflow with the tooling it provides. We refactored this plugin into three components:&lt;/p&gt;
&lt;ul&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;The JKube Kit&lt;/li&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;The Kubernetes Maven plugin&lt;/li&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;The OpenShift Maven plugin&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The JKube Kit contains the core logic for building Docker images, generating Kubernetes/OpenShift manifests, and applying them onto Kubernetes/OpenShift clusters. Plugins consume this library for their operations. In the future, we also plan to add support for Gradle plugins.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;Now, let’s have a look at Eclipse JKube in action. For the demo, I will deploy a simple Spring Boot project onto Kubernetes using the &lt;a href=&quot;https://github.com/rohanKanojia/eclipse-jkube-demo-project&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Eclipse Kubernetes Maven plugin&lt;/a&gt;. Let’s walk through this process:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add the Kubernetes Maven plugin as a dependency in your &lt;code&gt;pom.xml&lt;/code&gt; file, as shown in Figure 1:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;wp-caption aligncenter&quot; id=&quot;attachment_669707&quot; style=&quot;width: 436px;&quot;&gt;&lt;img alt=&quot;The Kubernetes Maven plugin added as a dependency in pom.xml.&quot; class=&quot;wp-image-669707&quot; height=&quot;89&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/12/Screenshot-from-2019-12-19-18-22-59.png&quot; width=&quot;426&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot; id=&quot;caption-attachment-669707&quot;&gt;Figure 1: The Kubernetes Maven plugin added as a dependency in &lt;code&gt;pom.xml&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Build your Docker images. The Eclipse JKube Kubernetes Maven plugin offers a zero-config mode, in which it builds your Docker image with opinionated defaults. However, you can customize it by providing an image configuration in the plugin configuration. In order to build a Docker image, you just need to run the following (the results are shown in Figure 2):&lt;/li&gt;
&lt;/ol&gt;
&lt;pre style=&quot;text-align: left; padding-left: 40px;&quot;&gt;mvn k8s:build&lt;/pre&gt;
&lt;div class=&quot;wp-caption aligncenter&quot; id=&quot;attachment_669727&quot; style=&quot;width: 650px;&quot;&gt;&lt;img alt=&quot;The results of the Docker image build command.&quot; class=&quot;wp-image-669727 size-large&quot; height=&quot;452&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/12/Screenshot-from-2019-12-19-18-32-45-1024x723.png&quot; width=&quot;640&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot; id=&quot;caption-attachment-669727&quot;&gt;Figure 2: Building the Docker image.&lt;/p&gt;&lt;/div&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Generate your Kubernetes resource manifests. Eclipse JKube plugins have a powerful and configurable resource generation mechanism in which they can generate Kubernetes resources in zero-config mode. This feature can also be configured using XML configuration or by placing customized resource fragments in the &lt;code&gt;src/main/jkube&lt;/code&gt; directory. The results are merged with the finally generated resource fragments. In order to generate resources, run the following (the results are shown in Figure 3):&lt;/li&gt;
&lt;/ol&gt;
&lt;pre style=&quot;text-align: left; padding-left: 40px;&quot;&gt;mvn k8s:resource&lt;/pre&gt;
&lt;div class=&quot;wp-caption aligncenter&quot; id=&quot;attachment_669717&quot; style=&quot;width: 650px;&quot;&gt;&lt;img alt=&quot;The results of the resource manifest creation command.&quot; class=&quot;wp-image-669717 size-large&quot; height=&quot;227&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/12/Screenshot-from-2019-12-19-18-39-13-1024x363.png&quot; width=&quot;640&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot; id=&quot;caption-attachment-669717&quot;&gt;Figure 3: Creating the Kubernetes resource manifests.&lt;/p&gt;&lt;/div&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Apply generated Kubernetes resources onto the Kubernetes cluster. In order to apply resources onto this cluster, you just need to run one of the following (the results are shown in Figure 4):&lt;/li&gt;
&lt;/ol&gt;
&lt;pre style=&quot;text-align: left; padding-left: 40px;&quot;&gt;mvn k8s:apply&lt;/pre&gt;
&lt;p style=&quot;text-align: left; padding-left: 40px;&quot;&gt;or:&lt;/p&gt;
&lt;pre style=&quot;text-align: left; padding-left: 40px;&quot;&gt;mvn k8s:deploy&lt;/pre&gt;
&lt;div class=&quot;wp-caption aligncenter&quot; id=&quot;attachment_669737&quot; style=&quot;width: 310px;&quot;&gt;&lt;img alt=&quot;The results of the command to apply the generated Kubernetes resources onto the Kubernetes cluster.&quot; class=&quot;wp-image-669737 size-medium&quot; height=&quot;244&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/12/Screenshot-from-2019-12-19-18-50-30-300x244.png&quot; width=&quot;300&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot; id=&quot;caption-attachment-669737&quot;&gt;Figure 4: Applying the generated Kubernetes resources onto the Kubernetes cluster.&lt;/p&gt;&lt;/div&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;Undeploy your Maven application from Kubernetes. We have a cleanup goal, too, which just deletes all resources created during the deploy phase. To use this feature, run the following (the results are shown in Figure 5):&lt;/li&gt;
&lt;/ol&gt;
&lt;pre style=&quot;text-align: left; padding-left: 40px;&quot;&gt;mvn k8s:undeploy&lt;/pre&gt;
&lt;div class=&quot;wp-caption aligncenter&quot; id=&quot;attachment_669747&quot; style=&quot;width: 310px;&quot;&gt;&lt;img alt=&quot;The results of undeploying your Maven application from Kubernetes.&quot; class=&quot;wp-image-669747 size-medium&quot; height=&quot;182&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/12/Screenshot-from-2019-12-19-18-53-11-300x182.png&quot; width=&quot;300&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot; id=&quot;caption-attachment-669747&quot;&gt;Figure 5: Undeploying your Maven application from Kubernetes.&lt;/p&gt;&lt;/div&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;Debug your Java application inside Kubernetes. Apart from these goals, we also have a goal for remote debugging. Suppose that you see a bug inside your application that’s running inside Kubernetes and you want to debug its behavior. You can simply run our debug goal, which does port forwarding for debugging:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre style=&quot;text-align: left; padding-left: 40px;&quot;&gt;mvn k8s:debug&lt;/pre&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;Configure your IDE in order to connect to this open port for debugging, as shown in Figure 6:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;wp-caption aligncenter&quot; id=&quot;attachment_669757&quot; style=&quot;width: 650px;&quot;&gt;&lt;img alt=&quot;A configuration window open in the IDE.&quot; class=&quot;wp-image-669757 size-large&quot; height=&quot;360&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/12/Screenshot-from-2019-12-19-18-59-41-1024x576.png&quot; width=&quot;640&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot; id=&quot;caption-attachment-669757&quot;&gt;Figure 6: Configuring your IDE to debug your Java application inside Kubernetes via Maven.&lt;/p&gt;&lt;/div&gt;
&lt;ol start=&quot;8&quot;&gt;
&lt;li&gt;Set a breakpoint in the application code and hit the application endpoint. We can see the breakpoint being hit in IDE as shown in Figure 7:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;wp-caption aligncenter&quot; id=&quot;attachment_669767&quot; style=&quot;width: 650px;&quot;&gt;&lt;img alt=&quot;The IDE hitting the application's breakpoint.&quot; class=&quot;wp-image-669767 size-large&quot; height=&quot;360&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/12/Screenshot-from-2019-12-19-19-00-59-1024x576.png&quot; width=&quot;640&quot; /&gt;&lt;p class=&quot;wp-caption-text&quot; id=&quot;caption-attachment-669767&quot;&gt;Figure 7: The application’s breakpoint in your IDE.&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;With this result, I wrap up this article. We do have more in our pipeline, so stay tuned for new updates. If you want to get involved, please reach out to us via our mailing list at &lt;a href=&quot;mailto:jkube-dev@eclipse.org&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;jkube-dev@eclipse.org&lt;/a&gt;, or our Gitter channel at &lt;a href=&quot;https://gitter.im/eclipse/jkube&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://gitter.im/eclipse/jkube#&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;a2a_button_facebook&quot; href=&quot;https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F28%2Fintroduction-to-eclipse-jkube-java-tooling-for-kubernetes-and-red-hat-openshift%2F&amp;amp;linkname=Introduction%20to%20Eclipse%20JKube%3A%20Java%20tooling%20for%20Kubernetes%20and%20Red%20Hat%20OpenShift&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Facebook&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_twitter&quot; href=&quot;https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F28%2Fintroduction-to-eclipse-jkube-java-tooling-for-kubernetes-and-red-hat-openshift%2F&amp;amp;linkname=Introduction%20to%20Eclipse%20JKube%3A%20Java%20tooling%20for%20Kubernetes%20and%20Red%20Hat%20OpenShift&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Twitter&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_linkedin&quot; href=&quot;https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F28%2Fintroduction-to-eclipse-jkube-java-tooling-for-kubernetes-and-red-hat-openshift%2F&amp;amp;linkname=Introduction%20to%20Eclipse%20JKube%3A%20Java%20tooling%20for%20Kubernetes%20and%20Red%20Hat%20OpenShift&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;LinkedIn&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_email&quot; href=&quot;https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F28%2Fintroduction-to-eclipse-jkube-java-tooling-for-kubernetes-and-red-hat-openshift%2F&amp;amp;linkname=Introduction%20to%20Eclipse%20JKube%3A%20Java%20tooling%20for%20Kubernetes%20and%20Red%20Hat%20OpenShift&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Email&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_print&quot; href=&quot;https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F28%2Fintroduction-to-eclipse-jkube-java-tooling-for-kubernetes-and-red-hat-openshift%2F&amp;amp;linkname=Introduction%20to%20Eclipse%20JKube%3A%20Java%20tooling%20for%20Kubernetes%20and%20Red%20Hat%20OpenShift&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Print&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_reddit&quot; href=&quot;https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F28%2Fintroduction-to-eclipse-jkube-java-tooling-for-kubernetes-and-red-hat-openshift%2F&amp;amp;linkname=Introduction%20to%20Eclipse%20JKube%3A%20Java%20tooling%20for%20Kubernetes%20and%20Red%20Hat%20OpenShift&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Reddit&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_flipboard&quot; href=&quot;https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F28%2Fintroduction-to-eclipse-jkube-java-tooling-for-kubernetes-and-red-hat-openshift%2F&amp;amp;linkname=Introduction%20to%20Eclipse%20JKube%3A%20Java%20tooling%20for%20Kubernetes%20and%20Red%20Hat%20OpenShift&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Flipboard&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_dd addtoany_share_save addtoany_share&quot; href=&quot;https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F01%2F28%2Fintroduction-to-eclipse-jkube-java-tooling-for-kubernetes-and-red-hat-openshift%2F&amp;amp;title=Introduction%20to%20Eclipse%20JKube%3A%20Java%20tooling%20for%20Kubernetes%20and%20Red%20Hat%20OpenShift&quot;&gt;&lt;img alt=&quot;Share&quot; src=&quot;https://static.addtoany.com/buttons/favicon.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a href=&quot;https://developers.redhat.com/blog/2020/01/28/introduction-to-eclipse-jkube-java-tooling-for-kubernetes-and-red-hat-openshift/&quot; rel=&quot;nofollow&quot;&gt;Introduction to Eclipse JKube: Java tooling for Kubernetes and Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a href=&quot;https://developers.redhat.com/blog&quot; rel=&quot;nofollow&quot;&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 28 Jan 2020 08:00:33 +0000</pubDate>
</item>
<item>
	<title>Mat Booth: Eclipse 2019-12 Now Available From Flathub</title>
	<guid isPermaLink="false">tag:blog.matbooth.co.uk,2020-01-20:/12-eclipse-now-in-flathub.html/</guid>
	<link>http://blog.matbooth.co.uk/12-eclipse-now-in-flathub.html</link>
	<description>&lt;p&gt;How to get the latest release of Eclipse from Flathub.&lt;/p&gt;</description>
	<pubDate>Mon, 20 Jan 2020 16:00:00 +0000</pubDate>
</item>
<item>
	<title>Jeremie Bresson: JDT without Eclipse</title>
	<guid isPermaLink="false">blog/2020/2020-01-17_jdt-without-eclipse.html</guid>
	<link>http://jmini.github.io/blog/2020/2020-01-17_jdt-without-eclipse.html</link>
	<description>&lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;The &lt;a href=&quot;https://www.eclipse.org/jdt/&quot;&gt;JDT&lt;/a&gt; (Java Development Tools) is an important part of Eclipse IDE but it can also be used without Eclipse.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;For example the Spring Tools 4, which is nowadays a cross-platform tool (Visual Studio Code, Eclipse IDE, …), is highly using the JDT behind the scene. If you would like to know more, I recommend you this podcast episode: &lt;a href=&quot;https://soundcloud.com/a-bootiful-podcast/spring-tools-lead-martin-lippert&quot;&gt;Spring Tools lead Martin Lippert&lt;/a&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;A second known example is the Java Formatter that is also part of the JDT. Since a long time there are maven and gradle plugins that performs the same formatting as Eclipse IDE but as part of the build (often with the possibly to break the build when the code is wrongly formatted).&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Reusing the JDT has been made easier since 2017 when it was decided to publish each release and its dependencies on maven central (with following &lt;code&gt;groupId&lt;/code&gt;: &lt;code&gt;org.eclipse.jdt&lt;/code&gt;, &lt;code&gt;org.eclipse.platform&lt;/code&gt;). Stephan Herrmann did a lot of work to achieve this goal. I blogged about this: &lt;a href=&quot;https://jmini.github.io/blog/2017/2017-01-10_use-eclipse-jdt-in-java-app.html&quot;&gt;Use the Eclipse Java Development Tools in a Java SE application&lt;/a&gt; and I have pushed a simple example the Java Formatter is used in a simple &lt;code&gt;main(String[])&lt;/code&gt; method built by a classic minimal Maven project: &lt;a href=&quot;https://github.com/jmini/jdt-experiments/tree/master/java-formatter&quot;&gt;java-formatter&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;workspace_or_not&quot;&gt;Workspace or not?&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;When using the JDT in an headless application, two cases needs to be distinguished:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;olist arabic&quot;&gt; 
   &lt;ol class=&quot;arabic&quot;&gt; 
    &lt;li&gt; &lt;p&gt;Some features (the parser, the formatter…) can be used in a simple Java main method.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Other features (search index, AST rewriter…) require a workspace. This imply that the code run inside an OSGi runtime.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;To illustrate this aspect, I took some of the examples provided by the site &lt;code&gt;www.programcreek.com&lt;/code&gt; in the blog post series &lt;a href=&quot;https://www.programcreek.com/2011/01/best-java-development-tooling-jdt-and-astparser-tutorials/&quot;&gt;Eclipse JDT Tutorials&lt;/a&gt; and I adapted them so that each code snippet can be executed inside a JUnit test. This is the &lt;a href=&quot;https://jmini.github.io/jdt-experiments/#programcreek-examples&quot;&gt;Programcreek examples&lt;/a&gt; project.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;I have split the unit-tests into two projects:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;ulist&quot;&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;&lt;code&gt;programcreek-standalone&lt;/code&gt; for the one that do not require OSGi. The maven project is really simple (using the default convention everywhere)&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;&lt;code&gt;programcreek-osgi&lt;/code&gt; for the one that must run inside an OSGi runtime. The &lt;a href=&quot;https://github.com/bndtools/bnd/tree/master/maven/bnd-maven-plugin&quot;&gt;bnd maven plugins&lt;/a&gt; are configured in the &lt;code&gt;pom.xml&lt;/code&gt; to take care of the OSGi stuff.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;If you run the test with Maven, it will work out-of-the box.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;If you would like to run them inside an IDE, you should use one that starts OSGi when executing the tests (in the same way the maven build is doing it). To get a bnd aware IDE, you can use &lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-12/r/eclipse-ide-java-developers&quot;&gt;Eclipse IDE for Java Developers&lt;/a&gt; with the additional plugin &lt;a href=&quot;https://bndtools.org/&quot;&gt;Bndtools&lt;/a&gt; installed, but there are other possibilities.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Source code can be found on GitHub: &lt;a href=&quot;https://github.com/jmini/jdt-experiments/tree/master/programcreek-examples&quot;&gt;programcreek-examples&lt;/a&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</description>
	<pubDate>Thu, 16 Jan 2020 23:00:00 +0000</pubDate>
</item>
<item>
	<title>Stephan Herrmann: Oracle made me a Stackoverflow Guru</title>
	<guid isPermaLink="false">http://objectteams.wordpress.com/?p=677</guid>
	<link>https://objectteams.wordpress.com/2020/01/16/oracle-made-me-a-stackoverflow-guru/</link>
	<description>&lt;p&gt;Just today Oracle helped me to become a “&lt;a href=&quot;https://stackoverflow.com/help/badges/18/guru&quot;&gt;Guru&lt;/a&gt;” on &lt;a href=&quot;https://stackoverflow.com&quot;&gt;Stackoverflow&lt;/a&gt;! How did they do it? By doing nothing.&lt;/p&gt;
&lt;p&gt;In former times, I was periodically enraged, when Oracle didn’t pay attention to the feedback I was giving them during my work on ecj (the Eclipse Compiler for Java) – &lt;em&gt;at least not the attention that I had hoped for&lt;/em&gt; (to be fair: there was a lot of good communication, too). At those times I had still hoped I could help make Java a language that is completely and unambiguously defined by specifications. Meanwhile I recognized that Java is at least three languages: the language defined by &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se13/html/index.html&quot;&gt;JLS&lt;/a&gt; etc., the language implemented by javac, and the language implemented by ecj (and no chance to make ecj to conform to both others). I realized that &lt;a href=&quot;https://objectteams.wordpress.com/2017/04/02/several-languages-java-8/&quot;&gt;we were not done with Java 8&lt;/a&gt; even 3 years after its release. Three more years later it’s still much the same.&lt;/p&gt;
&lt;p&gt;So let’s move on, haven’t things improved in subsequent versions of Java? One of the key new rules in Java 9 is, that&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;“If [a qualified package name] does not name a package that is uniquely visible to the current module (&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se13/html/jls-7.html#jls-7.4.3&quot;&gt;§7.4.3&lt;/a&gt;), then a compile-time error occurs”.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Simple and unambiguous. That’s what compilers have to check.&lt;/p&gt;
&lt;p&gt;Except: javac doesn’t check for uniqueness if one of the modules involved is the “unnamed module”.&lt;/p&gt;
&lt;p&gt;In 2018 there was some confusion about this, and during &lt;a href=&quot;https://stackoverflow.com/questions/51094274/eclipse-cant-find-xml-related-classes-after-switching-build-path-to-jdk-10&quot;&gt;discussion on stackoverflow&lt;/a&gt; I raised this &lt;a href=&quot;http://mail.openjdk.java.net/pipermail/jigsaw-dev/2018-December/014076.html&quot;&gt;issue to the jigsaw-dev mailing list&lt;/a&gt;. A &lt;a href=&quot;https://bugs.openjdk.java.net/browse/JDK-8215739&quot;&gt;bug was raised against javac&lt;/a&gt;, &lt;a href=&quot;http://mail.openjdk.java.net/pipermail/jigsaw-dev/2018-December/014077.html&quot;&gt;confirmed to be a bug by spec lead Alex Buckley&lt;/a&gt;. I summarized the situation in &lt;a href=&quot;https://stackoverflow.com/questions/51094274/eclipse-cant-find-xml-related-classes-after-switching-build-path-to-jdk-10/53824670#53824670&quot;&gt;my answer on stackoverflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This bug could have been easily fixed in javac version 12, but wasn’t. Meanwhile upvotes on my answer on stackoverflow started coming in. The same for Java 13. The same for Java 14. And yet no visible activity on the javac bug. You need ecj to find if your program violates this rule of JLS.&lt;/p&gt;
&lt;p&gt;Today the 40th upvote earned me the “Guru” tag on stackoverflow.&lt;/p&gt;
&lt;p&gt;So, please Oracle, keep that bug unresolved, it will earn me a lot of reputation for a bright future – by doing: nothing &lt;img alt=&quot;ðŸ™‚&quot; class=&quot;wp-smiley&quot; src=&quot;https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;</description>
	<pubDate>Thu, 16 Jan 2020 18:40:45 +0000</pubDate>
</item>
<item>
	<title>Jeremie Bresson: Building and running Equinox with maven without Tycho</title>
	<guid isPermaLink="false">blog/2020/2020-01-13_equinox-without-tycho.html</guid>
	<link>http://jmini.github.io/blog/2020/2020-01-13_equinox-without-tycho.html</link>
	<description>&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Eclipse Tycho is a great way to let maven build PDE based projects. But the Plug-in Development Environment (PDE) model is not the only way to work with OSGi.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;In particular, since 2 or 3 years the Eclipse Platform jars (including the Equinox jars) are regularly published on Maven Central (check the artifacts having &lt;code&gt;org.eclipse.platform&lt;/code&gt; as &lt;code&gt;groupId&lt;/code&gt;).&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I was looking for an alternative to P2 and to the target-platform mechanism.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;imageblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;img alt=&quot;bnd and bndtools logo&quot; src=&quot;http://jmini.github.io/blog/2020/2020-01-13_bnd-bndtools.png&quot; /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Bnd and Bndtools are always mentioned as potential alternative to PDE (I attended several talks discussing this at EclipseCon 2018: &lt;a href=&quot;https://www.eclipsecon.org/europe2018/sessions/migrating-pde-bndtools-practice&quot;&gt;Migrating from PDE to Bndtools in Practice&lt;/a&gt;, &lt;a href=&quot;https://www.eclipsecon.org/europe2018/sessions/zero-professional-osgi-project-minutes&quot;&gt;From Zero to a Professional OSGi Project in Minutes&lt;/a&gt;). So I decided to explore this path.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This StackOverflow question catches my attention: &lt;a href=&quot;https://stackoverflow.com/questions/52776222/how-to-start-with-osgi&quot;&gt;How to start with OSGi&lt;/a&gt;. I had a close look at the answer provided by Peter Kriens (the founder of the Bnd and Bndtools projects), where he discusses the different possible setup:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;ulist&quot;&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;Maven Only&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Gradle Only&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Eclipse, M2E, Maven, and Bndtools&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Eclipse, Bndtools, Gradle&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Even in the &quot;Maven Only&quot; or &quot;Gradle Only&quot; setups, the proposed solution relies on plugins using bnd under the hood.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;imageblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;img alt=&quot;How to start?&quot; src=&quot;http://jmini.github.io/blog/2020/2020-01-13_how-to-start.png&quot; /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;My project is quite simple, the dependencies are already on maven central. I will not have a complex use-case with multiple versions of the same library or with platform dependent artifacts. So fetching the dependencies with maven is sufficient.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I decided to try the &quot;Maven Only&quot; model.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;imageblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;img alt=&quot;How to start?&quot; src=&quot;http://jmini.github.io/blog/2020/2020-01-13_effective-osgi-logo.png&quot; /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I was not sure to understand how to use the different &lt;a href=&quot;https://github.com/bndtools/bnd/tree/master/maven/bnd-maven-plugin&quot;&gt;bnd maven plugins&lt;/a&gt;: &lt;code&gt;bnd-maven-plugin&lt;/code&gt;, &lt;code&gt;bnd-indexer-maven-plugin&lt;/code&gt;, &lt;code&gt;bnd-testing-maven-plugin&lt;/code&gt;, &lt;code&gt;bnd-export-maven-plugin&lt;/code&gt; …&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Luckily I found the slides of the &lt;a href=&quot;https://www.slideshare.net/mfrancis/bndtools-and-maven-a-brave-new-world-n-bartlett-t-ward&quot;&gt;Bndtools and Maven: A Brave New World&lt;/a&gt; workshop (given at EclipseCon 2017) and the corresponding git repository: &lt;a href=&quot;https://github.com/paremus/osgi-community-event2017&quot;&gt;osgi-community-event2017&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The corresponding &lt;a href=&quot;https://github.com/effectiveosgi/maven-archetypes&quot;&gt;effective-osgi maven archetypes&lt;/a&gt; used during the workshop are still working well. I could follow the step-by-step guide (in the readme of the maven archetypes project). I got everything working as described and I could find enough explanations about the generated projects. I think I understood what I did and this is very important when you start.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After some cleanup and a switch from Apache Felix to Eclipse Equinox, I got my running setup and I answered my question: &quot;&lt;em&gt;How to start with OSGi without PDE and Tycho&lt;/em&gt;&quot;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The corresponding code is in this folder: &lt;a href=&quot;https://github.com/jmini/bnd-experiments/tree/master/effectiveosgi-example&quot;&gt;effectiveosgi-example&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt;</description>
	<pubDate>Sun, 12 Jan 2020 23:00:00 +0000</pubDate>
</item>
<item>
	<title>Chris Aniszczyk: 4 Years at The Linux Foundation</title>
	<guid isPermaLink="false">https://www.aniszczyk.org/?p=4328</guid>
	<link>https://www.aniszczyk.org/2020/01/03/4-years-at-the-linux-foundation/</link>
	<description>&lt;p&gt;Late last year marked the 4th year anniversary of the formation of the &lt;a href=&quot;https://www.cncf.io/&quot;&gt;CNCF&lt;/a&gt; and me joining The Linux Foundation:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;… this also marks 4+ years since I joined the &lt;a href=&quot;https://twitter.com/linuxfoundation?ref_src=twsrc%5Etfw&quot;&gt;@linuxfoundation&lt;/a&gt;, after experiencing crazy startup growth/success at Twitter, I was looking for something more NOT startup… was somewhat suckered in by &lt;a href=&quot;https://twitter.com/jzemlin?ref_src=twsrc%5Etfw&quot;&gt;@jzemlin&lt;/a&gt; to join a &quot;chill, totally not like a startup&quot; nonprofit… &lt;a href=&quot;https://t.co/S3f5jmyqoT&quot;&gt;pic.twitter.com/S3f5jmyqoT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Chris Aniszczyk (@cra) &lt;a href=&quot;https://twitter.com/cra/status/1205147194673762304?ref_src=twsrc%5Etfw&quot;&gt;December 12, 2019&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;As we enter 2020, it’s amusing for me to reflect on my decision to join The Linux Foundation a little over 4 years ago when I was looking for something new to focus on. I spent about 5 years at Twitter which felt like an eternity (the average tenure for a silicon valley employee is &lt;a href=&quot;https://workology.com/ep-31-employee-tenure-of-silicon-valleys-hottest-tech-companies/&quot;&gt;under 2 years&lt;/a&gt;), focused on open source and enjoyed the startup life of going from a hundred or so engineers to a couple of thousand. I truly enjoyed the ride, it was a high impact experience where we were able to open source projects that changed the industry for the better: &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; (changed front end development for the better), &lt;a href=&quot;https://twemoji.twitter.com/&quot;&gt;Twemoji&lt;/a&gt; (made emojis more open source friendly and embeddable), &lt;a href=&quot;http://mesos.apache.org/&quot;&gt;Mesos&lt;/a&gt; (pushed the state of art for open source infrastructure), co-founded &lt;a href=&quot;https://todogroup.org&quot;&gt;TODO Group&lt;/a&gt; (pushed the state of corporate open source programs forward) and more!&lt;/p&gt;
&lt;p&gt;When I was looking for change, I wanted to find an opportunity that could impact more than I could just do at one company. I had some offers from FAANG companies and amazing startups but eventually settled on the nonprofit Linux Foundation because I wanted to build an open source foundation from scratch, teach other companies about open source best practices and assumed non profit life would be a bit more relaxing than diving into a new company (&lt;strong&gt;I was wrong)&lt;/strong&gt;. Also, I was throughly &lt;span style=&quot;font-size: inherit;&quot;&gt;convinced that an openly governed foundation pushing Kubernetes, container specifications and adjacent independent cloud native technologies would be the right model to move open infrastructure forward.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;As we enter 2020, I realize that I’ve been with one organization for a long time and that puts me on edge as I enjoy challenges, chaos and dread anything that makes me comfortable or complacent. Also, I have a strong desire to focus on efforts that involve improving the state of security and privacy in a connected world, participatory democracy, climate change; also anything that pushes open source to new industries and geographies.&lt;/p&gt;
&lt;p&gt;While I’m always happy to entertain opportunities that align to my goals, the one thing that I do enjoy at the LF is that I’ve had the ability to build a variety of new open source foundations improving industries and communities: &lt;a href=&quot;https://cd.foundation/&quot;&gt;CDF&lt;/a&gt;, &lt;a href=&quot;https://foundation.graphql.org&quot;&gt;GraphQL Foundation&lt;/a&gt;, &lt;a href=&quot;https://www.opencontainers.org/&quot;&gt;Open Container Initiative&lt;/a&gt; (OCI), &lt;a href=&quot;https://prestodb.io&quot;&gt;Presto Foundation&lt;/a&gt;, &lt;a href=&quot;https://todogroup.org&quot;&gt;TODO Group&lt;/a&gt;, &lt;a href=&quot;https://uc.foundation&quot;&gt;Urban Computing Foundation&lt;/a&gt; and more.&lt;/p&gt;
&lt;p&gt;Anyways, thanks for reading and I look forward to another year of bringing open source practices to new industries and places, the world is better when we are collaborating openly.&lt;/p&gt;</description>
	<pubDate>Fri, 03 Jan 2020 09:54:28 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: Eclipse Theia IDE – FAQ</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=42471</guid>
	<link>https://eclipsesource.com/blogs/2019/12/24/eclipse-theia-ide-faq/</link>
	<description>&lt;p&gt;In this article weÂ´ll answer the most frequently asked questions about the Eclipse Theia IDE, the open source platform for building...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2019/12/24/eclipse-theia-ide-faq/&quot; rel=&quot;nofollow&quot;&gt;Eclipse Theia IDE – FAQ&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 24 Dec 2019 00:00:26 +0000</pubDate>
</item>
<item>
	<title>Jens Reimann: An update on Eclipse IoT Packages</title>
	<guid isPermaLink="false">https://dentrassi.de/?p=4373</guid>
	<link>https://dentrassi.de/2019/12/19/update-on-eclipse-iot-packages/</link>
	<description>&lt;p&gt;A lot has happened, since &lt;a href=&quot;https://dentrassi.de/2019/09/10/from-building-blocks-to-iot-solutions/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;I wrote last about the Eclipse IoT Packages project&lt;/a&gt;. We had some great discussions at &lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;EclipseCon Europe&lt;/a&gt;, and started to work together online, having new ideas in the progress. Right before the end of the year, I think it is a good time to give an update, and peek a bit into the future.&lt;/p&gt;



&lt;h2&gt;Homepage&lt;/h2&gt;



&lt;p&gt;One of the first things we wanted to get started, was a home for the content we plan on creating. An important piece of the puzzle is to explain to people, what we have in mind. Not only for people that want to try out the various Eclipse IoT projects, but also to possible contributors. And in the end, an important goal of the project is to attract interested parties. For consuming our ideas, or growing them even further.&lt;/p&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;aligncenter is-resized&quot;&gt;&lt;img alt=&quot;Eclipse IoT Packages logo&quot; class=&quot;wp-image-4377&quot; height=&quot;192&quot; src=&quot;https://dentrassi.de/wp-content/uploads/logo.svg&quot; width=&quot;453&quot; /&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;So we now have a logo, &lt;a href=&quot;https://www.eclipse.org/packages/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;a homepage&lt;/a&gt;, built using using templates in a continuous build system. We are in a position to start focusing on the actual content, and on the more tricky tasks and questions ahead. And should you want to create a PR for the homepage, you are more than welcome. There is also already some content, explaining the main goals, the way we want to move forward, and demo of a first package: “Package Zero”.&lt;/p&gt;



&lt;h2&gt;Community&lt;/h2&gt;



&lt;p&gt;While the homepage is a good entry point for people to learn about Eclipse IoT and packages, &lt;a href=&quot;https://github.com/eclipse/packages/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;our GitHub repository&lt;/a&gt; is the home for the community. And having some great discussions on GitHub, quickly brought up the need for &lt;a href=&quot;https://github.com/eclipse/packages/issues/4&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;a community call&lt;/a&gt; and &lt;a href=&quot;https://github.com/eclipse/packages/issues/6&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;a more direct communication channel&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;If you are interested in the project, come and join &lt;a href=&quot;https://www.eclipse.org/packages/contribute/#join-the-community-call&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;our bi-weekly community call&lt;/a&gt;. It is a quick, 30 minutes call at 16:00 CET, and open to everyone. Repeating every two weeks, starting 2019-12-02.&lt;/p&gt;



&lt;p&gt;The URL to the call is: &lt;a href=&quot;https://eclipse.zoom.us/j/317801130&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;https://eclipse.zoom.us/j/317801130&lt;/a&gt;. You can also subscribe to the &lt;a href=&quot;https://calendar.google.com/calendar/ical/lu98p1vc1ed4itl7n9qno3oogc%40group.calendar.google.com/public/basic.ics&quot;&gt;community calendar&lt;/a&gt; to get a reminder.&lt;/p&gt;



&lt;p&gt;In between calls, we have a chat room &lt;a href=&quot;https://gitter.im/eclipse/packages&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;eclipse/packages&lt;/a&gt; on Gitter.&lt;/p&gt;



&lt;h2&gt;Eclipse IoT Helm Chart Repository&lt;/h2&gt;



&lt;p&gt;One of the earliest discussion we had, was around the question of how and were we want to host the Helm charts. We would prefer not to author them ourselves, but let the projects contribute them. After all, the IoT packages project has the goal of enabling you to install a whole set of Eclipse IoT projects, with only a few commands. So the focus is on the integration, and the expert knowledge required for creating project Helm chart, is in the actual projects.&lt;/p&gt;



&lt;p&gt;On the other side, having a one-stop shop, for getting your Eclipse IoT Helm charts, sounds pretty convenient. So why not host our own Helm chart repository?&lt;/p&gt;



&lt;p&gt;Thanks to a company called &lt;a href=&quot;https://github.com/kiwigrid/helm-charts&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Kiwigrid&lt;/a&gt;, who contributed a CI pipeline for validating charts, we could easily extend our existing homepage publishing job, to also publish Helm charts. As a first chart, we published the &lt;a href=&quot;https://www.eclipse.org/ditto/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Ditto&lt;/a&gt; chart. And, as expected with Helm, installing it is as easy as:&lt;/p&gt;



&lt;div class=&quot;wp-block-columns&quot;&gt;
&lt;div class=&quot;wp-block-column&quot;&gt;
&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;a href=&quot;https://dentrassi.de/wp-content/uploads/h1.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-4387&quot; src=&quot;https://dentrassi.de/wp-content/uploads/h1-1024x427.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;/div&gt;



&lt;div class=&quot;wp-block-column&quot;&gt;
&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;a href=&quot;https://dentrassi.de/wp-content/uploads/h2.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-4388&quot; src=&quot;https://dentrassi.de/wp-content/uploads/h2-1024x427.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Of course having a single chart is only the first step. Publishing a single Helm charts isn’t that impressive. But getting an agreement on the community, getting the validation and publishing pipeline set up, attracting new contributors, that is definitely a big step in the right direction.&lt;/p&gt;



&lt;h2&gt;Outlook&lt;/h2&gt;



&lt;p&gt;I think that we now have a good foundation, for moving forward. We have a place called “home”, for documentation, code and community. And it looks like we have also been able to attract more people to the project.&lt;/p&gt;



&lt;p&gt;While our first package, “Package Zero”, still isn’t complete, it should be pretty close. Creating a first, joint deployment of Hono and Ditto is our immediate focus. And we will continue to work towards a first release of “Package Zero”. Finding a better name is still an item on the list.&lt;/p&gt;



&lt;p&gt;Having this foundation in place also means, that the time is right, for you to think about contributing your own Eclipse IoT Package. Contributions are always welcome.&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://dentrassi.de/2019/12/19/update-on-eclipse-iot-packages/&quot; rel=&quot;nofollow&quot;&gt;An update on Eclipse IoT Packages&lt;/a&gt; appeared first on &lt;a href=&quot;https://dentrassi.de&quot; rel=&quot;nofollow&quot;&gt;ctron's blog&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Thu, 19 Dec 2019 12:17:44 +0000</pubDate>
</item>
<item>
	<title>Webtools News: WTP 3.16 Released!</title>
	<guid isPermaLink="false">http://www.eclipse.org/webtools/news.php#permalink190</guid>
	<link>http://eclipse.org/webtools/releases/3.16</link>
	<description>&lt;div&gt;
		The Eclipse Web Tools Platform 3.16 has been released!
		&lt;a href=&quot;https://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F&quot;&gt;Installation&lt;/a&gt;
		and updates can be performed using the
		Eclipse IDE 2019-12
		&lt;a href=&quot;http://download.eclipse.org/releases/2019-12/&quot;&gt;Update Site&lt;/a&gt;
		or through the
		&lt;a href=&quot;https://marketplace.eclipse.org/user/nitind/listings&quot;&gt;Eclipse Marketplace&lt;/a&gt;
		.
		Release 3.16 is included in the 2019-12
		&lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-12/r/eclipse-ide-enterprise-java-developers&quot;&gt;
			Eclipse IDE for Enterprise Java Developers
		&lt;/a&gt;
		, with selected portions also included in several
		&lt;a href=&quot;http://www.eclipse.org/downloads/compare.php&quot;&gt;other packages&lt;/a&gt;
		. Adopters can download
		&lt;a href=&quot;http://download.eclipse.org/webtools/downloads/&quot;&gt;the R3.16 build&lt;/a&gt;
		directly and combine it with the necessary dependencies.&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.eclipse.org/webtools/news.php#permalink190&quot;&gt;More news&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 18 Dec 2019 22:42:59 +0000</pubDate>
</item>
<item>
	<title>Alex Lagarde</title>
	<guid isPermaLink="true">https://alagarde.tumblr.com/post/189730641412</guid>
	<link>https://alagarde.tumblr.com/post/189730641412</link>
	<pubDate>Wed, 18 Dec 2019 01:51:34 +0000</pubDate>
</item>
<item>
	<title>Alex Lagarde: Video</title>
	<guid isPermaLink="true">https://alagarde.tumblr.com/post/189730554792</guid>
	<link>https://alagarde.tumblr.com/post/189730554792</link>
	<description>&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Wed, 18 Dec 2019 01:45:29 +0000</pubDate>
</item>
<item>
	<title>Eclipse Ditto: Announcing Eclipse Ditto Release 1.0.0</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2019-12-12-release-announcement-100.html</guid>
	<link>https://www.eclipse.org/ditto/2019-12-12-release-announcement-100.html</link>
	<description>&lt;p&gt;Today the Eclipse Ditto is thrilled to announce the availability of Eclipse Ditto’s first major release
&lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/1.0.0&quot;&gt;1.0.0&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;maturity&quot;&gt;Maturity&lt;/h2&gt;

&lt;p&gt;The initial code contribution was done in October 2017, 2 years later and 2 releases 
(&lt;a href=&quot;https://www.eclipse.org/ditto/2018-11-28-release-announcement-080.html&quot;&gt;0.8.0&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/ditto/2019-07-10-release-announcement-090.html&quot;&gt;0.9.0&lt;/a&gt;) later, we 
think its time to graduate from the Eclipse “incubation” phase and officially declare the project as mature.&lt;/p&gt;

&lt;p&gt;Recent adoptions and contributions from our community show us that Eclipse Ditto solves problems which also other
companies have. Adopters add Eclipse Ditto as a central part of their own IoT platforms.&lt;/p&gt;

&lt;h3 id=&quot;api-stability&quot;&gt;API stability&lt;/h3&gt;

&lt;p&gt;Having reached 1.0.0, some additional promises towards “API stability” do apply:&lt;/p&gt;

&lt;h4 id=&quot;http-api-stability&quot;&gt;HTTP API stability&lt;/h4&gt;
&lt;p&gt;Ditto uses schema versioning (currently schema version 1 and 2) at the HTTP API level in order to being able to 
evolve APIs.
It is backward compatible to the prior versions 0.8.0 and 0.9.0.&lt;/p&gt;

&lt;h4 id=&quot;json-api-stability&quot;&gt;JSON API stability&lt;/h4&gt;
&lt;p&gt;Ditto kept its main JSON APIs (regarding things, policies and search) backwards compatible to 0.8.0 and 0.9.0 releases.
The JSON format of “connections” was changed since 0.9.0 and will from 1.0.0 on be kept backwards compatible as well.&lt;/p&gt;

&lt;h4 id=&quot;java-api-stability&quot;&gt;Java API stability&lt;/h4&gt;
&lt;p&gt;The Java APIs will for the 1.x release be kept backwards compatible, so only non-breaking additions to the APIs will be done. This is enforced by a Maven tooling.&lt;/p&gt;

&lt;p&gt;The following Java modules are treated as API for which compatibility is enforced:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ditto-json&lt;/li&gt;
  &lt;li&gt;ditto-model-*&lt;/li&gt;
  &lt;li&gt;ditto-signals-*&lt;/li&gt;
  &lt;li&gt;ditto-protocol-adapter&lt;/li&gt;
  &lt;li&gt;ditto-utils&lt;/li&gt;
  &lt;li&gt;ditto-client&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;scalability&quot;&gt;Scalability&lt;/h3&gt;

&lt;p&gt;The focus on the 0.9.0 and 1.0.0 releases regarding non-functionals were laid on horizontal scalability.&lt;/p&gt;

&lt;p&gt;With Eclipse Ditto 1.0.0 we are confident to face production grade scalability requirements being capable of handling 
millions of managed things.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main changes compared to the last release, &lt;a href=&quot;https://www.eclipse.org/ditto/release_notes_090.html&quot;&gt;0.9.0&lt;/a&gt;, are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;addition of a Java and a JavaScript client SDK in separate &lt;a href=&quot;https://github.com/eclipse/ditto-clients&quot;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;configurable OpenID Connect authorization servers&lt;/li&gt;
  &lt;li&gt;support for OpenID Connect / OAuth2.0 based authentication in Ditto Java Client&lt;/li&gt;
  &lt;li&gt;invoking custom foreign HTTP endpoints as a result of events/messages&lt;/li&gt;
  &lt;li&gt;ability to reflect Eclipse Hono’s device connection state in Ditto’s things&lt;/li&gt;
  &lt;li&gt;configurable throttling of max. consumed WebSocket commands / time interval&lt;/li&gt;
  &lt;li&gt;Addition of “definition” field in thing at model level containing the model ID a thing may follow&lt;/li&gt;
  &lt;li&gt;Improved connection response handling/mapping&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;https://www.eclipse.org/ditto/release_notes_100.html&quot;&gt;1.0.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-concierge/&quot;&gt;eclipse/ditto-concierge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>itemis: Xtext 2.20 Release</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/xtext-2.20-release</guid>
	<link>https://blogs.itemis.com/en/xtext-2.20-release</link>
	<description>&lt;p&gt;Right on time for the Eclipse 2019-12 Simultaneous Release, we have shipped Xtext 2.20. This time we focussed more on maintenance work than on features. As with each release, the world around us is spinning fast, and keeping the whole technology stack up-to-date and testing against it is quite time consuming.&lt;/p&gt;  
&lt;h2&gt;Let’s talk about Xtend&lt;/h2&gt; 
&lt;p&gt;For a long time, the Java language missed some features that could make a developer’s life easier. This was one of the reasons that a broad range of languages running on the Java Virtual Machine (JVM) became popular, Xtend being one of them. With its powerful lambda expressions, extension methods, and template support, Xtend had some sweet spots back in 2013, which Java did not have. And even with the availability of lambdas with Java 8, it took some years for projects to catch up with that. Xtend provided this for years, while still being able to produce Java 1.6-compliant code.&lt;/p&gt; 
&lt;p&gt;Now the (Java) world has changed, and some nice language features have been added to Java, making the gap to Xtend smaller. Back in 2013, we claimed Xtend to be the “Java 10 of today”. We are realistic enough to state that Xtend is not and will not be the “Java 17 of today”. However, there are still areas where we see Xtend as beneficial over other Java and other JVM languages. To be more specific, we still think that Xtend is the most powerful language supporting template expressions. The most common use case for this are code generators. Besides that, writing unit tests with Xtend feels much cleaner than with Java.&lt;/p&gt; 
&lt;p&gt;However, we decided to encourage to use Xtend only for these areas, and not as the primary general-purpose language. And we start doing this with the “New Project” wizard. The configuration that this wizard creates for a new Xtext project, will now use Java as the language for generated skeleton classes, so that newly-created projects (and especially new users) are using Java by default. This is just a changed default for the generated MWE2 workflow, and users, who still prefer to use Xtend for the generated artifacts, can simply modify the workflow file. We expect that those users are advanced anyway. Xtend will stay the default language for the code generator and unit test fragments.&lt;/p&gt; 
&lt;p&gt;Additionally, we have started to clean up the code base and to refactor some of the Xtend code to Java. As Xtend already is compiled into Java, this basically means that we take those sources and clean them up. This will be an ongoing maintenance work. If you like to contribute to Xtext, this would be a good starting point for refactoring contributions.&lt;/p&gt; 
&lt;h2&gt;New Xtend features&lt;/h2&gt; 
&lt;p&gt;After that being said, there is some good news about some features that have been added to Xtend’s Eclipse integration. We are very happy about some useful contributions from Vivien Jovet in this area.&lt;/p&gt; 
&lt;p&gt;A new refactoring has been implemented that allows the user to refactor a call to a static method either as static import or as a static extension. This allows the user to produce more readable and fluent code.&lt;/p&gt; 
&lt;p&gt;EMBED:&lt;/p&gt; 
&lt;img alt=&quot;Xtext_Release_2_20_refactoring_import_static_method&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Software%20Development/Xtext%202.20%20Release/Xtext_Release_2_20_refactoring_import_static_method.gif?width=871&amp;amp;name=Xtext_Release_2_20_refactoring_import_static_method.gif&quot; style=&quot;width: 871px; display: block; margin: 0px auto;&quot; width=&quot;871&quot; /&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;p&gt;The &lt;strong&gt;testing support&lt;/strong&gt; for Xtend has been improved:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An Xtend unit test can now be triggered within the Eclipse IDE when the cursor is located around the test class definition.&lt;/li&gt; 
 &lt;li&gt;As known from JDT’s JUnit integration, Xtend now also provides quickfixes if the JUnit library is missing on the classpath. By using the quickfix, the library can be added for either JUnit 4 or 5.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;It’s time to get rid off old generator workflows&lt;/h2&gt; 
&lt;p&gt;Already back in 2015, we changed to new Xtend-based generator fragments and deprecated the old Xpand-based language generator. If you still use an old generator workflow based on the &lt;em&gt;org.eclipse.xtext.generator&lt;/em&gt; bundle (the new bundle is &lt;em&gt;org.eclipse.xtext.xtext.generator&lt;/em&gt;, please note the duplicated &lt;em&gt;.xtext&lt;/em&gt; segment), then it is time for you to finally take action!&lt;/p&gt; 
&lt;p&gt;The old generator is based on the Xpand language, which is dormant for a while. We are refactoring Xtext to avoid any dependency on Xpand, except for the deprecated generator bundle. Also, we do not change the old generator templates anymore, so we strongly recommend to use the maintained new generator infrastructure. Although it is not scheduled yet, dropping the whole old generator completely is just a matter of time. So, please, if you still have any anciently-structured Xtext projects, migrate them to the recommended infrastructure! If you need help on this, get in contact with us. We have enough experience to help you quickly on that.&lt;/p&gt; 
&lt;h2&gt;Create new projects and files from the toolbar&lt;/h2&gt; 
&lt;p&gt;If you want to allow creation of projects and files for your DSL from the toolbar, then this is good news for you: The fragments for generating the infrastructure for wizards have been extended by an option called &lt;em&gt;generateToolbarButton&lt;/em&gt;. As the name already suggests, the generator fragments will generate the button to the toolbar, if this option is enabled in the fragment’s configuration in your generator workflow.&lt;/p&gt; 
&lt;h2&gt;Making our maintenance work easier&lt;/h2&gt; 
&lt;p&gt;With 4 releases per year and 3 milestone releases towards any release, it is quite some effort to make these releases. As we finished our hopefully last build infrastructure change to Eclipse JIRO with the previous release, we were able to invest a bit of time into enhancing our build pipelines again.&lt;/p&gt; 
&lt;p&gt;As a result, initiating a milestone or final release is mostly triggering a parameterized build job now and then waiting several hours until everything has been build. Actually, while I’m writing this article, the final Xtext release is being build for you, which has been triggered 3.5 hours before. Yes, it still builds that long. And it is still painful to orchestrate the build over all Xtext repositories. There are still some steps that require manual action (releasing to Maven Central, updating Eclipse Marketplace, sending notifications to the communication channels), but we slowly add all automatable tasks to the pipelines.&lt;/p&gt; 
&lt;p&gt;Also, we interacted with the Eclipse infrastructure staff to get us in the position that our technical build user is able to raise pull requests on GitHub automatically. This enabled us to create a bot update pipeline that lets us automate some frequently occurring update changes. This is, for example, updating the version, versions to use (like Tycho), the Orbit URL, etc. The job raises pull requests for us, so we can safely verify that nothing is missing and that everything is properly built. It is very much like these dependency update bots like &lt;a href=&quot;https://dependabot.com/&quot; style=&quot;font-style: italic; font-weight: normal;&quot; title=&quot;Link to dependabot.com (opens in a new tab)&quot;&gt;Dependabot&lt;/a&gt; that are coming up more and more, but tightly tailored to the very specific needs of the Xtext project. We are still at the beginning here. Some first pull requests merged for 2.20 have been created by the bot job. We expect that the bot will be triggered automatically in the future and that the bot user will become one of the most active Xtext contributors then.&lt;/p&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;Xtext 2.20 is a maintenance release. For users of a recent Xtext version it will be a drop-in replacement. Users of old versions and project structures are recommended to upgrade their projects, in order to keep their projects compatible.&lt;/p&gt; 
&lt;p&gt;The Xtext project started to discourage the usage of Xtend where the latter’s language features do not have a significant benefit over Java. And internally, the project started to refactor the codebase to follow this recommendation.&lt;/p&gt; 
&lt;p&gt;For build and release engineering, the project improved towards more automated tasks and benefits from reduced manual maintenance tasks.&lt;/p&gt; 
&lt;p&gt;The project team is happy about receiving contributions. We are especially grateful about new feature ideas that are actively developed by contributors.&lt;/p&gt; 
&lt;p&gt;Do you want to know more? Have a look at the &lt;a href=&quot;https://www.eclipse.org/Xtext/releasenotes.html#/releasenotes/2019/03/05/version-2-17-0&quot; style=&quot;font-style: italic;&quot; title=&quot;Link to eclipse.org/Xtext (opens in a new tab)&quot;&gt;release notes for Xtext&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.eclipse.org/xtend/releasenotes.html#/releasenotes/2019/03/05/version-2-17-0&quot; title=&quot;Link to eclipse.org/Xtend (opens in a new tab)&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;Xtend&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fxtext-2.20-release&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 03 Dec 2019 14:38:45 +0000</pubDate>
	<author>thoms@itemis.de (Karsten Thoms)</author>
</item>
<item>
	<title>Melanie Bats: Obeo Cloud Platform</title>
	<guid isPermaLink="true">http://localhost:4000/2019/12/02/ocp-9-month-journey/</guid>
	<link>http://localhost:4000/2019/12/02/ocp-9-month-journey/</link>
	<description>&lt;p&gt;&lt;em&gt;TLDR; This is almost the story of my first CTO pregnancy experience, organizational stuff inside.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It’s been almost 2 years since I started operating as Obeo’s CTO, 2 years since I accepted the challenge to take the lead of our R&amp;amp;D. As part of this, almost 1 year ago I started to organize the development of our new generation modeling tool solution. And for the past 9 months my team has been busy working full time on this new product.&lt;/p&gt;

&lt;p&gt;When you become &lt;del&gt;pregnant&lt;/del&gt; a product manager, you are basically a story trigger for everyone around you: people love to tell their failure-project and their stupid-leader story. It is scary to be at the place where you are the one who decides. It is even more frightening when you are at the point where you redesign your products with a completely different technological layer. This is where I was one year ago. At Obeo, we have been developing for years modeling workbenches based on the Eclipse Platform. Today our customers want more and asked us to modernize the modeling stack by making it cloud compliant. So how do we go from this statement to a first software release?&lt;/p&gt;

&lt;p&gt;If you’re a product manager or affiliate, you’re probably aware that the first nine months of a new software product are always a big adventure.
CTOs-to-be may have a lot of questions about what they can expect and the changes they’ll go through.
Do you know when to expect to feel your product move? When to look for a UI/UX designer or a continuous deployment pipeline? Customer interest on what you are developing? Is that the signs of preterm labor?&lt;/p&gt;

&lt;h2 id=&quot;1st-month---your-imagination-has-no-limit&quot;&gt;1st month - Your imagination has no limit&lt;/h2&gt;

&lt;p&gt;The beginning of a new product is not easy. Where should we start?
Should we rely on the prototypes we already have? Should we built a completely new project? How will you build your team? Who will be in? When? What will be the first scenario that will be supported in your software? How should you be organized?
These are all the first questions you will come across.&lt;/p&gt;

&lt;p&gt;What I will remember from that first month is that at some point you have to take decision: that is why you are here, that’s your job, and that will remind you why there is a C in CTO. You have the power of choice.
There is not a unique good solution for everything. When every other person has a piece of advice for you, you start to understand that not everything works for everyone. I found what I believe works best for me. Of course, what works for me may not work for you: it depends on your company technological background but also on how you want to get your collaborators engaged as well. Each project, team and context is different.&lt;/p&gt;

&lt;p&gt;Take the time to discuss this with others in your company, take the time to find what they need but also what are they dreaming about this new product. I developed my product vision for example by asking people to fill in a survey with questions such as in 1, 2, 5 years what is the final goal, the business needs, the users expectations, the success factor, etc. See the &lt;a href=&quot;http://melb.enix.org/img/ocp-9month/ProductVision.png&quot;&gt;product vision template&lt;/a&gt; available on my github for details.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melb.enix.org/img/ocp-9month/ProductVision.png&quot;&gt;&lt;img alt=&quot;Product Vision Template&quot; class=&quot;center&quot; src=&quot;http://melb.enix.org/img/ocp-9month/ProductVision.png&quot; title=&quot;Product Vision&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Write a summary of all this.
And in the end, find your own voice in the ocean of opinions.
Build your team, define your first scenario, share with everyone what you decided and do not hesitate to fail! Your first organisation might not be the best one: try, learn, update, reorganize, try something else… You are not alone in this task, this is a collective effort. The entire team cares about its organization and discusses it regularly by making retrospectives, having a dedicated moment during regular meetings, defining process to improve their collaboration, selecting tools…&lt;/p&gt;

&lt;p&gt;The questional period you just went through, your team will go through the same. Which technical bricks will they rely on? Which part of our existing code will integrate this new project? Should we start by building the simplest scenario, this without taking into account the whole complexity of the end product you are trying to build? What should in the end be the software architecture?&lt;/p&gt;

&lt;p&gt;Important point, give some time to your team to discuss all those things. But ask them to produce something even during that period. In our case, we wrote documents (AsciiDoc rocks!) and decided to keep a trace of all our decisions. For that, we used ADR - Architectural Decision Record: it is like reading the pocket reference of your project. After several months of use, it has turned out to be really useful. It helps people who are working part time on the project to get what we decided and why and help remember why we took a given decision. It forces us to discuss and validate all the important decisions together.
You also need to stop this questioning period by just pushing your team to contribute &lt;em&gt;code&lt;/em&gt; and not just loosing them in the limbs of the imaginative product.&lt;/p&gt;

&lt;h2 id=&quot;mid-months---scared-believe-realize&quot;&gt;Mid months - Scared! Believe! Realize!&lt;/h2&gt;

&lt;p&gt;Pregnancy, giving software birth and the first 3 months is such an emotional roller coaster with so many changes. As you move forward on your development journey, it is amazing to discover all the things your sweety-software can do before he’s born. We went through different themes during these months: Persistence, CRUD, Diagram, Properties views, Edition, Concurrence, Authentication…
Then everything is on track, you are organized as a team, code is being produced, your scenarios are more and more rich. And at some point, we realized we were actually growing life within us. It did not come right when we started the project.&lt;/p&gt;

&lt;p&gt;I felt it in 3 specific moments —&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When we chose the name - Obeo Cloud Platform,&lt;/li&gt;
  &lt;li&gt;When I had a first &lt;del&gt;ultrasound scan&lt;/del&gt; preview of the UI - fortunately we have a Design team to work with,&lt;/li&gt;
  &lt;li&gt;And when he kicked for the first time - I mean his first public live demo.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;We will also never forget our baby shower celebration at EclipseCon Europe! This was an amazing moment for us. We were so happy to present our new work to the Sirius community.
That day I was feeling the kicks in my belly.
As Steve Jobs puts it, “A lot of times, people don’t know what they want until you show it to them.” That’s why we decided to give a preview of our new product even before it is polished, and why we launched a beta testing team. The idea is to give them a preview access and organize live remote testing sessions to grow the feedback river with real end-users. &lt;a href=&quot;https://t.co/Zgh3KMxtUU?amp=1&quot;&gt;Join us now and share your needs&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id=&quot;8-9th-months---you-are-almost-releasing&quot;&gt;8-9th months - You are (almost) releasing!&lt;/h2&gt;

&lt;p&gt;Today, I do not even realise it is already the last months of pregnancy: we are getting closer and closer to our due date. I have this mixed feeling of excitement and nervousness and want our software product to come as soon as possible.&lt;/p&gt;

&lt;p&gt;Our product is getting ready for birth, and the whole Obeo family is preparing to welcome a new member. You are also invited to join us, stay tuned for the upcoming SiriusCon Live Q1 2020.&lt;/p&gt;

&lt;p&gt;At the end of this year, on his first days, our software product will be tiny and little. It will know only a few things but will do them well. Next we will continue to feed him: baby bottles first and then we will go through the diversification phase introducing new kind of food.
My team will help him to grow, you, our users, our customers will be part of its education. We have many projects and plans, but we need you to turn true customers problems into product features.&lt;/p&gt;

&lt;p&gt;Sometimes it’s important to stop and look back. It really made me appreciate and comprehend what an amazing experience I and my company went through ❤ and still are.&lt;/p&gt;

&lt;p&gt;Hope you had a good read.&lt;/p&gt;</description>
	<pubDate>Mon, 02 Dec 2019 10:00:00 +0000</pubDate>
</item>
<item>
	<title>Karsten Thoms: Eclipse m2e: How to use a WORKSPACE Maven installation</title>
	<guid isPermaLink="false">http://kthoms.wordpress.com/?p=1027</guid>
	<link>https://kthoms.wordpress.com/2019/11/27/eclipse-m2e-how-to-use-a-workspace-maven-installation/</link>
	<description>&lt;p&gt;Today a colleague of me asked me about the Maven Installations preference page in Eclipse. There is an entry &lt;tt&gt;WORKSPACE&lt;/tt&gt; there, which is disabled and shows &lt;tt&gt;NOT AVAILABLE&lt;/tt&gt;. He wanted to know how to enable a workspace installation of Maven.&lt;br /&gt;
&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-1029&quot; height=&quot;433&quot; src=&quot;https://kthoms.files.wordpress.com/2019/11/screenshot-343.png?w=584&amp;amp;h=433&quot; width=&quot;584&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Since we both did not find the documentation of the feature I digged into the m2e sources and found class &lt;a href=&quot;https://github.com/eclipse/m2e-core/blob/releases/1.12/1.12.0.20190529-1916/org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/launch/MavenWorkspaceRuntime.java&quot;&gt;&lt;tt&gt;MavenWorkspaceRuntime&lt;/tt&gt;&lt;/a&gt;. The relevant snippets are the method &lt;tt&gt;getMavenDistribution()&lt;/tt&gt; and the &lt;tt&gt;MAVEN_DISTRIBUTION&lt;/tt&gt; constant:&lt;/p&gt;
&lt;pre class=&quot;c-mrkdwn__pre&quot;&gt;private static final ArtifactKey MAVEN_DISTRIBUTION = new ArtifactKey(
      &quot;org.apache.maven&quot;, &quot;apache-maven&quot;, &quot;[3.0,)&quot;, null); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$

...

protected IMavenProjectFacade getMavenDistribution() {
  try {
    VersionRange range = VersionRange.createFromVersionSpec(getDistributionArtifactKey().getVersion());
    for(IMavenProjectFacade facade : projectManager.getProjects()) {
      ArtifactKey artifactKey = facade.getArtifactKey();
      if(getDistributionArtifactKey().getGroupId().equals(artifactKey.getGroupId()) //
          &amp;amp;&amp;amp; getDistributionArtifactKey().getArtifactId().equals(artifactKey.getArtifactId())//
          &amp;amp;&amp;amp; range.containsVersion(new DefaultArtifactVersion(artifactKey.getVersion()))) {
        return facade;
      }
    }
  } catch(InvalidVersionSpecificationException e) {
    // can't happen
  }
  return null;
}&lt;/pre&gt;
&lt;p&gt;From here you can see that m2e tries to look for workspace (Maven) projects and to find one the has the coordinates &lt;tt&gt;org.apache.maven:apache-maven:[3.0,)&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;So the answer how to enable a WORKSPACE Maven installation is: Import the project &lt;tt&gt;apache-maven&lt;/tt&gt; into the workspace. And here is how to do it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone Apache Maven from &lt;a href=&quot;https://github.com/apache/maven.git&quot;&gt;https://github.com/apache/maven.git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optionally: check out a release tag
&lt;pre&gt;git checkout maven-3.6.3&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Perform &lt;em&gt;File / Import / Existing Maven Projects&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;As &lt;em&gt;Root Directory&lt;/em&gt; select the &lt;tt&gt;apache-maven&lt;/tt&gt; subfolder in your Maven clone location&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now you will have the project that m2e searches for in your workspace:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-1035&quot; src=&quot;https://kthoms.files.wordpress.com/2019/11/screenshot-344.png?w=584&quot; /&gt;&lt;/p&gt;
&lt;p&gt;And the Maven Installations preference page lets you now select this distribution:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-1037&quot; height=&quot;478&quot; src=&quot;https://kthoms.files.wordpress.com/2019/11/screenshot-345.png?w=584&amp;amp;h=478&quot; width=&quot;584&quot; /&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 27 Nov 2019 09:39:29 +0000</pubDate>
</item>
<item>
	<title>Christopher Guindon: Modernizing our GitHub Sync Toolset</title>
	<guid isPermaLink="true">https://www.chrisguindon.com/post/modernizing-our-github-sync-script/</guid>
	<link>https://www.chrisguindon.com/post/modernizing-our-github-sync-script/</link>
	<description>&lt;p&gt;I am happy to announce that my team is ready to deploy a new version of our &lt;a href=&quot;https://github.com/EclipseFdn/eclipsefdn-github-sync&quot;&gt;GitHub Sync Toolset&lt;/a&gt; on November 26, 2019 from 10:00 to 11:00 am EST.&lt;/p&gt;
&lt;p&gt;We are not expecting any disruption of service but it’s possible that some committers may lose write access to their Eclipse project GitHub repositories during this 1 hour maintenance window.&lt;/p&gt;
&lt;p&gt;This toolset is responsible for syncronizing Eclipse committers accross all our GitHub repositories and on top of that, this new release will start syncronizing contributors.&lt;/p&gt;
&lt;p&gt;In this context, a contributor is a GitHub user with read access to the project GitHub repositories. This new feature will allow committers to assign issues to contributors who currently don’t have write access to the repository. This feature was requested in 2015 via &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=483563&quot;&gt;Bug 483563&lt;/a&gt; - Allow assignment of GitHub issues to contributors.&lt;/p&gt;
&lt;p&gt;Eclipse Committers are reponsible for maintaining a list of GitHub contributors from their &lt;a href=&quot;https://projects.eclipse.org/&quot;&gt;project&lt;/a&gt; page on the Eclipse Project Management Infrastructure (PMI).&lt;/p&gt;
&lt;p&gt;To become an Eclipse contributor on a GitHub for a project, please make sure to tell us your &lt;strong&gt;GitHub Username&lt;/strong&gt; in your &lt;a href=&quot;https://accounts.eclipse.org/user/edit&quot;&gt;Eclipse account&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 19 Nov 2019 20:10:46 +0000</pubDate>
</item>
<item>
	<title>Christian Pontesegger: Jakarta Microprofile REST Client in Eclipse</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-3460102793186140898.post-3693889557082666010</guid>
	<link>http://codeandme.blogspot.com/2019/11/jakarta-microprofile-rest-client-in.html</link>
	<description>Today we are going to implement a simple REST client for an Eclipse RCP application. Now with Jakarta @ Eclipse and all these nice Microprofile implementations this should be a piece of cake, right? Now lets see...&lt;br /&gt;&lt;br /&gt;Source code for this tutorial is available on github as a &lt;a href=&quot;https://github.com/Pontesegger/codeandme/blob/master/Code%20&amp;amp;%20Me%20Blog/RESTEasy_client.zip?raw=true&quot; target=&quot;_blank&quot;&gt;single zip archive&lt;/a&gt;, as a &lt;a href=&quot;https://github.com/Pontesegger/codeandme/blob/master/Code%20&amp;amp;%20Me%20Blog/RESTEasy_client.psf?raw=true&quot;&gt;Team Project Set&lt;/a&gt; or you can &lt;a href=&quot;https://github.com/Pontesegger/codeandme/tree/master/rest_client&quot; target=&quot;_blank&quot;&gt;browse the files&lt;/a&gt; online.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Step 1: Dependencies&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The &lt;a href=&quot;https://github.com/eclipse/microprofile-rest-client&quot; target=&quot;_blank&quot;&gt;Eclipse Microprofile REST Client repository&lt;/a&gt; is a good place to get started. It points to several implementations (at the bottom of the readme). Unfortunately these implementations do not host any kind of p2 sites which we could use directly. So our next stop is &lt;a href=&quot;https://download.eclipse.org/tools/orbit/downloads/&quot; target=&quot;_blank&quot;&gt;Eclipse Orbit&lt;/a&gt;, but same situation there. This means we need to collect our dependencies manually.&lt;br /&gt;&lt;br /&gt;For my example I used &lt;a href=&quot;https://resteasy.github.io/&quot; target=&quot;_blank&quot;&gt;RESTEasy&lt;/a&gt;, simply as it was the only one I could get working within reasonable time. To fetch dependencies, download the &lt;a href=&quot;https://resteasy.github.io/downloads.html&quot; target=&quot;_blank&quot;&gt;latest version of RESTEasy&lt;/a&gt;. As the RESTEasy download package does not contain the REST client API, we need to fetch that from another source. I found it in the &lt;a href=&quot;http://cxf.apache.org/download.html&quot; target=&quot;_blank&quot;&gt;Apache CXF project&lt;/a&gt;, so download the latest version too. If you know a better source, please let me know in the comments.&lt;br /&gt;&lt;br /&gt;Now create a new &lt;i&gt;Plug-in from Existing JAR Archives&lt;/i&gt;. Click on &lt;i&gt;Add External...&lt;/i&gt; and add all jars from resteasy-jaxrs-x.y.z.Final/lib/*.jar. Further add apache-cxf-x.y.z/lib/jakarta.ws.rs-api-x.y.z.jar.&lt;br /&gt;This plug-in now contains all dependencies we need for our client. Unfortunately also a lot of other stuff we probably do not need, but we leave the cleanup for later.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Step 2: Define the REST service&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;For our example we will build a client for the &lt;a href=&quot;https://petstore.swagger.io/&quot; target=&quot;_blank&quot;&gt;Petstore Service&lt;/a&gt;, which can be used for testing purposes. Further it provides a swagger interface to test the REST calls online. I recommend to check out the API and play with some commands online and with curl.&lt;br /&gt;&lt;br /&gt;Lets write a simple client for the store with its 4 commands. The simplest seems to be the &lt;i&gt;inventory&lt;/i&gt; command, so we will start there. Create a new Java interface:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;package com.codeandme.restclient.resteasy;&lt;br /&gt;&lt;br /&gt;import javax.ws.rs.GET;&lt;br /&gt;import javax.ws.rs.Path;&lt;br /&gt;import javax.ws.rs.Produces;&lt;br /&gt;import javax.ws.rs.core.MediaType;&lt;br /&gt;import javax.ws.rs.core.Response;&lt;br /&gt;&lt;br /&gt;public interface IStoreService {&lt;br /&gt;&lt;br /&gt; @GET&lt;br /&gt; @Path(&quot;/v2/store/inventory&quot;)&lt;br /&gt; @Produces(MediaType.APPLICATION_JSON)&lt;br /&gt; Response getInventory();&lt;br /&gt;}&lt;/pre&gt;Everything necessary for RESTEasy is provided via annotations:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;@Path&lt;/i&gt; defines the path for the command of the REST service&lt;/li&gt;&lt;li&gt;&lt;i&gt;@GET&lt;/i&gt; defines that we have to use a GET command (there exist annotations for POST, DELETE, PUT)&lt;/li&gt;&lt;li&gt;&lt;i&gt;@Produces&lt;/i&gt; finally defines the type of data we do get in response from the server.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;b&gt;&lt;u&gt;Step 3: Create an instance of the service&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Create a new class &lt;i&gt;StoreServiceFactory&lt;/i&gt;:&lt;/div&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;package com.codeandme.restclient.resteasy;&lt;br /&gt;&lt;br /&gt;import java.net.URI;&lt;br /&gt;import java.net.URISyntaxException;&lt;br /&gt;&lt;br /&gt;import org.jboss.resteasy.client.jaxrs.ResteasyClient;&lt;br /&gt;import org.jboss.resteasy.client.jaxrs.ResteasyWebTarget;&lt;br /&gt;import org.jboss.resteasy.client.jaxrs.internal.ResteasyClientBuilderImpl;&lt;br /&gt;&lt;br /&gt;public class StoreServiceFactory {&lt;br /&gt;&lt;br /&gt; public static IStoreService createStoreService() throws URISyntaxException {&lt;br /&gt;  ResteasyClient client = new ResteasyClientBuilderImpl().build();&lt;br /&gt;  ResteasyWebTarget target = client.target(new URI(&quot;https://petstore.swagger.io/&quot;));&lt;br /&gt;  return target.proxy(IStoreService.class);&lt;br /&gt; }&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;This is the programmatic way to create a client instance. There also exists another method called &lt;a href=&quot;https://download.eclipse.org/microprofile/microprofile-rest-client-1.3/microprofile-rest-client-1.3.html#restcdi&quot; target=&quot;_blank&quot;&gt;CDI&lt;/a&gt;, which I did not try out in Eclipse.&lt;br /&gt;&lt;br /&gt;The service is ready and usable, so give it a try. The result object returned does contain some valuable information:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;getStatus()&lt;/i&gt; provides the H&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_status_codes&quot; target=&quot;_blank&quot;&gt;TTP response status&lt;/a&gt;. 200 is expected for a successful &lt;i&gt;getInventory()&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;getEntity()&lt;/i&gt; provides an &lt;i&gt;InputStream&lt;/i&gt; which contains the JSON encoded response data from the server&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;b&gt;&lt;u&gt;Step 4: Response decoding&lt;/u&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Our response is encoded as &lt;a href=&quot;https://www.tutorialspoint.com/json/json_data_types.htm&quot; target=&quot;_blank&quot;&gt;JSON collection of properties&lt;/a&gt;. In Java terms this basically reflects to a &lt;i&gt;Map&amp;lt;String, String&amp;gt;&lt;/i&gt;. Instead of decoding the data manually, we let the framework do it for us:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Change the &lt;i&gt;IStoreService&lt;/i&gt; to:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;pre class=&quot;brush: javascript&quot;&gt; Map&amp;lt;String, String&amp;gt; getInventory();&lt;/pre&gt;Anything else is done by the framework. Now how easy was that?&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Step 5: POST request&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;To place an order we need order parameters. Best we encapsulate them in a dedicated &lt;a href=&quot;https://github.com/Pontesegger/codeandme/blob/master/rest_client/com.codeandme.restclient.resteasy/src/com/codeandme/restclient/resteasy/Order.java&quot; target=&quot;_blank&quot;&gt;Order class&lt;/a&gt;. From the definition of the &lt;i&gt;order&lt;/i&gt; REST call we can see that we need following class properties: &lt;i&gt;id, petId, quantity, shipDate, status, complete&lt;/i&gt;. Add these parameters as fields to the &lt;i&gt;Order&lt;/i&gt; class and create getters/setters for them.&lt;br /&gt;&lt;br /&gt;Now we can extend our &lt;i&gt;IStoreService&lt;/i&gt; with the &lt;i&gt;fileOrder()&lt;/i&gt; call:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;@Path(&quot;/v2/store&quot;)&lt;br /&gt;public interface IStoreService {&lt;br /&gt;&lt;br /&gt; @GET&lt;br /&gt; @Path(&quot;inventory&quot;)&lt;br /&gt; @Produces(MediaType.APPLICATION_JSON)&lt;br /&gt; Map&amp;lt;String, String&amp;gt; getInventory();&lt;br /&gt;&lt;br /&gt; @POST&lt;br /&gt; @Path(&quot;order&quot;)&lt;br /&gt; @Consumes(MediaType.APPLICATION_JSON)&lt;br /&gt; void fileOrder(Order order);&lt;br /&gt;}&lt;/pre&gt;&lt;br /&gt;The &lt;i&gt;Order&lt;/i&gt; automatically gets encoded as JSON object. No need for us to do the coding manually!&lt;br /&gt;&lt;br /&gt;As parts of the path are the same for both calls, I moved the common component to the class level.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Step 6: Path parameters&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;To fetch an order we need to put the &lt;i&gt;orderId&lt;/i&gt; in the request path. Coding of such parameters is put in curly braces. The parameter on the java call then gets annotated so the framework knows which parameter value to put into the path:&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt; @GET&lt;br /&gt; @Path(&quot;order/{orderId}&quot;)&lt;br /&gt; @Produces(MediaType.APPLICATION_JSON)&lt;br /&gt; Order getOrder(@PathParam(&quot;orderId&quot;) int orderId);&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;Again the framework takes care of the decoding of the JSON data.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Step 7: DELETE an Order&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Deleting needs the &lt;i&gt;orderId&lt;/i&gt; as before:&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt; @DELETE&lt;br /&gt; @Path(&quot;order/{orderId}&quot;)&lt;br /&gt; void deleteOrder(@PathParam(&quot;orderId&quot;) int orderId);&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;The REST API does not provide a useful JSON response to the delete call. One option is to leave the response type to &lt;i&gt;void&lt;/i&gt;. In case the command fails, an exception will be thrown (eg when the &lt;i&gt;orderId&lt;/i&gt; is not found and the server returns 404).&lt;br /&gt;&lt;br /&gt;Another option is to set the return type to &lt;i&gt;javax.ws.rs.core.Response&lt;/i&gt;. Now we do get everything the server sends back and no execption is thrown anymore. Sometimes we might only be interested in the status code. This can be fetched when setting the return type to &lt;i&gt;Response.Status&lt;/i&gt;. Again, no exception will be thrown on a 404.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Optional: Only have required RESTEasy dependencies&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Looking at all these jars I could not figure out a good way to get rid of the ones unused by the REST client. So I provided unit tests for all my calls and then removed dependencies step by step until I found the minimal set of required jars.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Mon, 18 Nov 2019 11:19:24 +0000</pubDate>
	<author>noreply@blogger.com (Christian Pontesegger)</author>
</item>
<item>
	<title>Ed Merks: Getting to the Source</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-3879044552984472733.post-2271472252707441274</guid>
	<link>http://ed-merks.blogspot.com/2019/11/getting-to-source.html</link>
	<description>As a Java developer using JDT, no doubt you are intimately familiar with Ctrl-Shift-T to launch the Open Type dialog.  You might not even realize this is a shortcut accessible via the Navigate menu.  So you probably will not have noticed that this menu also contains Open Discovered Type: &lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-JwsYn0w4HDI/XcUkFZFWfpI/AAAAAAAACuA/x-itRQnxAi4l_srTPEYvffHS6d2Px8EEwCLcBGAsYHQ/s1600/NavigateOpenDiscoveredType.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;320&quot; src=&quot;https://1.bp.blogspot.com/-JwsYn0w4HDI/XcUkFZFWfpI/AAAAAAAACuA/x-itRQnxAi4l_srTPEYvffHS6d2Px8EEwCLcBGAsYHQ/s320/NavigateOpenDiscoveredType.png&quot; width=&quot;169&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Eclipse has a huge variety of open source projects maintained in a bewildering collection of Git repositories.  Many are hosted at Eclipse:&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;&lt;a href=&quot;https://git.eclipse.org/c/&quot;&gt;https://git.eclipse.org/c/&lt;/a&gt;&lt;/blockquote&gt;Others are hosted at Github: &lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;&lt;a href=&quot;https://github.com/eclipse/&quot;&gt;https://github.com/eclipse/&lt;/a&gt;&lt;/blockquote&gt;&lt;br /&gt;Finding the Git repository that contains a particular Java class is like finding a needle in a haystack.  This is where Open Discovered Type comes to the rescue.  Once a week, Oomph indexes every *.java file in every Git repository hosted by git.eclipse.org and github.com/eclipse.  The Open Discovered Type dialog loads this information to populate a tree view of all these packages and classes.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-lZXS9WRSVr8/XcUophKI66I/AAAAAAAACuM/HfMp5TN738w_cQnDTi999qN5Y8COhXNPgCLcBGAsYHQ/s1600/EmptyOpenDiscoveredDialog.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;215&quot; src=&quot;https://1.bp.blogspot.com/-lZXS9WRSVr8/XcUophKI66I/AAAAAAAACuM/HfMp5TN738w_cQnDTi999qN5Y8COhXNPgCLcBGAsYHQ/s320/EmptyOpenDiscoveredDialog.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Please read the help information the first time you use it.  It was written to help you get the most out of this dialog.  Also be patient the first time you launch the dialog; there's a lot of information to download.&lt;br /&gt;&lt;br /&gt;Suffice to say, you can use the dialog much like you do Open Type.  So here we search for JavaCore and discover all the classes with that name:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-3Girme8m5z4/XcUrB7s2neI/AAAAAAAACuY/ISr8AMR0zuEgnlpkX5a3Vw337WNLKeiuACLcBGAsYHQ/s1600/OpenDiscoveredTypeDialogForJavaCore.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;320&quot; src=&quot;https://1.bp.blogspot.com/-3Girme8m5z4/XcUrB7s2neI/AAAAAAAACuY/ISr8AMR0zuEgnlpkX5a3Vw337WNLKeiuACLcBGAsYHQ/s320/OpenDiscoveredTypeDialogForJavaCore.png&quot; width=&quot;249&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;We can select any one of them and discover all the Git repositories containing that class and we can use the context menu for each link for each repository or for the specific file in that repository to open the link where we want it opened.  From that link, you can of course see the full history of the repository or specific file.&lt;br /&gt;&lt;br /&gt;As a bonus, if this repository provides an Oomph setup, you can easily use that Oomph setup to import the sources for this project into your workspace. If there is no Oomph setup, you'll have to do that manually.&lt;br /&gt;&lt;br /&gt;In any case, contributing to Eclipse open source projects has never been easier.</description>
	<pubDate>Fri, 08 Nov 2019 09:04:06 +0000</pubDate>
	<author>noreply@blogger.com (Ed Merks)</author>
</item>
<item>
	<title>Lars Vogel: Eclipse startup up time improved</title>
	<guid isPermaLink="true">https://www.vogella.com/blog/posts/eclipse-ide-startuptime/</guid>
	<link>https://www.vogella.com/blog/posts/eclipse-ide-startuptime/</link>
	<description>I’m happy to report that the Eclipse SDK integration builds starts in less than 5 seconds (~4900 ms) on my machine into an empty workspace.
IIRC this used to be around 9 seconds 2 years ago. 4.13 (which was already quite a bit improved used around 5800ms (6887ms with EGit and Marketplace).
For recent improvements in this release see https://bugs.eclipse.org/bugs/show_bug.cgi?id=550136
Thanks to everyone who contributed.</description>
	<pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Scott Lewis: ECF 3.14.6 Released</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-20358640.post-1917910940170520894</guid>
	<link>http://eclipseecf.blogspot.com/2019/11/ecf-3146-released_2.html</link>
	<description>&lt;a href=&quot;https://www.eclipse.org/ecf/&quot;&gt;ECF 3.14.6&lt;/a&gt; has been released and may be &lt;a href=&quot;https://www.eclipse.org/ecf/downloads.php&quot;&gt;downloaded&lt;/a&gt; here.&lt;br /&gt;&lt;br /&gt;In concert with this bug fix release have been a number of additions to &lt;a href=&quot;https://github.com/ECF&quot;&gt;ECF's github projects for Remote Services Development.&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Distribution and Discovery Providers&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;New:  &lt;a href=&quot;https://github.com/ECF/DubboProvider/&quot;&gt;Apache Dubbo-based Distribution Provider&lt;/a&gt;&lt;br /&gt;Enhanced:  &lt;a href=&quot;https://github.com/ECF/HazelcastProvider&quot;&gt;Hazelcast-based Distribution Provider&lt;/a&gt; and New: &lt;a href=&quot;https://github.com/ECF/HazelcastProvider&quot;&gt;Discovery Provider&lt;/a&gt;&lt;br /&gt;Enhanced:  System and Service-Properties docs for &lt;a href=&quot;https://wiki.eclipse.org/Distribution_Providers&quot;&gt;Distribution Providers&lt;/a&gt; and &lt;a href=&quot;https://wiki.eclipse.org/Discovery_Providers&quot;&gt;Discovery Providers&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Bndtools Development&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Enhanced:  &lt;a href=&quot;https://github.com/ECF/bndtools.workspace&quot;&gt;Bndtools Workspace, Project, and Bndrun templates for Remote Services Development&lt;/a&gt;&lt;br /&gt;New:  &lt;a href=&quot;https://github.com/ECF/bndtools.example.tasklist&quot;&gt;Bndtools Workspace with Jersey JaxRS Distribution Provider and Tasklist Example&lt;/a&gt;&lt;br /&gt;Enhanced:  &lt;a href=&quot;https://wiki.eclipse.org/Bndtools_Support_for_Remote_Services_Development&quot;&gt;Tutorial for using Bndtools for Remote Services Development&lt;/a&gt; &lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Sun, 03 Nov 2019 00:09:05 +0000</pubDate>
	<author>noreply@blogger.com (Scott Lewis)</author>
</item>
<item>
	<title>Jens von Pilgrim: Setup a Github Triggered Build Machine for an Eclipse Project</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-4884093826755448868.post-968132271991652819</guid>
	<link>https://jevopisdeveloperblog.blogspot.com/2019/10/setup-github-triggered-build-machine.html</link>
	<description>Disclaimer 1: This blog post literally is a &quot;web log&quot;, i.e., it is my log about setting up a Jenkins machine with a job that is triggered on a Github pull request. A lot of parts have been described elsewhere, and I link to the sources I used here. I also know that nowadays (e.g., new Eclipse build infrastructure) you usually do that via docker -- but then you need to configure docker, in which</description>
	<pubDate>Tue, 29 Oct 2019 12:55:56 +0000</pubDate>
	<author>noreply@blogger.com (Jens v.P.)</author>
</item>
<item>
	<title>Fabio Zadrozny: LiClipse 6.0.0 released</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-7855001383687474475.post-1728353912076381023</guid>
	<link>http://liclipse.blogspot.com/2019/10/liclipse-600-released.html</link>
	<description>LiClipse 6.0.0 is now out.&lt;br /&gt;&lt;br /&gt;The main changes is that many dependencies have been updated:&lt;br /&gt;&lt;br /&gt;- it's now based on Eclipse 4.13 (2019-09), which is a pretty nice upgrade (in my day-to-day use I find it appears smoother than previous versions, although I know this sounds pretty subjective).&lt;br /&gt;&lt;br /&gt;- PyDev was updated to 7.4.0, so, Python 3.8 (which was just released) is now already supported.&lt;br /&gt;&lt;br /&gt;Enjoy!</description>
	<pubDate>Fri, 25 Oct 2019 18:59:14 +0000</pubDate>
	<author>noreply@blogger.com (Fabio Zadrozny)</author>
</item>
<item>
	<title>Ekkehard Gentz: Qt World Summit 2019 Berlin – Secrets of Successful Mobile Business Apps</title>
	<guid isPermaLink="false">http://ekkescorner.wordpress.com/?p=4353</guid>
	<link>https://ekkescorner.wordpress.com/2019/10/22/qt-world-summit-2019-berlin-secrets-of-successful-mobile-business-apps/</link>
	<description>&lt;h1&gt;Qt World Summit 2019&lt;/h1&gt;
&lt;p&gt;Meet me at &lt;a href=&quot;https://www.qtworldsummit.com/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Qt World Summit 2019 in Berlin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.qt.io/qtws19/home&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;QtWS19_globe&quot; class=&quot;alignnone size-full wp-image-4347&quot; src=&quot;https://ekkescorner.files.wordpress.com/2019/10/qtws19_globe.png?w=550&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I’ll speak about development of mobile business apps with&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Qt 5.13.1+ (Qt Quick Controls 2)
&lt;ul&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;li&gt;iOS&lt;/li&gt;
&lt;li&gt;Windows 10&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.qtworldsummit.com/2019/sessions/mobile-business-apps-with-qt/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;ekkes_session_qtws19&quot; class=&quot;alignnone size-full wp-image-4356&quot; src=&quot;https://ekkescorner.files.wordpress.com/2019/10/ekkes_session_qtws19.png?w=550&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Qt World Summit 2019 Conference App&lt;/h1&gt;
&lt;p&gt;As a little appetizer I developed a conference app. HowTo download from Google Play Store or Apple and some more screenshots see &lt;a href=&quot;https://appbus.wordpress.com/2019/10/21/qt-world-summit-2019-conference-app/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://appbus.wordpress.com/2019/10/21/qt-world-summit-2019-conference-app/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;02_sessions_android&quot; class=&quot;alignnone size-full wp-image-4358&quot; src=&quot;https://ekkescorner.files.wordpress.com/2019/10/02_sessions_android.png?w=550&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sources at &lt;a href=&quot;https://github.com/ekke/c2gQtWS_x&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;cu in Berlin&lt;/p&gt;</description>
	<pubDate>Tue, 22 Oct 2019 12:39:24 +0000</pubDate>
</item>
<item>
	<title>Lars Vogel: A nicer icon for Quick Access / Find Actions</title>
	<guid isPermaLink="true">https://www.vogella.com/blog/posts/eclipse-ide-new-icon/</guid>
	<link>https://www.vogella.com/blog/posts/eclipse-ide-new-icon/</link>
	<description>Finally we use a decent icon for Quick Access / Find Actions. This is now a button in the toolbar which allows you to trigger arbitrary commands in the Eclipse IDE.</description>
	<pubDate>Sun, 20 Oct 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>BJ Hargrave: A Tool for Jakarta EE Package Renaming in Binaries</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-18834385.post-2773222166057858942</guid>
	<link>https://blog.hargrave.io/2019/10/a-tool-for-jakarta-ee-package-renaming.html</link>
	<description>In a &lt;a href=&quot;https://blog.hargrave.io/2019/05/jakarta-ee-and-package-renaming.html&quot;&gt;previous post&lt;/a&gt;, I laid out my thinking on how to approach the package renaming problem which the Jakarta EE community now faces. Regardless of whether the community chooses big bang or incremental, there are still existing artifacts in the world using the Java EE package names that the community will need to use together with the new Jakarta EE package names.&lt;br /&gt;&lt;br /&gt;Tools are always important to take the drudgery away from developers. So I have put together a &lt;a href=&quot;https://github.com/bjhargrave/transformer&quot;&gt;tool&lt;/a&gt; prototype which can be used to transform binaries such as individual class files and complete JARs and WARs to rename uses of the Java EE package names to their new Jakarta EE package names.&lt;br /&gt;&lt;br /&gt;The tools is rule driven which is nice since the Jakarta EE community still needs to define the actual package renames for Jakarta EE 9. The rules also allow the users to control which class files in a JAR/WAR are transformed. Different users may want different rules depending upon their specific needs. And the tool can be used for any package renaming challenge, not just the specific Jakarta EE package renames.&lt;br /&gt;&lt;br /&gt;The tools provides an API allowing it to be embedded in a runtime to dynamically &lt;a href=&quot;https://github.com/bjhargrave/transformer/blob/5b2ba77f4647cce275567219e4e97cd7b41ef0b1/src/main/java/dev/hargrave/transformer/Transformer.java#L231&quot;&gt;transform class files&lt;/a&gt; during the class loader definition process. The API also supports &lt;a href=&quot;https://github.com/bjhargrave/transformer/blob/5b2ba77f4647cce275567219e4e97cd7b41ef0b1/src/main/java/dev/hargrave/transformer/Transformer.java#L158&quot;&gt;transforming JAR files&lt;/a&gt;. A &lt;a href=&quot;https://github.com/bjhargrave/transformer#command-line&quot;&gt;CLI&lt;/a&gt; is also provided to allow use from the command line. Ultimately, the tool can be packaged as Gradle and Maven plugins to incorporate in a broader tool chain.&lt;br /&gt;&lt;br /&gt;Given that the tool is prototype, and there is much work to be done in the Jakarta EE community regarding the package renames, I have started a &lt;a href=&quot;https://github.com/bjhargrave/transformer/labels/enhancement&quot;&gt;list of TODOs&lt;/a&gt; in the project' issues for known work items.&lt;br /&gt;&lt;br /&gt;Please try out the tool and let me know what you think. I am hoping that tooling such as this will ease the community cost of dealing with the package renames in Jakarta EE.&lt;br /&gt;&lt;br /&gt;PS. Package renaming in source code is also something the community will need to deal with. But most IDEs are pretty good at this sort of thing, so I think there is probably sufficient tooling in existence for handling the package renames in source code.</description>
	<pubDate>Thu, 17 Oct 2019 21:26:16 +0000</pubDate>
	<author>noreply@blogger.com (BJ Hargrave)</author>
</item>
<item>
	<title>Doug Schaefer: I’ll never forget that first EclipseCon meeting with you guys and Disney characters all around and…</title>
	<guid isPermaLink="false">https://medium.com/p/a91be3d126b2</guid>
	<link>https://medium.com/@dougschaefer/ill-never-forget-that-first-eclipsecon-meeting-with-you-guys-and-disney-characters-all-around-and-a91be3d126b2?source=rss-8f7a70438965------2</link>
	<description>&lt;p&gt;I’ll never forget that first EclipseCon meeting with you guys and Disney characters all around and the music. And all the late nights in the Santa Clara bar and summits and meetings talking until no one else was left. Great times indeed. Until we meet again Michael!&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=a91be3d126b2&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 16 Oct 2019 01:18:06 +0000</pubDate>
</item>
<item>
	<title>EclipseCon Europe 2019: Missing ECE already? Bring back a little of it - take the survey!</title>
	<guid isPermaLink="false">2258 at https://www.eclipsecon.org</guid>
	<link>https://www.eclipsecon.org/europe2019/news/missing-ece-already-bring-back-little-it-take-survey</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;We hope you enjoyed the 2019 version of EclipseCon Europe and OSGi Community Event as much as we did.&lt;/p&gt;

&lt;p&gt;Please share your thoughts and feedback by completing the &lt;a href=&quot;https://www.surveymonkey.com/r/EclipseConEurope2019&quot; target=&quot;_blank&quot;&gt;short attendee survey&lt;/a&gt;. We read all responses, and we will use them to improve next year's event.&lt;/p&gt;

&lt;p&gt;Speakers, please upload your slides to your session page. Attendees really appreciate this!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019/news/missing-ece-already-bring-back-little-it-take-survey&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/jon-tyson-vD6UFu8QYUI-unsplash.jpg?itok=y0QRkbws&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 15 Oct 2019 21:22:00 +0000</pubDate>
</item>
<item>
	<title>Thabang Mashologu: A Committer’s View of Our New ECD Tools Working Group</title>
	<guid isPermaLink="false">6736 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/thabang-mashologu/committer%E2%80%99s-view-our-new-ecd-tools-working-group</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;When you look at the very impressive list of founding members for our new &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/eclipse_cloud_development_charter.php&quot;&gt;Eclipse Cloud Development (ECD) Tools Working Group&lt;/a&gt;, it’s clear that world-leading technology companies strongly believe that open source, cloud native development tools are needed. Our Eclipse Foundation developer community has also enthusiastically embraced the initiative.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;To get an insider’s view of why the ECD Tools Working Group initiative is so important, I recently talked to&lt;a href=&quot;https://projects.eclipse.org/user/12136&quot;&gt; Carlos Andres De La Rosa&lt;/a&gt;, an active Eclipse Foundation committer, about why he is getting involved in the Working Group. Here’s an edited version of our conversation.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Q. How did you first become involved in the open source communities at the Eclipse Foundation?&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; A. I was looking for something interesting from which I could learn something new related to cloud technologies. I found the Eclipse MicroProfile project about two years ago. That was a very interesting topic for me, especially the fault tolerance spec. I added my email address to the mailing list and started joining weekly calls. After a while, I started to contribute to the spec with different things, like improving the spec testing, adding and modifying documentation, and also debating about how to evolve the spec. I became a committer and an entire technological world opened up for me. Jakarta EE was another interesting project that got my attention, so then I became involved with the Jakarta EE community.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;I like the fact that Eclipse projects are from the people, for the people, so anyone can learn and contribute to solve problems that can help a lot of developers around the world. It’s shared knowledge and that’s the most important thing for me.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Q. Why did you expand your involvement to include the ECD Tools Working Group?&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; A. When you’re part of the community, you have access to beta versions of the specifications and projects. I was looking around and I learned about this new project for cloud development tools. I saw the &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/eclipse_cloud_development_charter.php&quot;&gt;charter&lt;/a&gt; and what people were trying to achieve and I knew I wanted to be part of it. It was that simple.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;I think cloud technologies will be the biggest and most important topic for the next 10 years. Everything is moving to the cloud, so every day we have more applications, from banking to AI medical analysis services. And, people have easy access to all this thanks to the cloud. I want to be there at the forefront and be working for the community when cloud really starts to grow.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Q. What benefits do you expect to gain from your participation in the ECD Tools Working Group?&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;A. It’s a huge opportunity to learn from the best engineers in the world because there are a lot of great professionals at the Eclipse Foundation and they have a lot of experience driving technology forward. If you’re new to this field and you’re trying to learn new things, this is a big chance to do it. Also, I’m currently working as a cloud consultant and this project is very related to my day-to-day job, so I can use what I learn in this project to improve my consultancy services.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Q. What impact do you think the ECD Tools Working Group will have on open source, cloud native development?&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;A. I think the impact will be huge because this group will deliver all of the tools that will be used every day in cloud development. From deploy, scale, debug, and manage, to Cloud Foundry applications, everything is integrated with the Eclipse IDE making the job of developers more productive.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Q. How does your participation in the ECD Tools Working Group fit with the other cloud-related projects you’re involved with at the Eclipse Foundation?&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;A. Everything is related. MicroProfile provides implementations and specs for capabilities such as fault tolerance that are needed in a microservices architecture to make it easier for developers to create microservices. And the Jakarta EE specs are basically the foundation for the MicroProfile framework because MicroProfile depends on the Java enterprise specs. The Eclipse Cloud Development Tools is a complementary project that helps to complete the framework for cloud native applications. So, they are all part of the cloud ecosystem. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;I really think that MicroProfile, Jakarta EE, and now the Eclipse Cloud Development Tools Working Group are the three most important projects at the Eclipse Foundation right now. They will drive the future of cloud technologies and everything that is handled and developed by the community.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Q. What would you say to people who are considering joining the ECD Tools Working Group?&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;A. I would say “join now!” The most important thing I can tell people is get involved if you want to learn about a cutting-edge technology that will be driving peoples’ lives for a long time. And contribute to help create something meaningful. It’s a community, so it’s for everyone.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 10 Oct 2019 13:48:21 +0000</pubDate>
</item>
<item>
	<title>Chris Aniszczyk: Open Source Gerrymandering</title>
	<guid isPermaLink="false">https://www.aniszczyk.org/?p=4203</guid>
	<link>https://www.aniszczyk.org/2019/10/08/open-source-gerrymandering/</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Over the years, I have spent a lot of time thinking about and working on open source communities… from bootstrapping projects out of corporations (or broken communities), to starting brand new open source foundations.&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;&quot;Good governance never depends upon laws, but upon the personal qualities of those who govern… The most important element of government, therefore, is the method of choosing leaders&quot;&lt;/p&gt;
&lt;p&gt;— Chris Aniszczyk (@cra) &lt;a href=&quot;https://twitter.com/cra/status/1166767809185165312?ref_src=twsrc%5Etfw&quot;&gt;August 28, 2019&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;I was recently having a conversation with an old colleague about bringing an open source project out of a company into the wild and how to setup the project for success. A key part of that discussion involved setting up the governance for the project and what that means. There was also discussion how neutral and open governance under a nonprofit foundation can be good for certain projects as &lt;/span&gt;&lt;a href=&quot;http://openlife.cc/blogs/2010/november/how-grow-your-open-source-project-10x-and-revenues-5x&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;research&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; has shown that neutral foundations can promote growth and community better than other approaches. Also the conversation led to a funny side discussion on the concept of &lt;/span&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Gerrymandering&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;gerrymandering&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; and open source.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter size-full wp-image-4315&quot; height=&quot;722&quot; src=&quot;https://www.aniszczyk.org/wp-content/uploads/2018/02/gerrymandering.png&quot; width=&quot;994&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;For those who arenâ€™t familiar with the term, itâ€™s become popular in the US political lexicon as a â€œpractice intended to establish a political advantage for a particular party or group by manipulating district boundaries.â€� A practical example of this is from my town of Austin TX which is in district 35 which snakes all the way from Austin to San Antonio for &lt;/span&gt;&lt;a href=&quot;https://www.politifact.com/texas/statements/2018/aug/16/beto-orourke/texas-one-nations-most-gerrymandered-states/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;some reason&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The same concept of gerrymandering can apply to open source communities as open source projects can act like mini political institutions (or bigger ones in the case of Kubernetes). I shared some of my favorite examples with my friend so I figured Iâ€™d write this down for future reference and share it with folks as you really need to read the â€œfine printâ€� to find these at times.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Apache Cassandra&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The Apache Software Foundation (ASF) is a fantastic open source organization that has been around for a long time (they celebrated their 20th anniversary) and has had a lot of impact across the world. The way projects are governed in the ASF are through the &lt;/span&gt;&lt;a href=&quot;https://www.apache.org/theapacheway/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Apache Way&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, which places a lot of emphasis on â€œcommunity over codeâ€� amongst some other principles which are great practices for open source projects to follow.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;There have been some interesting governance issues and lessons learned over the years in the ASF, in particular it can be challenging when you have a strong single vendor associated with a project as was with the case with Cassandra awhile ago:&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;The Apache Software Foundation is really out of line in their actions with Cassandra IMO. Meeting notes: &lt;a href=&quot;https://t.co/TQXvF0pfex&quot;&gt;https://t.co/TQXvF0pfex&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Kelly Sommers (@kellabyte) &lt;a href=&quot;https://twitter.com/kellabyte/status/794377137092497408?ref_src=twsrc%5Etfw&quot;&gt;November 4, 2016&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;As the ASF board noted in &lt;/span&gt;&lt;a href=&quot;https://www.apache.org/foundation/records/minutes/2016/board_minutes_2016_08_17.txt&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;the minutes&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; from its meeting with DataStax representatives, “The Board expressed continuing concern that the PMC was not acting independently and that one company had undue influence over the project.” There was some interesting &lt;/span&gt;&lt;a href=&quot;https://www.theregister.co.uk/2016/11/14/datastax_versus_asf_staxeit/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;press&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; around the time this happened:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;â€œJagielski told me in an interview, echoing what &lt;/span&gt;&lt;/i&gt;&lt;a href=&quot;http://www.mail-archive.com/dev@cassandra.apache.org/msg10122.html&quot;&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;he’d said&lt;/span&gt;&lt;/i&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; on the Cassandra mailing list, that undue influence conflicts with project leadership obligations established by the ASF. As he suggested, the ASF tried many times to get a DataStax-heavy Project Management Committee (PMC) to pay attention to alleged trademark and other &lt;/span&gt;&lt;/i&gt;&lt;a href=&quot;http://apache.org/foundation/press/Project-PR-BrandGuidelines.pdf&quot;&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;violations&lt;/span&gt;&lt;/i&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, to no avail. Whatever DataStax’s positive influence on the development of the projectâ€”in other wordsâ€”it failed to exercise equivalent influence on governing the project in ASF fashion.â€�&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The ASF basically forced a reorganization of the Cassandra PMC to be in more in lines with its values and then caused the primary vendor behind the project to pull engineers off the open source project.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Containerd&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The &lt;/span&gt;&lt;a href=&quot;https://containerd.io/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;containerd&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; project is an industry-standard container runtime with an emphasis on simplicity, robustness and portability. The history of the project comes from being born at Docker where their open source projects had a governance policy essentially aligned with the BDFL philosophy with one of their project founders.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In &lt;a href=&quot;https://cncf.io&quot;&gt;CNCF&lt;/a&gt;, (which containered is a project of), project governance documents arenâ€™t considered static and evolve over time to meet the needs of their community. For example, when containerd &lt;/span&gt;&lt;a href=&quot;https://www.cncf.io/announcement/2017/03/29/containerd-joins-cloud-native-computing-foundation/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;joined&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; the CNCF their governance was geared towards a BDFL approach but over time evolved to a more &lt;/span&gt;&lt;a href=&quot;https://github.com/containerd/project/pull/16&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;neutral&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; approach that spread authority across maintainers.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Cloud Foundry&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Cloud Foundry is an open source community that has a large and mature ecosystem of PaaS focused projects. In the Cloud Foundry Foundation (CFF), they have a&lt;/span&gt;&lt;a href=&quot;https://www.cloudfoundry.org/wp-content/uploads/2017/01/CFF_Bylaws.pdf&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;unique governance clauses&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; in regards to how affiliates are treated and voting.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Pivotal Platinum Director Voting Power. The Platinum Director appointed by Pivotal (â€œPivotal Directorâ€�) shall have five (5) votes on any matter submitted to a vote of the Board. (i) On a date one (1) year after the incorporation date set forth in the Certificate, the number of Pivotal Directorâ€™s votes will be reduced to three (3). (ii) On a date two (2) years after the incorporation date set forth in the Certificate, the number of Pivotal Directorâ€™s votes will be reduced to one (1)&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;To bootstrap the foundation, the originating company wanted a &lt;/span&gt;&lt;b&gt;little bit of control&lt;/b&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; for a couple of years, which can make sense in some situations as the beginning of a foundation can be a tumultuous time. In my opinion, itâ€™s great to see the extra vote clause expire after 2 years, however, itâ€™s still very unfair to the early potential members of the organization.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Another example of open source gerrymandering can be how votes are represented by member companies that are owned by a single entity:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;At no time may a Member and its Affiliates have more than one Director who is an employee, officer, director, or consultant of that Member, except that Pivotal, EMC, and VMware, though Affiliates, shall each have one (1) Director on the Board).&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;This is an interesting tidbit given that Dell owns Pivotal, EMC and VMWare. In some organizations, usually there is &lt;/span&gt;&lt;a href=&quot;https://github.com/cdfoundation/charter/blob/master/CHARTER.md#9-subsidiaries-and-related-companies&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;legal language&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; that collapses owned entities into one vote.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;I personally Iâ€™m not the biggest fan of this approach as it makes things unfair from the beginning and can be an impediment to wide adoption across the industry. There can definitely be reasons of why you need to do this in the formation phase but it should be done with caution. If you saw the recent news that Pivotal was being spun back into VMWare and their &lt;/span&gt;&lt;a href=&quot;https://www.theregister.co.uk/2019/07/25/pivotal_ford_write_down/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;woes with adoption&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, it shouldnâ€™t come as a surprise in my opinion as one company was bearing too much of the burden in my opinion and not building a diverse community of contributors.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Cloud Native Computing Foundation (CNCF)&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;If you remember the early days of the container and orchestration wars, there was a lot different technologies, approaches and corporate politics. When CNCF was founded, the &lt;/span&gt;&lt;a href=&quot;https://github.com/cncf/foundation/commit/0659ab992e0e3e04324beff1214f17cb8896cd4c#diff-778830d439b70bb644e57dac072da3e6&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;original charter&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; included a clause that upgraded certain startup members from Silver to Platinum that were important in the ever evolving cloud native ecosystem.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;â€œThe Governing Board may extend a Platinum membership at the Silver Membership Scale rates on a year-by-year basis for up to 5 years to startup companies with revenues less than $50 million that are deemed strategic technology contributors by the Governing Board.â€�&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In my opinion, that particular piece in the charter was important in bringing together all the relevant startups to the table along with the big established companies at the time.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In terms of projects, the CNCF Technical Oversight Committee (TOC) defines a set of &lt;/span&gt;&lt;a href=&quot;https://github.com/cncf/toc/blob/master/PRINCIPLES.md&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;principles&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; to steward the technical community. The most important principle is around a minimum viable governance that enables projects to be self-governing. TOC members are available to provide guidance to the projects but do not control them.Â &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;https://twitter.com/CloudNativeFdn/status/1167455648768045056&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Unlike Apache and the &lt;/span&gt;&lt;a href=&quot;https://www.apache.org/theapacheway/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Apache Way&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, CNCF does not require its hosted projects to follow any specific governance model. Instead, CNCF &lt;/span&gt;&lt;a href=&quot;https://github.com/cncf/toc/blob/master/process/graduation_criteria.adoc&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;specifies&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; that graduated projects need to â€œexplicitly define a project governance and committer process.â€� So in reality, CNCF operates under the principle of subsidiarity, encouraging decisions to be made at the lowest project level consistent with their resolution.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;GitLab&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;GitLab is a fantastic open source project AND company that I admire deeply for their &lt;/span&gt;&lt;a href=&quot;https://about.gitlab.com/handbook/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;transparency&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;. The way the GitLab &lt;/span&gt;&lt;b&gt;project&lt;/b&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; is structured is that itâ€™s wholly owned by the GitLab company (they also own the trademark). To the credit of GitLab, they make this clear via their &lt;/span&gt;&lt;a href=&quot;https://about.gitlab.com/company/stewardship/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;stewardship principles&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; online and discuss what they consider enterprise product work versus project work.&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;nice &quot;stewardship promises&quot; from &lt;a href=&quot;https://twitter.com/gitlab?ref_src=twsrc%5Etfw&quot;&gt;@gitlab&lt;/a&gt; based on their opencore business model, all opencore biz should do this &lt;a href=&quot;https://t.co/mqGkOeejp3&quot;&gt;https://t.co/mqGkOeejp3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Chris Aniszczyk (@cra) &lt;a href=&quot;https://twitter.com/cra/status/819988877335207938?ref_src=twsrc%5Etfw&quot;&gt;January 13, 2017&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Iâ€™d love for them in the future to separate the branding from the company, project and the product as I believe itâ€™s confusing and dilutes the messaging, but that’s just my opinion &lt;img alt=&quot;ğŸ™‚&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Istio&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Istio is a popular service mesh project originated at Google. It has documented its governance model publicly: &lt;/span&gt;&lt;a href=&quot;https://github.com/istio/community/blob/master/STEERING-COMMITTEE.md&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;https://github.com/istio/community/blob/master/STEERING-COMMITTEE.md&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;However, as you can see, itâ€™s heavily tilted towards Google and there seems to be no limits on the number of spots on the steering committee from one company which is a common tactic in open governance approaches to keep things fair. On top of that, Google owns the trademark, domains and other project assets so Iâ€™d consider Istio to be heavily gerrymandered in Googleâ€™s versus the communityâ€™s interest.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;JCP&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;I had the pleasure of serving on the Java Community Process (JCP) Executive Committee for a few years while I was at Twitter. Itâ€™s a great organization that drives standardization across the Java ecosystem, some of the &lt;/span&gt;&lt;a href=&quot;https://jcp.org/en/procedures/jcp2#3.7&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;fine print is interesting though&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;â€œThe EC is composed of 25 Java Community Process Members whose seats are allocated as follows: 16 Ratified Seats, 6 Elected Seats, and 2 Associate Seats, plus one permanent seat held by Oracle. (Oracle’s representative must not be a member of the PMO.) The EC is led by a non-voting Chair from the PMO.â€�&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;This essentially gives Oracle a permanent seat on the Executive Committee.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Hereâ€™s another fun clause:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Ballots to approve Umbrella JSRs that define the initial version of a new Platform Edition Specification or JSRs that propose changes to the Java language are approved if (a) at least a two-thirds majority of the votes cast are “yes” votes, (b) a minimum of 5 “yes” votes are cast, and (c) Oracle casts one of the “yes” votes. Ballots are otherwise rejected.&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;This essentially gives Oracle a veto vote on any JSR.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Note: The coolest thing the JCP has done is contribute the EE specification work to the Eclipse Foundation and form the Jakarta project over there to &lt;/span&gt;&lt;a href=&quot;https://blogs.eclipse.org/post/tanja-obradovic/how-participate-advancing-jakarta-ee-specification&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;steward things in an open way&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Knative&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Knative, like Istio mentioned above, is an open source project that was born at Google and controlled by Google. There have been a lot of discussion lately about this as Google recently decided to not openly govern the project and move it to a neutral foundation:&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;I'm pretty disappointed to see Knative forgo open governance.&lt;a href=&quot;https://t.co/fVhbP687rs&quot;&gt;https://t.co/fVhbP687rs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The growth and user focus of Kubernetes, Helm and many others show that CNCF is a great home for open communities.&lt;/p&gt;
&lt;p&gt;OSS is better if we work together in neutral spaces&lt;/p&gt;
&lt;p&gt;— brendandburns (@brendandburns) &lt;a href=&quot;https://twitter.com/brendandburns/status/1179176440647913472?ref_src=twsrc%5Etfw&quot;&gt;October 1, 2019&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Kubernetes&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Kubernetes operates under the auspices of the CNCF and openly governed by the &lt;/span&gt;&lt;a href=&quot;https://kubernetes.io/blog/2019/10/03/2019-steering-committee-election-results/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Kubernetes Steering Committee&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (KSC). The Kubernetes project has &lt;/span&gt;&lt;a href=&quot;https://www.cncf.io/cncf-kubernetes-project-journey/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;grown significantly over time&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, but has done a great job of keeping things openly governed and inclusive in my opinion, especially compared to its project size these days. The KSC &lt;/span&gt;&lt;a href=&quot;https://github.com/kubernetes/community/blob/master/governance.md&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;governs the project&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; along with a variety of sub working groups. Also, the Kubernetes trademark is neutrally owned by the CNCF and openly governed via the &lt;/span&gt;&lt;a href=&quot;https://github.com/kubernetes/community/blob/master/governance.md&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Conformance Working Group&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; which decides how certification works for the community, which there are nearly &lt;/span&gt;&lt;a href=&quot;https://www.cncf.io/certification/software-conformance/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;100 certified solutions&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; out there!&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Spinnaker&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The Spinnaker project was originally born at Netflix and recently spun out into the &lt;/span&gt;&lt;a href=&quot;https://cd.foundation&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Continuous Delivery Foundation&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (CDF) as an openly &lt;/span&gt;&lt;a href=&quot;https://www.spinnaker.io/community/governance/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;governed&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; project. The project assets, from domains to github to trademarks are all neutrally owned by the community through the CDF.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Vault&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;a href=&quot;https://github.com/hashicorp/vault&quot;&gt;Vault&lt;/a&gt; is a fantastic and widely used secrets management tool from Hashicorp. Itâ€™s a single vendor controlled open source project that has an open core model with an open source and enterprise versions (see &lt;/span&gt;&lt;a href=&quot;https://www.hashicorp.com/products/vault/enterprise&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;). What this essentially means is that the buck stops at the single vendor on what features/fixes end up in the open source version, most likely that wonâ€™t include things that they sell in their enterprise offering.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Conclusion&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;I hope you learned something new about open source projects, foundations and communities as these things can be a little bit more complicated as you dig into the details. Itâ€™s really important to note that there is a difference between open source and &lt;/span&gt;&lt;a href=&quot;https://github.com/opengovernance/opengovernance.dev&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;open governance&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; and you should always be skeptical of a project that claims itâ€™s truly open if only one for profit company owns all the assets and control. While thereâ€™s nothing wrong with this approach at all, most organizations donâ€™t set expectations up front which can lead to frustrations down the road. Note, thereâ€™s nothing wrong with single vendor controlled open source projects, I think they are great but I think they need to be upfront, similar to what GitLab stewardship principles on what they will put in open source versus their enterprise version.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In conclusion, as with anything in life, you should always read the fine print of an open source communities charter or legal paperwork to understand how it works. The lesson here is that every organization or project has its own rules and governance and itâ€™s important that you understand how decisions are made and who has ownership of project assets like trademarks.&lt;/span&gt;&lt;/p&gt;</description>
	<pubDate>Tue, 08 Oct 2019 18:20:53 +0000</pubDate>
</item>
<item>
	<title>Jens von Pilgrim: JShell in Eclipse</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-4884093826755448868.post-5953202569285019139</guid>
	<link>https://jevopisdeveloperblog.blogspot.com/2019/10/jshell-in-eclipse.html</link>
	<description>Java 9 introduced a new command line tool: JShell. This is a read–eval–print loop (REPL) for Java with some really nice features. For programmers I would assume writing a test is the preferred choice, but for demonstrating something (in a class room for example) this is a perfect tool if you are not using a special IDE such as BlueJ (which comes with its own REPL).

The interesting thing about</description>
	<pubDate>Tue, 08 Oct 2019 12:16:32 +0000</pubDate>
	<author>noreply@blogger.com (Jens v.P.)</author>
</item>
<item>
	<title>PapyrusUML: Removing “Contact Us</title>
	<guid isPermaLink="false">http://papyrusuml.wordpress.com/?p=2371</guid>
	<link>https://papyrusuml.wordpress.com/2019/10/07/removing-contact-us/</link>
	<description>&lt;p&gt;Unfortunately, because of the larger amount of spam, I now have to remove off the “&lt;a href=&quot;https://papyrusuml.wordpress.com/wp-admin/post.php?post=678&amp;amp;action=edit&quot;&gt;Contact Us&lt;/a&gt;” page.&lt;/p&gt;



&lt;p&gt;If you want to contact us, I would recommend you go through our twitter account.&lt;/p&gt;</description>
	<pubDate>Mon, 07 Oct 2019 14:17:36 +0000</pubDate>
</item>
<item>
	<title>N4JS: Instanceof Type Guards in N4JS</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-7569987920628430132.post-5441381820374499063</guid>
	<link>https://n4js.blogspot.com/2019/09/instanceof-type-guards-in-n4js.html</link>
	<description>&lt;h4&gt;Statically typed languages like Java use &lt;span&gt;instanceof&lt;/span&gt; checks to determine the type of an object at runtime. After a successful check, a type cast needs to be done explicitly in most of those languages. In this post we present how N4JS introduced type guards to perform these type casts implicitly. &lt;/h4&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-k8VG4ZChX4E/XR4Y74o1khI/AAAAAAAAAKs/rNn1qAac2Twtr3rlVi__edXAvjECND7GwCLcBGAs/s1600/tg_f1.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;300&quot; src=&quot;https://1.bp.blogspot.com/-k8VG4ZChX4E/XR4Y74o1khI/AAAAAAAAAKs/rNn1qAac2Twtr3rlVi__edXAvjECND7GwCLcBGAs/s1600/tg_f1.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 12.8px;&quot;&gt;No error due to implicit cast in successful &lt;/span&gt;&lt;span&gt;instanceof&lt;/span&gt;&lt;span style=&quot;font-size: 12.8px;&quot;&gt; type guard&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;h4&gt;The example above&lt;span style=&quot;font-weight: normal;&quot;&gt; shows that strict type rules on the &lt;span&gt;any&lt;/span&gt; instance &lt;span&gt;a&lt;/span&gt; causes errors to show up when accessing the unknown property &lt;span&gt;pX&lt;/span&gt;. However, after asserting that &lt;span&gt;a&lt;/span&gt; is an instance of &lt;span&gt;X&lt;/span&gt;, the property &lt;span&gt;pX&lt;/span&gt; can be accessed without errors. A separate type cast is unnecessary, since type inference now also considers &lt;span&gt;instanceof&lt;/span&gt; type guard information.&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-LDRo370o02M/XR8SffBT-WI/AAAAAAAAALE/L0z7eK0-rpw45HfFvckQkxvoULiVrG3XwCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B11.00.31.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;130&quot; src=&quot;https://1.bp.blogspot.com/-LDRo370o02M/XR8SffBT-WI/AAAAAAAAALE/L0z7eK0-rpw45HfFvckQkxvoULiVrG3XwCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B11.00.31.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Hover information on variable access of &lt;span&gt;a&lt;/span&gt; shows the inferred type&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;The resulting type&lt;span style=&quot;font-weight: normal;&quot;&gt; is the intersection type of the original type (which is here &lt;span&gt;any&lt;/span&gt;) and of all type guards that must hold on a specific variable access (which is here only type &lt;span&gt;X&lt;/span&gt;). Keeping the original types &lt;span&gt;any&lt;/span&gt; or &lt;span&gt;Object&lt;/span&gt; is not necessary and could be optimised later. In case the original type is different, it is necessary to include it in the resulting intersection type. The reason is that the type guard could check for an interface only. If so, property accesses to properties of the original types would cause errors.&lt;/span&gt;&lt;/h4&gt;&lt;div&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-uMfGgEJdmJA/XR8g15OqgOI/AAAAAAAAALQ/TJvo54WPnd84n2N4rDYv-2xrLWlPZgX2QCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B12.04.37.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;300&quot; src=&quot;https://1.bp.blogspot.com/-uMfGgEJdmJA/XR8g15OqgOI/AAAAAAAAALQ/TJvo54WPnd84n2N4rDYv-2xrLWlPZgX2QCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B12.04.37.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Re-definition of a type guarded variable&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;b&gt;Two distinct differences&lt;/b&gt; between type guards and type declarations are (1) their data flow nature and (2) their read-only effects. Firstly, when redefining (in the sense of the data flow) a variable, the type guard information gets lost. Consequently, subsequent accesses to the variable will no longer benefit from the type guard, since the type guard was invalidated by the re-definition. Secondly, only the original type information is considered for a redefinition. That means that the type guard does not change the expected type and, hence, does not limit the set of types that can be assigned to a type guarded variable.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-Tgjm3RwmYco/XR8sIy_XQWI/AAAAAAAAALc/smgNTaOcr_wbJC1mCDNN5QrNXXclTtzngCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B12.52.50.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;475&quot; src=&quot;https://1.bp.blogspot.com/-Tgjm3RwmYco/XR8sIy_XQWI/AAAAAAAAALc/smgNTaOcr_wbJC1mCDNN5QrNXXclTtzngCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B12.52.50.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Further examples for &lt;span&gt;instanceof&lt;/span&gt; type guards in N4JS&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;b&gt;Data flow analysis&lt;/b&gt; is essential for type guards and has been presented in a &lt;a href=&quot;https://n4js.blogspot.com/2018/08/control-flow-graphs-in-n4js_29.html&quot;&gt;previous post&lt;/a&gt;. Based upon this information, type information for each variable access is computed. Since also complicated data flows are handled correctly, such as in &lt;span&gt;for&lt;/span&gt; loops or &lt;a href=&quot;https://n4js.blogspot.com/2018/10/short-circuit-evaluation-in-n4js_17.html&quot;&gt;short circuit evaluation&lt;/a&gt;, type guard information is already available in composed condition expressions (see function &lt;span&gt;f3&lt;/span&gt; and &lt;span&gt;f5&lt;/span&gt; above). Aside from being able to nest &lt;span&gt;instanceof&lt;/span&gt; type guards (see function &lt;span&gt;f4&lt;/span&gt; above), they also can be used as a filter at the beginning of a function (see function &lt;span&gt;f6&lt;/span&gt; above) or inside a loop: Negating a type guard and then exiting the function or block leaves helpful valid type guard information on all the remaining control flow paths.&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: x-small;&quot;&gt;by Marcus Mews&lt;/span&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 30 Sep 2019 08:06:18 +0000</pubDate>
	<author>noreply@blogger.com (n4js dev)</author>
</item>
<item>
	<title>EclipseCon Europe 2019: Team Sports for Developers! Edge Computing Mini-Hackathon</title>
	<guid isPermaLink="false">2246 at https://www.eclipsecon.org</guid>
	<link>https://www.eclipsecon.org/europe2019/news/team-sports-developers-edge-computing-mini-hackathon</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Do you like to build gadgets and/or hack? Then get a team together for the &lt;a href=&quot;https://www.eclipsecon.org/europe2019/hackathon&quot; target=&quot;_blank&quot;&gt;Edge Computing Mini-Hackathon&lt;/a&gt;, organized by Edgeworx.&lt;/p&gt;

&lt;p&gt;Teams will be challenged to integrate at least one other Eclipse IoT project with Eclipse ioFog and showcase what they were able to accomplish. Representatives from all Eclipse projects are welcome to come help guide, coach, and influence participants to make use of their projects. There will be prizes for the standouts, plus giveaways (and fun) for all!&lt;/p&gt;

&lt;p&gt;The event is part of Community Night on Tuesday, October 22, from 19:30 - 22:00 in the Theater Stage room at the Forum.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019/news/team-sports-developers-edge-computing-mini-hackathon&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/raspberry_pi.jpg?itok=Kv6nTVKk&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 26 Sep 2019 21:21:28 +0000</pubDate>
</item>
<item>
	<title>Wim Jongman: Blocked by an Eclipse Wizard?</title>
	<guid isPermaLink="false">623 at https://remainsoftware.com</guid>
	<link>https://remainsoftware.com/blog/blocked-eclipse-wizard</link>
	<description>&lt;span class=&quot;datestamp&quot;&gt;
      &lt;span class=&quot;date-display-single&quot;&gt;Tuesday, September 24, 2019&lt;/span&gt;  &lt;/span&gt;
        &lt;div class=&quot;field-item even&quot;&gt;
      There is a small but very useful patch in Eclipse 4.12 for people that do not want the UI to be blocked by wizards. There are many cases where it is desired that the underlying window can be reached WHILE the user is finishing the wizard.  That's why it's strange that the Eclipse Wizard demands from us to always have full and utter attention.      &lt;p class=&quot;clearfix&quot;&gt;&lt;a href=&quot;https://remainsoftware.com/node/623&quot;&gt;Read more&lt;/a&gt;&lt;/p&gt;
    &lt;/div&gt;</description>
	<pubDate>Tue, 24 Sep 2019 08:53:59 +0000</pubDate>
</item>
<item>
	<title>Niko Stotz: How to Render a (Hierarchical) Tree in Asciidoctor</title>
	<guid isPermaLink="false">https://www.nikostotz.de/blog/?p=443</guid>
	<link>https://www.nikostotz.de/blog/how-to-render-a-hierarchical-tree-in-asciidoctor/</link>
	<description>&lt;p&gt;Showing a hierarchical tree, like a file system directory tree, in Asciidoctor is surprisingly hard. We use PlantUML to render the tree on all common platforms.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img alt=&quot;Example of rendered hierarchical tree&quot; class=&quot;wp-image-444&quot; src=&quot;https://www.nikostotz.de/blog/wp-content/uploads/2019/09/tree-in-asciidoctor.png&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;This tree is rendered from the following code:&lt;/p&gt;




&lt;div class=&quot;codecolorer-container text default&quot; style=&quot;overflow: auto; white-space: nowrap; width: 435px;&quot;&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;div&gt;1&lt;br /&gt;2&lt;br /&gt;3&lt;br /&gt;4&lt;br /&gt;5&lt;br /&gt;6&lt;br /&gt;7&lt;br /&gt;8&lt;br /&gt;9&lt;br /&gt;10&lt;br /&gt;11&lt;br /&gt;12&lt;br /&gt;13&lt;br /&gt;14&lt;br /&gt;15&lt;br /&gt;16&lt;br /&gt;17&lt;br /&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&quot;text codecolorer&quot;&gt;[plantuml, format=svg, opts=&quot;inline&quot;]&lt;br /&gt;
----&lt;br /&gt;
skinparam Legend {&lt;br /&gt;
    BackgroundColor transparent&lt;br /&gt;
    BorderColor transparent&lt;br /&gt;
    FontName &quot;Noto Serif&quot;, &quot;DejaVu Serif&quot;, serif&lt;br /&gt;
    FontSize 17&lt;br /&gt;
}&lt;br /&gt;
legend&lt;br /&gt;
Root&lt;br /&gt;
|_ Element 1&lt;br /&gt;
  |_ Element 1.1&lt;br /&gt;
  |_ Element 1.2&lt;br /&gt;
|_ Element 2&lt;br /&gt;
  |_ Element 2.1&lt;br /&gt;
end legend&lt;br /&gt;
----&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;It works on all Asciidoctor implementations that support &lt;tt&gt;asciidoctor-diagram&lt;/tt&gt; and renders well in both HTML and PDF. Readers can select the text (i.e. it’s not an image), and we don’t need to ship additional files.&lt;/p&gt;



&lt;p&gt;We might want to externalize the boilerplate:&lt;/p&gt;




&lt;div class=&quot;codecolorer-container text default&quot; style=&quot;overflow: auto; white-space: nowrap; width: 435px;&quot;&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;div&gt;1&lt;br /&gt;2&lt;br /&gt;3&lt;br /&gt;4&lt;br /&gt;5&lt;br /&gt;6&lt;br /&gt;7&lt;br /&gt;8&lt;br /&gt;9&lt;br /&gt;10&lt;br /&gt;11&lt;br /&gt;12&lt;br /&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&quot;text codecolorer&quot;&gt;[plantuml, format=svg, opts=&quot;inline&quot;]&lt;br /&gt;
----&lt;br /&gt;
!include asciidoctor-style.iuml&lt;br /&gt;
legend&lt;br /&gt;
Root&lt;br /&gt;
|_ Element 1&lt;br /&gt;
  |_ Element 1.1&lt;br /&gt;
  |_ Element 1.2&lt;br /&gt;
|_ Element 2&lt;br /&gt;
  |_ Element 2.1&lt;br /&gt;
end legend&lt;br /&gt;
----&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;




&lt;i&gt;asciidoctor-style.iuml&lt;/i&gt;

&lt;div class=&quot;codecolorer-container text default&quot; style=&quot;overflow: auto; white-space: nowrap; width: 435px;&quot;&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;div&gt;1&lt;br /&gt;2&lt;br /&gt;3&lt;br /&gt;4&lt;br /&gt;5&lt;br /&gt;6&lt;br /&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&quot;text codecolorer&quot;&gt;skinparam Legend {&lt;br /&gt;
    BackgroundColor transparent&lt;br /&gt;
    BorderColor transparent&lt;br /&gt;
    FontName &quot;Noto Serif&quot;, &quot;DejaVu Serif&quot;, serif&lt;br /&gt;
    FontSize 17&lt;br /&gt;
}&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;Thanks to &lt;a href=&quot;https://forum.plantuml.net/10200/dont-require-dot-for-shapeless-diagrams-and-svg-output&quot;&gt;PlantUML’s impressive reaction time&lt;/a&gt;, we soon won’t even need Graphviz installed.&lt;/p&gt;



&lt;p&gt;Please find all details in the &lt;a href=&quot;https://github.com/enikao/asciidoctor-tree&quot;&gt;example repository&lt;/a&gt; and &lt;a href=&quot;https://nikostotz.de/blog/tree-in-asciidoctor.html&quot;&gt;example HTML&lt;/a&gt; / &lt;a href=&quot;https://nikostotz.de/blog/tree-in-asciidoctor.pdf&quot;&gt;example PDF&lt;/a&gt; rendering.&lt;/p&gt;</description>
	<pubDate>Sat, 21 Sep 2019 15:16:27 +0000</pubDate>
        <enclosure url="https://www.nikostotz.de/blog/wp-content/uploads/2019/09/tree-in-asciidoctor.png" length="2854" type="image/png"/>
</item>
<item>
	<title>Cedric Brun: Let's Do It! Obeo loves The SeaCleaners</title>
	<guid isPermaLink="false">https://cedric.brun.io/eclipse/obeo-environment-theseacleaners</guid>
	<link>https://cedric.brun.io/eclipse/obeo-environment-theseacleaners/</link>
	<description>&lt;p&gt;I am deeply convinced a company is not only an economical actor. It has a much wider responsibility as any decision also has &lt;strong&gt;social&lt;/strong&gt;, &lt;strong&gt;environmental&lt;/strong&gt; or even &lt;strong&gt;political&lt;/strong&gt; implications.&lt;/p&gt;

&lt;p&gt;Looking at our environment state, its recent evolution and how it is forecasted to evolve indeed the task in front of us is huge. It would be easy to dismiss this as a problem our governments and big organizations should step up to, and indeed those in power have the responsibility, the ability and leverage to act and maybe bend those charts.&lt;/p&gt;

&lt;p&gt;But I have a motto to &lt;em&gt;“Focus on what you can control, then you can act”&lt;/em&gt; and so do I.&lt;/p&gt;

&lt;p&gt;Obeo participates and hosts quite a few events each year and we are often struck by the nonsensical nature of the “goodies” industry and what global model they promote: built at the cheapest price, moved across the globe, distributed at the event and then pretty quickly to the bin.&lt;/p&gt;

&lt;p&gt;Starting now, &lt;strong&gt;you won’t get any more goodies from us at conferences or events&lt;/strong&gt;, but instead we will gladly discuss how we try to do our part, as a company, in this global challenge.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://www.theseacleaners.org/en/&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/seacleaners/seacleaners.png&quot; style=&quot;float: right;&quot; /&gt;&lt;/a&gt;      
&lt;/figure&gt;

&lt;p&gt;In relation to this initiative to stop producing waste we do not deem necessary: &lt;strong&gt;Obeo is partnering with The SeaCleaners organization to reduce plastic waste&lt;/strong&gt;. &lt;a href=&quot;https://www.theseacleaners.org/en&quot; target=&quot;_blank&quot;&gt;The SeaCleaners&lt;/a&gt; is building a giant multihull boat designed to retrieve the plastic waste in the Ocean: The &lt;strong&gt;MANTA&lt;/strong&gt;. The organization vision is that the preservation of the oceans is a global, long-term and worldwide matter that integrates economic, social, human, educational and scientific perspectives. They do that in a dynamic and solidarity-based project.
You can &lt;a href=&quot;https://news.obeo.fr/en/post/world-cleanup-day-obeo-supports-the-seacleaners-to-reduce-plastic-waste&quot; target=&quot;_blank&quot;&gt;learn more about this initiative on Obeo’s website&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://www.theseacleaners.org/en/technical-data/&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/seacleaners/manta.png&quot; /&gt;&lt;/a&gt;  
    &lt;figcaption&gt;The &quot;Manta&quot;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Furthermore, &lt;strong&gt;all the designs and blueprints of the Manta boat will be Open-Source&lt;/strong&gt; and that enable enhancements and duplication at a global scale, a principle clearly aligned with our values and what we do within the Eclipse community.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://www.theseacleaners.org/en/technical-data/&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/seacleaners/manta-tech.png&quot; /&gt;&lt;/a&gt;  
    &lt;figcaption&gt;The &quot;Manta&quot; boat technical data&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;That being said, it is &lt;strong&gt;just one step on a very specific part of our activity&lt;/strong&gt;, but a step starting a journey with more to do to improve the way Obeo operates regarding its environmental responsibility. When you start building awareness of our impact on all the ins and outs of what we do, you realize even a non-industrial, software company can contribute.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;https://cedric.brun.io/eclipse/obeo-environment-theseacleaners/&quot;&gt;Let's Do It! Obeo loves The SeaCleaners&lt;/a&gt; was originally published by Cédric Brun at &lt;a href=&quot;https://cedric.brun.io&quot;&gt;CEO @ Obeo&lt;/a&gt; on September 20, 2019.&lt;/p&gt;</description>
	<pubDate>Fri, 20 Sep 2019 00:00:00 +0000</pubDate>
	<author>cedric.brun@obeo.fr (Cédric Brun)</author>
</item>
<item>
	<title>itemis: Language-Workbench für Testsprachen</title>
	<guid isPermaLink="true">https://blogs.itemis.com/de/language-workbench-fuer-testsprachen</guid>
	<link>https://blogs.itemis.com/de/language-workbench-fuer-testsprachen</link>
	<description>&lt;p&gt;Kennen Sie das? Das Gefühl, all das schon einmal erlebt zu haben? Ein Déjà-vu? Selbiges beschlich mich vergangene Woche bei einem ersten Gespräch mit einem Automobilhersteller über das Tooling seiner hauseigenen Testsprache.&lt;/p&gt;  
&lt;p&gt;&lt;img alt=&quot;Language Workbench für Testsprachen&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Software%20Development/Language-Workbench%20f%C3%BCr%20Testsprachen/language_workbench_fuer_testsprachen.jpg?width=950&amp;amp;name=language_workbench_fuer_testsprachen.jpg&quot; style=&quot;width: 950px; margin: 20px 0px;&quot; width=&quot;950&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Das Problem ist jedes Mal dasselbe. Schon vor Jahren ist die Erkenntnis gereift, dass es nicht sinnvoll ist, die riesige Menge an &lt;strong&gt;Testfällen&lt;/strong&gt; gegen fast jährlich neue Modelle immer wieder neu zu entwickeln. Jedes Mal wieder Unmengen an Zeit und Geld in die Programmierung zu stecken für Arbeiten, die doch eigentlich schon zig Mal erledigt wurden. Nur eben „ein klein wenig anders“.&lt;/p&gt; 
&lt;p&gt;Auch die Lösung dieses Problems war grundsätzlich die Richtige: eine eigene, kleine Programmiersprache, um Testfälle zu spezifizieren. Der eigentliche Testcode in C wird dann daraus generiert.&lt;/p&gt; 
&lt;p&gt;Auf diese Weise können sinnvolle Abstraktionen geschaffen werden, welche für verschiedene Modellserien &lt;strong&gt;anpassbar&lt;/strong&gt; und &lt;strong&gt;parametrisierbar&lt;/strong&gt; sind, ohne sich mit technischen Aspekten wie &lt;strong&gt;Zeigerarithmetik&lt;/strong&gt; und &lt;strong&gt;Speicherverletzungen&lt;/strong&gt; herumzuschlagen.&lt;/p&gt; 
&lt;p&gt;Doch nach einiger Zeit wurden die Schattenseiten dieses Ansatzes deutlich. Während das Tooling für gängige Programmiersprachen exzellent und ausgereift ist und die Entwickler mit mächtigen Werkzeugen zum Editieren des Codes verwöhnt werden, stellt sich die Situation für die neue Testsprache anders dar.&lt;/p&gt; 
&lt;p&gt;Natürlich liefert der Compiler mehr oder weniger hilfreiche Fehlermeldungen, und immerhin wurde ein einfaches &lt;strong&gt;Eclipse-Plugin&lt;/strong&gt; entwickelt, um zumindest Schlüsselwörter hervorzuheben, aber von einer echten Toolunterstützung kann keine Rede sein. Es gibt keine Codevervollständigung, keine automatische Formatierung, und auch die Integration mit den anderen Tools ist minimalistisch.&lt;/p&gt; 
&lt;p&gt;Erste Abschätzungen deuten auf mehrere Personenjahre an Entwicklungsaufwand hin, um hier auch nur annähernd dahin zu kommen, wo die Entwicklung mit &lt;strong&gt;Java&lt;/strong&gt; oder&lt;strong&gt; C&lt;/strong&gt; schon lange ist. Und gemacht hat das auch noch keiner im Unternehmen.&lt;/p&gt; 
&lt;p&gt;Ein hoher Aufwand und ein hohes Risiko, welche in keinem Verhältnis zum Nutzen stehen.&lt;/p&gt; 
&lt;p&gt;Also war die eigene Sprache ein Irrweg? Oder muss man mit dem schlechten Tooling leben?&lt;/p&gt; 
&lt;p&gt;Mitnichten!&lt;/p&gt; 
&lt;p&gt;Es handelt sich hier um ein gelöstes Problem. Die Idee, &lt;strong&gt;domänenspezifische Sprachen&lt;/strong&gt; mit &lt;strong&gt;&lt;a href=&quot;https://martinfowler.com/articles/languageWorkbench.html&quot; title=&quot;Link zum Artikel von Martin Fowler (öffnet im neuen Tab)&quot;&gt;Language-Workbenches&lt;/a&gt; &lt;/strong&gt; zu entwickeln, existiert seit Jahrzehnten. Der Begriff wurde vor 14 Jahren geprägt. Doch während es sich damals noch um Experimente handelte, die noch nicht wirklich produktionstaugilch waren, sind diese Tools mittlerweile ausgereift und verkürzen die Entwicklung von Werkzeugen für &lt;strong&gt;DSLs&lt;/strong&gt; um den Faktor 10 und mehr.&lt;/p&gt; 
&lt;p&gt;Mit wenigen Wochen Aufwand können bereits beeindruckende Ergebnisse erzielt werden; mit noch etwas mehr Mühe kommt man nahe an das Tooling heran, welches man von Java gewöhnt ist.&lt;/p&gt; 
&lt;p&gt;Insbesondere im Open-Source-Umfeld um Eclipse herum existiert mit &lt;strong&gt;&lt;a href=&quot;https://www.eclipse.org/Xtext/&quot; title=&quot;Link zu https://www.eclipse.org/Xtext/ (öffnet im neuen Tab)&quot;&gt;Xtext&lt;/a&gt;&lt;/strong&gt; eine Lösung, die exakt diesen Anwendungsfall optimal unterstützt, eine existierende Sprache mit wenig Aufwand um hervorragendes Tooling zu erweitern. Warum Zeit und Geld verschwenden, um das Rad mal wieder neu zu erfinden, wenn man einfach auf die Arbeit von anderen aufbauen kann? Du hast ein ähnliches Problem?&lt;/p&gt; 
&lt;p&gt;Schreibe uns gerne deine Erfahrungen in die Kommentare oder sprich uns an!&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;P.S.: Langweilig wird mir das nicht … auch wenn ich meine, das alles schon einmal erlebt zu haben. Hat ja manchmal auch Vorteile.&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fde%2Flanguage-workbench-fuer-testsprachen&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 13 Sep 2019 14:12:14 +0000</pubDate>
	<author>adeutsch@itemis.de (Arne Deutsch)</author>
</item>
<item>
	<title>Jens Reimann: From building blocks to IoT solutions</title>
	<guid isPermaLink="false">https://dentrassi.de/?p=4293</guid>
	<link>https://dentrassi.de/2019/09/10/from-building-blocks-to-iot-solutions/</link>
	<description>&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignright is-resized&quot;&gt;&lt;a href=&quot;https://iot.eclipse.org&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Eclipse IoT&quot; class=&quot;wp-image-3752&quot; height=&quot;207&quot; src=&quot;https://dentrassi.de/wp-content/uploads/eclipse-IoT-light-300x269.png&quot; width=&quot;231&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;The Eclipse IoT ecosystem consists of around 40 different projects, ranging from embedded devices, to IoT gateways and up to cloud scale solutions. Many of those projects stand alone as “building blocks”, rather than ready to run solutions. And there is a good reason for that: you can take these building blocks, and incorporate them into your own solution, rather than adopting a complete, pre-built solution.&lt;/p&gt;



&lt;p&gt;This approach however comes with a downside. Most people will understand the purpose of building blocks, like “&lt;a href=&quot;https://www.eclipse.org/paho/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Paho&lt;/a&gt;” (an MQTT protocol library) and “&lt;a href=&quot;https://github.com/eclipse/milo&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Milo&lt;/a&gt;” (an &lt;a href=&quot;https://dentrassi.de/2019/07/06/eclipse-milo-0-3-updated-examples/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;OPC UA protocol library&lt;/a&gt;) and can easily integrate them into their solution. But on the cloud side of things, building blocks become much more complex to integrate, and harder to understand.&lt;/p&gt;



&lt;p&gt;Of course, the “getting started” experience is extremely important. You can simply &lt;a href=&quot;https://www.eclipse.org/downloads/packages/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;download an Eclipse IDE package&lt;/a&gt;, tailored towards your context (Java, Modelling, Rust, …), and are up and running within minutes. We don’t want you to design your deployment descriptors first, and then let you figure out how to start up your distributed cluster. Otherwise “getting started” will become a week long task. And a rather frustrating one.&lt;/p&gt;



&lt;h2&gt;Getting started. Quickly!&lt;/h2&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignright&quot;&gt;&lt;a href=&quot;https://dentrassi.de/2019/02/20/integrating-eclipse-iot/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Eclipse IoT building blocks&quot; class=&quot;wp-image-4121&quot; src=&quot;https://dentrassi.de/wp-content/uploads/Selection_583-300x236.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;During the &lt;a href=&quot;https://www.eclipse.org/lists/iot-wg/msg01495.html&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse IoT face-to-face meeting in Berlin&lt;/a&gt;, early this year, the Eclipse IoT working group discussed various ideas. How can we enable interested parties to get started, with as little effort as possible. And still, give you full control. Not only with a single component, which doesn’t provide much benefit on its own. But get you started with a complete solution, which solves actual IoT related problems.&lt;/p&gt;



&lt;p&gt;The goal was simple. Take an IoT use case, which is easy to understand by IoT related people. And provide some form of deployment, which gets people up and running in less than 15 minutes. With as little as possible external requirements. At best, run everything on your local laptop. Still, create everything in a close-to-production style of deployment. Not something completely stripped down. But use a way of deployment, that you could actually use as a basis for extending it further.&lt;/p&gt;



&lt;h2&gt;Kubernetes &amp;amp; Helm&lt;/h2&gt;



&lt;p&gt;We quickly agreed on &lt;a href=&quot;https://kubernetes.io/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Kubernetes&lt;/a&gt; as the runtime platform, and &lt;a href=&quot;https://helm.sh/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Helm&lt;/a&gt; as the way to perform the actual deployments. With Kubernetes being available even on a local machine (using &lt;a href=&quot;https://kubernetes.io/docs/setup/learning-environment/minikube/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;minikube&lt;/a&gt; on Linux, Windows and Mac) and being available, at the same time, in several enterprise ready environments, it seemed like an ideal choice. Helm charts seemed like an ideal choice as well. Helm designed directly for Kubernetes. And it also allows you to generate YAML files, from the Helm charts. So that the deployment only requires you to deploy a bunch of YAML files. Maintaining the charts, is still way easier than directly authoring YAML files.&lt;/p&gt;



&lt;h2&gt;Challenges, moving towards an IoT solution&lt;/h2&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignright&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-4341&quot; src=&quot;https://dentrassi.de/wp-content/uploads/logo_stack_proper_200px.png&quot; /&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;A much tougher question was: how do we structure this, from a project perspective. During the meeting, it soon turned out, there would be two good initial candidates for “stacks” or “groups of projects”, which we would like to create.&lt;/p&gt;



&lt;p&gt;It also turned out that we would need some “glue” components for a package like that. Even though it may only be a script here, or a “readme” file there. Some artifacts just don’t fit into either of those projects. And what about “in development” versions of the projects? How can you point people towards a stable deployment, only using a stable (released) group of projects, when scripts and readme’s are spread all over the place, in different branches.&lt;/p&gt;



&lt;p&gt;A combination of “&lt;a href=&quot;https://www.eclipse.org/hono/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Hono&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/ditto/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Ditto&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.eclipse.org/hawkbit/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Hawkbit&lt;/a&gt;” seemed like an ideal IoT solution to start with. People from various companies already work across those three projects, using them in combination for their own purpose. So, why not build on that?&lt;/p&gt;



&lt;p&gt;But in addition to all those technical challenges, the governance of this effort is an aspect to consider. We did not want to exclude other Eclipse IoT projects, simply by starting out with “Hono, Ditto, and Hawkbit”. We only wanted to create “an” Eclipse IoT solution, and not “the” Eclipse IoT solution. The whole Eclipse IoT ecosystem is much too diverse, to force our initial idea on everyone else. So what if someone comes up with an additional group of Eclipse IoT projects? Or what if someone would like to add a new project to an existing deployment?&lt;/p&gt;



&lt;h2&gt;A home for everyone&lt;/h2&gt;



&lt;p&gt;Luckily, creating an Eclipse Foundation project solves all those issues. And the &lt;a href=&quot;https://projects.eclipse.org/projects/technology.packaging&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Packaging project&lt;/a&gt; already proves that this approach works. We played with the idea, to create some kind of a “meta” project. Not a real project in the sense of having a huge code base. But more a project, which makes use of the Eclipse Foundations governance framework. Allowing multiple, even competing companies, to work upstream in a joint effort. And giving all the bits and pieces, which are specific to the integration of the projects, a dedicated home.&lt;/p&gt;



&lt;p&gt;A home, not only for the package of “Hono, Ditto and Hawkbit”, but hopefully for other packages as well. If other projects would like to present their IoT solution, by combining multiple Eclipse IoT projects, this is their chance. You can easily become a contributor to this new project, and publish your scripts, documentation and walk-throughs, alongside the other packages.&lt;/p&gt;



&lt;p&gt;Of course everything will be open source, licensed under the EPL. So go ahead and fork it, add your custom application on top of it. Or replace an existing component with something, you think is even better than what we put it. We want to enable you to deploy what we provide in a few minutes. Offer you an explanation, what to expect from it, and what this IoT solution can do for you. And encourage you to play around with it. And enable you to extend it, and build something bigger.&lt;/p&gt;



&lt;h2&gt;Let’s get started&lt;/h2&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignright&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;EclipseCon Europe 2019&quot; class=&quot;wp-image-4321&quot; src=&quot;https://dentrassi.de/wp-content/uploads/https___www.eclipsecon.org_sites_default_files_ECE_only_round_200x200.png.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;We created a new project &lt;a href=&quot;https://projects.eclipse.org/proposals/eclipse-iot-packages&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;proposal for the Eclipse IoT packages&lt;/a&gt; project. The project is currently in the community review phase. Once we pass the creation review, we will start publishing the content for the first package we have.&lt;/p&gt;



&lt;p&gt;The Eclipse IoT working group will also meet at the &lt;a href=&quot;https://www.eclipsecon.org/europe2019/eclipse-community-day&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;IoT community day&lt;/a&gt; of &lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;EclipseCon Europe 2019&lt;/a&gt;. Our goal is to present an initial version of the initial package. Ready to run!&lt;/p&gt;



&lt;p&gt;But even more important, we would like to continue our discussions around this effort. All contributions are welcome: code, documentation, additional packages … your ideas, thoughts, and feedback!&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://dentrassi.de/2019/09/10/from-building-blocks-to-iot-solutions/&quot; rel=&quot;nofollow&quot;&gt;From building blocks to IoT solutions&lt;/a&gt; appeared first on &lt;a href=&quot;https://dentrassi.de&quot; rel=&quot;nofollow&quot;&gt;ctron's blog&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 10 Sep 2019 07:07:37 +0000</pubDate>
</item>
<item>
	<title>Cedric Brun: The Rising Adoption of Capella</title>
	<guid isPermaLink="false">https://cedric.brun.io/eclipse/rising-adoption-of-MBSE-capella</guid>
	<link>https://cedric.brun.io/eclipse/rising-adoption-of-MBSE-capella/</link>
	<description>&lt;p&gt;Witnessing an OSS technology getting together with a wide group of users is something I find exhilarating, I have experienced it with Acceleo, EMF Compare and Eclipse Sirius along the years, each time in different contexts and at different scales but discovering what is being done by others with a technology is always a source of excitement to me.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.polarsys.org/capella/&quot; target=&quot;_blank&quot;&gt;Capella&lt;/a&gt;  was contributed by Thales to the Eclipse communities a few years ago already and fueled by the growing need to design Systems in a better way, by the interest in Model Based System Engineering and the qualities of the product in itself we can clearly see an acceleration in the last few months.&lt;/p&gt;

&lt;p&gt;If you are wondering what is Capella and what it’s used for, here is a 2-minute video we prepared for you:&lt;/p&gt;



&lt;p&gt;Worldwide awareness of this solution grows and adoption rises, organizations from Europe, North America and Asia are now using Capella and experiencing the benefits of using a tool which implements a method (coined “&lt;a href=&quot;https://www.polarsys.org/capella/arcadia.html&quot; target=&quot;_blank&quot;&gt;Arcadia&lt;/a&gt;”) and &lt;strong&gt;not only a language.&lt;/strong&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://cedric.brun.io/images/blog/capelladay2019/forum-activity.png&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/capelladay2019/forum-activity.png&quot; /&gt;&lt;/a&gt;  
    &lt;figcaption&gt;Capella Forum Activity&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Looking at the numbers, &lt;strong&gt;just for this summer : more than 1200 downloads each month&lt;/strong&gt;, a forum actvity which has been growing with a nice looking curve and monthly stats on &lt;a href=&quot;https://www.youtube.com/channel/UCfgwbb2h10V3tgJ59sbGBnQ/videos&quot; target=&quot;_blank&quot;&gt;YouTube&lt;/a&gt; reaching more than 2000 views: considering the size of the target audience this is a significant acceleration and that is without counting the deployment of &lt;a href=&quot;https://www.plm.automation.siemens.com/global/en/products/collaboration/product-architecture.html&quot; target=&quot;_blank&quot;&gt;System Modeling Workbench&lt;/a&gt; provided by Siemens which includes the technology.&lt;/p&gt;

&lt;p&gt;Adopters not only use it but speak about it and as with any other tool having an opportunity to understanding how others are using it is highly valuable.&lt;/p&gt;

&lt;p&gt;Rolls Royce, ArianeGroup or the Singapore University: they all have shared valuable information through the recent webinars :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://fr.slideshare.net/Obeo_corp/webinar-july-2019-introduction-to-capella-and-arcadia-with-a-simple-system&quot; target=&quot;_blank&quot;&gt;Introduction to Arcadia Capella with a toy catapult project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=njW_zdE_FzI&quot; target=&quot;_blank&quot;&gt;Capella for large complex mechanical systems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;MBSE must become a team sport !&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More are coming and many already available through the &lt;a href=&quot;https://www.polarsys.org/capella/resources.html&quot; target=&quot;_blank&quot;&gt;Resources Page&lt;/a&gt;! BTW we can’t always get the authorization to keep them available online so your safest option is to register and attend.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://polarsys.org/capella/capella_day_munich_2019.html&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/capelladay2019/munich.jpg&quot; /&gt;&lt;/a&gt;  
    &lt;figcaption&gt;Munich (Germany)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We also make sure to setup « in Real Life » opportunities to discuss Capella and MBSE. Occasions to talk with the team behind Capella and the experts arounds the world. Next up is Capella Day Munich 2019 in a couple of weeks (the 16th of September) organized by Thales and Obeo in conjunction with the  &lt;a href=&quot;https://modelsconf19.org/&quot;&gt;Models Conference 2019&lt;/a&gt;. Here is a glimpse of the program :&lt;/p&gt;

&lt;p&gt;The agenda is filled with general presentations, feedback by industrial users about their Capella deployment or specific add-ons/integration.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://polarsys.org/capella/capella_day_munich_2019.html#program&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/capelladay2019/program.png&quot; /&gt;&lt;/a&gt;  
    &lt;figcaption&gt;The program of Capella Day Munich 2019&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;You might &lt;a href=&quot;https://polarsys.org/capella/capella_day_munich_2019.html&quot; target=&quot;_blank&quot;&gt;want to hurry as we are almost sold out&lt;/a&gt; and such occasions are pretty unique!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I sincerely hope you’ll enjoy it, we are working hard to make it a success :-), if you can’t make it this time then know there are more occasions to come: &lt;a href=&quot;https://www.incose.org/events-and-news/search-events/2019/10/17/default-calendar/asia-oceania-systems-engineering-conference-2019---call-for-papers&quot; target=&quot;_blank&quot;&gt;AOSEC&lt;/a&gt; in Bangalore, EclipseCon in Germany (again!) where there might be a workshop focused on “MBSE at Eclipse” (Please add your name and interest on &lt;a href=&quot;https://wiki.eclipse.org/ECE2019_MBSE_at_Eclipse&quot; target=&quot;_blank&quot;&gt;the corresponding wiki page&lt;/a&gt; )&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;https://cedric.brun.io/eclipse/rising-adoption-of-MBSE-capella/&quot;&gt;The Rising Adoption of Capella&lt;/a&gt; was originally published by Cédric Brun at &lt;a href=&quot;https://cedric.brun.io&quot;&gt;CEO @ Obeo&lt;/a&gt; on September 04, 2019.&lt;/p&gt;</description>
	<pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
	<author>cedric.brun@obeo.fr (Cédric Brun)</author>
</item>
<item>
	<title>Doug Schaefer: Time for Change</title>
	<guid isPermaLink="false">https://medium.com/p/54156200cab8</guid>
	<link>https://medium.com/@dougschaefer/time-for-change-54156200cab8?source=rss-8f7a70438965------2</link>
	<description>&lt;p&gt;First, let me get straight to the point. I have left BlackBerry/QNX and will be starting a new job in Ottawa next week. It’s a great opportunity to work on something new for a great company with a bunch of former colleagues I admire. As much as I’m looking forward to that much needed change, it sadly will take me away from the Eclipse community. This message is a goodbye and thank you.&lt;/p&gt;&lt;p&gt;Thinking back all the way to the beginning, I’m quickly overwhelmed by how many great people I have had the opportunity to work with thanks to the Eclipse CDT project. At the very beginning was Sky Matthews and John Prokopenko who let me weasel my way on as Rational’s technical lead on the project just as it was starting out in 2002 also at a time when I needed a change. Of course, I had a great team of developers at Rational with me that made it fun and easy. Not to mention the original team at QNX who were welcoming and made it easy to get involved. I have a special mention for Sebastien Marineau, CDT’s first project lead, who let me take a leadership role on the project and eventually hired me on at QNX to take over.&lt;/p&gt;&lt;p&gt;Then there was the early years on the CDT where we made our mark. Those early CDT Summits were so fun and really helped built up a team atmosphere. We had about a dozen companies sending contributors, a few of them competitors in the spirit of co-opetition, and we made it work. Then over the years we started getting independent contributors who just did it for the passion of building great C++ tooling they wanted to use themselves. It’s been a great mix and I am so lucky and proud to have been a part of it.&lt;/p&gt;&lt;p&gt;And of course, it was all topped off with our yearly EclipseCons. I am proud to have attended every one of the EclipseCon North America ones and was able to attend quite a few of the EclipseCon Europes in Germany. I have to thank Anne and Mike and Ralph and Wayne and Sharon and Perri and Donald and Ian and Lynn and all the Eclipse Foundation staff past and present for making me feel a part of the family. I always looked forward to the EclipseCon Express flights out of and return to Ottawa with many of them.&lt;/p&gt;&lt;p&gt;My fellow attendees at these conferences were amazing, from the first one at Disneyland where we had an overflow crowd at the CDT BOF and where I gave my first of many CDT talks, to all the friends I met at the bar or ran into at sessions, many of whom had nothing to do with CDT but made me feel so much a part of the bigger community. I will never forget the late nights in the bars chatting with friends like Michael Scharf and Ian Bull and Eric Cloninger and Gilles and Adrian and Jonah and Tom and so many others. As it turns out, last year in Ludwigsburg was a perfect finale where we had such a great time at the Nestor on Wednesday night. I will never forget you all.&lt;/p&gt;&lt;p&gt;I’m incredibly proud of what we built for the CDT. It still has the best indexer in the business, thanks to the parser we built back at Rational and the database I built at QNX and then with so many hands continually making it better and adjusting to the now ever changing C++ language spec. The Launch Bar achieved what I wanted by simplifying the Eclipse launch experience. CDT’s new Core Build fits naturally with the Launch Bar and makes it much simpler to integrate external build systems like CMake. And we have just started a GDB debug adapter using the debug adapter protocol which will pave the way to simplify integrating debuggers with the CDT.&lt;/p&gt;&lt;p&gt;The current set of active committers on the CDT have lately been pulling almost all the weight evolving it and getting releases out the door. Their great work has made my transition easier and will keep the CDT rolling along for years to come. And hopefully vendors will come back too and help provide funding for all this activity. We have an action plan to transition the project lead role. Follow the cdt-dev mailing list to find out more.&lt;/p&gt;&lt;p&gt;It’s sad to leave and the memories and friendships will be forever. I will keep my cdtdoug personal gmail account as a reminder of where I came from. But my new role will give me some much needed energy to keep things going for the next decade. I once questioned why you hardly see any retired engineers helping with open source projects or sharing their passion with the next generation. I promise you this, you will see me again.&lt;/p&gt;&lt;p&gt;Take care, and thank you.&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=54156200cab8&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 03 Sep 2019 14:56:55 +0000</pubDate>
</item>
<item>
	<title>N4JS: Redux App Development and Testing in N4JS (Chess Game Part 2)</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-7569987920628430132.post-8839918734785430851</guid>
	<link>https://n4js.blogspot.com/2019/08/redux-app-development-and-testing-in.html</link>
	<description>&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;In large applications, &lt;a href=&quot;https://redux.js.org/&quot; target=&quot;_blank&quot;&gt;Redux&lt;/a&gt; - an implementation of &lt;a href=&quot;https://facebook.github.io/flux/&quot; target=&quot;_blank&quot;&gt;Flux architecture&lt;/a&gt; created by Facebook - is often used to organise application code by using a strict data flow in one direction only. Redux is UI agnostic, and can be used in conjunction with any UI library. As a continuation of our chess game tutorial with React, we show how to extract the entire program state out of React components, store it with Redux, and test it with N4JS. The full tutorial is available at &lt;a href=&quot;https://www.eclipse.org/n4js/userguides/n4js-tutorial-chess/n4js-tutorial-chess-redux.html&quot; target=&quot;_blank&quot;&gt;eclipse.org/n4js&lt;/a&gt; and the sources can be found at &lt;a href=&quot;https://github.com/Eclipse/n4js-tutorials&quot; target=&quot;_blank&quot;&gt;github.com/Eclipse/n4js-tutorials&lt;/a&gt;.&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;&quot; style=&quot;clear: both; text-align: left;&quot;&gt;The first part of the chess game tutorial discussed how to develop a chess game app with React and JSX in N4JS. We have stored the program state - which for instance contains information about the locations of all chess pieces - in the state of the React components directly. As applications become larger, however, the mix of program state and UI makes the application hard to comprehend and difficult to test. To address these issues, we extract the program state from the UI components in the second part of the tutorial.&lt;/div&gt;&lt;div class=&quot;&quot; style=&quot;clear: both;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;&quot; style=&quot;clear: both;&quot;&gt;When using React with Redux, we store the application state in Redux store instead of the state of React components. As a result, React components become stateless UI elements and simply render the UI using the data retrieved from the Redux store. In a Redux architecture, data flows strictly in one direction. The diagram below graphically depicts the action/data flow in a React/Redux app.&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-5lmZGp63Rzk/XS2KIsXiUFI/AAAAAAAAAMI/sb8v_jGp0Q8IvVyiNXH7XrcjVTeeiB7OACLcBGAs/s1600/redux-architecture.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;200&quot; src=&quot;https://1.bp.blogspot.com/-5lmZGp63Rzk/XS2KIsXiUFI/AAAAAAAAAMI/sb8v_jGp0Q8IvVyiNXH7XrcjVTeeiB7OACLcBGAs/s1600/redux-architecture.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Strict data flow of flux architecture application&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;The action/data flow in the diagram can be roughly understood as follows:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;When a user interaction is triggered on the React component (e.g. button clicked, text field edited etc.), an action is created. The action describes the changes needed to be updated in the application state. For instance, when a text field is edited, the action created may contain the new string of the text field.&lt;/li&gt;&lt;li&gt;Then the action is dispatched to the Redux store whereby the Redux store stores the application state, usually as a hierarchical tree of state.&lt;/li&gt;&lt;li&gt;The reducers take the action and the current application state and create an updated application state.&lt;/li&gt;&lt;li&gt;If the changes in the application state are to a certain React component, they are forwarded into the component in form of props. The change in props causes the component to re-render.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;In the second part of the tutorial we further elaborate on the interaction of React and Redux and migrate the original chess non-Redux app. The tutorial explains the role of the reducer, and how the game state is stored and maintained in the Redux store. Based on storing the game using Redux, the tutorial shows how to test the game application with the N4JS test library &lt;i&gt;Mangelhaft&lt;/i&gt;, by for instance checking that valid move destination squares are updated after a chess piece was selected.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;Note that the way of testing the game logics is completely UI-agnostic and no React components are involved at all. This is thanks to the decoupling of game logics from UI with the help of Redux.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: x-small;&quot;&gt;by Minh Quang Tran&lt;/span&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 29 Aug 2019 16:04:16 +0000</pubDate>
	<author>noreply@blogger.com (n4js dev)</author>
</item>
<item>
	<title>Ed Merks: And Now for Something Completely Different</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-3879044552984472733.post-4273181109797448391</guid>
	<link>http://ed-merks.blogspot.com/2019/08/and-now-for-something-completely.html</link>
	<description>It's been 5 years since I last blogged, so I had to delete 500 SPAM  posts when getting started again.  Much has happened over the past  years, some of them not so great. When you start to get old like me, you  must deal with the older generation gradually passing on and health  problems, such as coronary re-plumbing, can become an ugly fact of life.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-0M3QCRwIRRU/XWeKYT-JIII/AAAAAAAACrw/zhLs6JHOI_QXkVGpXNRHjSeWIpj_ZszNwCLcBGAs/s1600/OldShip.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;180&quot; src=&quot;https://1.bp.blogspot.com/-0M3QCRwIRRU/XWeKYT-JIII/AAAAAAAACrw/zhLs6JHOI_QXkVGpXNRHjSeWIpj_ZszNwCLcBGAs/s320/OldShip.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;I've been working with itemis for the past 11 years, but that now  draws to a close.  I wish to thank them for their generous support over  all these years.  Many of you might thank them as well because much of  what I've contributed is thanks to their funding.  Though admittedly I  have the nasty habit of working like a maniac, beyond any reasonable  number of working hours, regardless of whether or not there is financial  reward.  Cool things are just so compelling. But the worst habit then  is not bothering to document or advertise all these cool new features as  they become available, but rather to dive into the next obsession  because somehow that's more compelling.  Compulsion is a bit of a Merks'  family trait, e.g., my sister has more than 20 dogs, though it's easy  to lose count...&lt;br /&gt;&lt;br /&gt;In any case, most of my obsession over the last year has been related  to working with Airbus.  I don't normally talk about my customers, but  given they were gracious enough to allow me to demo at last year's  EclipseCon the software being developed at Airbus, it's common knowledge  anyway.  My goodness but that was a creative and cool project!  Unfortunately that too has, as is the case for all good things, come  to an end.&lt;br /&gt;&lt;br /&gt;I immediately dove into generating a quality report for the Eclipse  SimRel p2 repository; there's no rest for the wicked nor for the  compelled.  I used EMF's Java Emitter Templates (JET) for implementing  that, just as I did for generating the full site information for  &lt;a href=&quot;https://download.eclipse.org/modeling/emf/emf/builds/index.html&quot;&gt;EMF's Update Sites&lt;/a&gt;  as part of migrating the build to Maven/Tycho.&lt;br /&gt;&lt;br /&gt;Speaking of which, did you know that you can make it trivially easy for your contributors to set up a development environment? Just have a look at &lt;a href=&quot;https://ci.eclipse.org/emf/&quot;&gt;EMF' build page&lt;/a&gt;.  Also, did you know that there exists such a thing for the complete &lt;a href=&quot;https://wiki.eclipse.org/Eclipse_Platform_SDK_Provisioning&quot;&gt;Eclipse Platform SDK&lt;/a&gt; as well? Of course not, because I never bothered to tell you!&lt;br /&gt;&lt;br /&gt;What's really supergeil (yes, I live in Germany and speak fluent  Denglish) about the installing an environment with the full Platform  SDK, or some subset there of, is that you can easily see all the Git  history of each source file, so you can see what exactly has changed and  evolved.  Also, when developing new applications, you can easily search  for how the Platform implements those things; then you can snarf and  barf out your own solutions, with all due respect for the EPL of  course.  You can even find out all the places that a constant is  actually used; you cannot do that against binaries because constants get  in-lined.  Also, if you see some label in the IDE, you can search for  where it comes from, some *.properties file somewhere no doubt, and then  you will know the name of that property and can easily find where  that's defined and how that's used in the code.  You might even  contribute fixes via Gerrit commits!&lt;br /&gt;&lt;br /&gt;But I digress.  I was using JET to generate a nice helpful web page  with information about all the problems in the SimRel repo, or in any  arbitrary repo actually, i.e., invalid licenses, unsigned content,  missing pack200 files, duplicate bundles, inappropriate providers, and  so on. But then I got frustrated that JET templates eventually get  really hard to read, especially as they become more complicated.  Then,  when you need it the most, all the nice features of JDT are missing  while editing the scriplets and expressions in that template. So as I am  wont to do, I digressed further and spent the better part of the last  two months working on a rich editor for JET.  I'm sorry (not!) that I  had to violate a few API rules to do so, but alas, API rights activists  is a topic for another blog because that's a long digression.  The good thing is that the JET editor is finished now; it will be in  2019-09's M3.  Here's a sneak preview:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-zbHtviZ7w7c/XWeOuCKpj8I/AAAAAAAACr8/BwnJL3B9rdM4kFSLl--Z7wojabe5T9OvQCLcBGAs/s1600/JETEditor.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;231&quot; src=&quot;https://1.bp.blogspot.com/-zbHtviZ7w7c/XWeOuCKpj8I/AAAAAAAACr8/BwnJL3B9rdM4kFSLl--Z7wojabe5T9OvQCLcBGAs/s320/JETEditor.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Yes, that's content assist, just is if were in a real Java editor! Not only that, this time I wrote documentation for it in EMF's doc bundle. And, to top that off with icing, this time I blog  about it.  Perhaps only three people in the world will ever use it, but  I am one of those three people and I love it and I need it even for  working with EMF's code generation templates too. So now I can pop this off  my digression stack and go back to generating that p2 repo quality  report.  I've been doing that for the past week, and it's almost ready  for prime-time.&lt;br /&gt;&lt;br /&gt;But then at this point, I must ask myself, where is the financial gain  in all this?  My local neighborhood fox, I've named him Fergus,  might  be trying to tell me something.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-8Rd65OT-GrM/XWeQ1fQPPjI/AAAAAAAACsI/7oRwuFKL9BcDM0ahSr-DGyTKWKuxLRT2QCLcBGAs/s1600/Fergus.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;320&quot; src=&quot;https://1.bp.blogspot.com/-8Rd65OT-GrM/XWeQ1fQPPjI/AAAAAAAACsI/7oRwuFKL9BcDM0ahSr-DGyTKWKuxLRT2QCLcBGAs/s320/Fergus.png&quot; width=&quot;197&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Perhaps you should be a little more sly.  Perhaps the endless free goodness too must come to an end...</description>
	<pubDate>Thu, 29 Aug 2019 09:23:18 +0000</pubDate>
	<author>noreply@blogger.com (Ed Merks)</author>
</item>
<item>
	<title>Jonas Hungershausen: GSoC 2019 Summary: Dart support for the Eclipse IDE</title>
	<guid isPermaLink="true">https://jonas-jonas.dev/posts/dartboard-summary/</guid>
	<link>https://jonas-jonas.dev/posts/dartboard-summary/</link>
	<description>&lt;p&gt;Summary of my Summer of Code 2019&lt;/p&gt;
&lt;p&gt;This post is a summary of my Summer of Code 2019.
My project was to bring Dart development support to the Eclipse IDE.
To do so I created a plugin that consumes the Dart analysis server using &lt;a href=&quot;https://projects.eclipse.org/projects/technology.lsp4e&quot;&gt;LSP4E&lt;/a&gt;.
It also provides syntax highlighting using &lt;a href=&quot;https://projects.eclipse.org/projects/technology.tm4e&quot;&gt;TM4E&lt;/a&gt; and many more features listed below.&lt;/p&gt;
&lt;h1&gt;Features&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;The following list showcases the most significant features of the plugin I (and other contributors) added during GSoC 2019.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Running Dart programs directly from Eclipse&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/1&quot;&gt;eclipse/dartboard#1&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Standard &amp;amp; error output in a dedicated console&lt;/li&gt;
&lt;li&gt;Support for multiple Launch configurations&lt;/li&gt;
&lt;li&gt;Running single files from the context menu&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dart preference page&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/10&quot;&gt;eclipse/dartboard#10&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set the location for the Dart SDK that should be used for all actions&lt;/li&gt;
&lt;li&gt;Choose whether to automatically synchronize the dependencies of project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;First class Pub support&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/pull/107&quot;&gt;eclipse/dartboard#107&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Automatic synchronization of Pub dependencies when changing the &lt;code&gt;pubspec.yaml&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;Shortcut for running &lt;code&gt;$ pub get&lt;/code&gt; manually&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Creating new Dart projects and files&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/pull/115&quot;&gt;eclipse/dartboard#115&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stagehand templates are also supported&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Usage of the Dart logo&lt;/strong&gt; - &lt;a href=&quot;https://github.com/eclipse/dartboard/commit/a23fc1f57cd3fdc6e702759c507aa977f7dd7561&quot;&gt;eclipse/dartboard@a23fc1f&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Import existing Dart projects directly into the workspace&lt;/strong&gt; (+ automatic dependency synchronization) - &lt;a href=&quot;https://github.com/eclipse/dartboard/pull/116&quot;&gt;eclipse/dartboard#116&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Upstream Bug Fixes&lt;/h1&gt;
&lt;p&gt;During development I encountered many issues with the libraries and tools I was using.
As I was already aware I took the time to fix them directly and provide a patch or PR for the corresponding library.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;NullPointerException&lt;/code&gt; in LSP4E's &lt;code&gt;SymbolsModel#getChildren&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/4&quot;&gt;eclipse/dartboard#4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://git.eclipse.org/r/#/c/139273/&quot;&gt;Change 139273&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adjusted the Eclipse Light syntax theme in TM4E to match the classic Eclipse theme better&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/21&quot;&gt;eclipse/dartboard#21&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://github.com/eclipse/tm4e/pull/215&quot;&gt;eclipse/tm4e#215&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using the quick access menu in Eclipse resulted in an Exception.
This was caused by LSP4E not adhering to the LSP spec.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=548155&quot;&gt;Bug 548155&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://git.eclipse.org/r/#/c/143723/&quot;&gt;Change 143723&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;textDocument/didSave&lt;/code&gt; notification is not supported by the Dart analysis server but LSP4E sent it anyway and this resulted in an error&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://github.com/eclipse/dartboard/issues/32&quot;&gt;eclipse/dartboard#32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://git.eclipse.org/r/#/c/143922/&quot;&gt;Change 143922&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another NPE in TM4E's &lt;code&gt;ThemeContribution&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Issue: &lt;a href=&quot;https://github.com/eclipse/tm4e/issues/207&quot;&gt;eclipse/tm4e#207&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix: &lt;a href=&quot;https://github.com/eclipse/tm4e/pull/217&quot;&gt;eclipse/tm4e#217&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Things Left to do&lt;/h1&gt;
&lt;p&gt;I have completed all of my goals I set in the initial proposal for GSoC.
However a few things and features have come up during development that I plan on taking care of in the near future.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Flutter support&lt;/strong&gt; - Flutter apps need to be run using the special &lt;code&gt;$ flutter&lt;/code&gt; command suite, instead of the default SDK
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/dartboard/issues/109&quot;&gt;eclipse/dartboard#109&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other things that could be enhanced include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pub console&lt;/strong&gt; - Currently there is now way to see the output of the pub commands
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/dartboard/issues/117&quot;&gt;eclipse/dartboard#117&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Webdev support&lt;/strong&gt; - Dart apps that should be run on the browser need to be run using the &lt;code&gt;$ webdev&lt;/code&gt; command line tools
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/dartboard/issues/110&quot;&gt;eclipse/dartboard#110&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope to be able to work on them but community contributions are always welcome.&lt;/p&gt;
&lt;p&gt;A full list of commits and issues can be found on the &lt;a href=&quot;https://github.com/eclipse/dartboard&quot;&gt;project's GitHub repository&lt;/a&gt;.
Installation instructions can also be found there.&lt;/p&gt;
&lt;h1&gt;Appreciation&lt;/h1&gt;
&lt;p&gt;In the early days, Lakshminarayana Nekkanti has joined the project as a committer.
He has been extremely helpful since by fixing bugs in the Eclipse platform that have been open for years (&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=513034&quot;&gt;Bug 513034&lt;/a&gt;) and contributing a lot of features and knowledge to the plugin.
Thank you, Lakshminarayana!&lt;/p&gt;
&lt;p&gt;I would also like to thank Lars Vogel who has been my Mentor and helped tremendously when I was unsure what to do.&lt;/p&gt;</description>
	<pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Jonas Hungershausen: Dartboard: Pub support, Stagehand templates &amp; better theming</title>
	<guid isPermaLink="true">https://jonas-jonas.dev/posts/dartboard-fourth-update/</guid>
	<link>https://jonas-jonas.dev/posts/dartboard-fourth-update/</link>
	<description>&lt;p&gt;Automatic &lt;a href=&quot;https://pub.dev/&quot;&gt;pub.dev&lt;/a&gt; dependency synchronization, &lt;a href=&quot;https://pub.dev/packages/stagehand&quot;&gt;stagehand templates&lt;/a&gt; and theme improvements for TM4E.&lt;/p&gt;

&lt;h1&gt;Pub dependency synchronization&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://pub.dev/&quot;&gt;pub.dev&lt;/a&gt; is the main source of packages for Dart projects.
Dependencies are added to a &lt;code&gt;pubspec.yaml&lt;/code&gt; file and the &lt;code&gt;$ pub get&lt;/code&gt; command is used to download the packages from the registry.
Since most projects require at least a few dependencies this step &lt;em&gt;must&lt;/em&gt; be taken before the project compiles without errors.&lt;/p&gt;
&lt;p&gt;To ease this process a little, the command is now automatically run when saving the &lt;code&gt;pubspec.yaml&lt;/code&gt; file in Eclipse.
With this, required dependencies are automatically downloaded when a project is imported or when a new package is added to the &lt;code&gt;pubspec.yaml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;If you don't want this behavior the feature can be disabled from the preference page.
Manually running the synchronization is also supported from the context menu of a project.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Pub context handler&quot; src=&quot;https://jonas-jonas.dev/assets/img/pub-command.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The current progress of the synchronization is reported to the &lt;em&gt;Progress&lt;/em&gt; view.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Pub progress&quot; src=&quot;https://jonas-jonas.dev/assets/img/pub-dependencies.gif&quot; /&gt;&lt;/p&gt;
&lt;h1&gt;Stagehand&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://pub.dev/packages/stagehand&quot;&gt;Stagehand&lt;/a&gt; is a CLI tool, written in Dart, that generates new projects from a list of templates.
There are different project types to chose from, like Flutter, AngularDart or just console applications.
After a template is generated the project contains a &lt;code&gt;pubspec.yaml&lt;/code&gt; file containing all necessary dependency information and various entry files that are required by the type of project.&lt;/p&gt;
&lt;p&gt;This tool is now supported graphically by the &lt;em&gt;New Dart Project&lt;/em&gt; wizard also provided by Dartboard.
Under the hood the plugin uses the exact executable from &lt;code&gt;pub.dev&lt;/code&gt;.
And by automatically updating it we make sure that new templates can be immediately used.&lt;/p&gt;
&lt;p&gt;This is how the &lt;em&gt;New Dart Project&lt;/em&gt; wizard looks now:
&lt;img alt=&quot;Stagehand&quot; src=&quot;https://jonas-jonas.dev/assets/img/stagehand.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;At first selection of the Wizard (after a fresh IDE start) &lt;em&gt;Stagehand&lt;/em&gt; is updated and its templates are fetched.
After that job is finished the available templates are added to the combo box.
If no template should be used the &lt;em&gt;Use Stagehand template&lt;/em&gt; checkbox can be unchecked and an empty project is generated.&lt;/p&gt;
&lt;p&gt;Subsequent usages of the wizard use cached versions of the templates list to not strain your network or the &lt;a href=&quot;https://pub.dev/&quot;&gt;pub.dev&lt;/a&gt; registry too much.&lt;/p&gt;
&lt;h1&gt;Project import&lt;/h1&gt;
&lt;p&gt;Not every Dart project was created from Eclipse though.
So to be able to use Dartboard with existing Dart projects it is required to import them into the workspace.
For this task we now provide a shortcut to import Dart projects from the &lt;em&gt;Import Project&lt;/em&gt; context menu entry.&lt;/p&gt;
&lt;p&gt;Currently it simply opens the &lt;em&gt;Projects from Folder or Archive&lt;/em&gt; wizard.
This wizard however allows to specify a &lt;code&gt;ProjectConfigurator&lt;/code&gt; that takes care of selecting folders that should be imported as a project.
In our own configurator we traverse all children and look for &lt;code&gt;pubspec.yaml&lt;/code&gt; files.
Every folder that contains such a file is considered to be a separate project.&lt;/p&gt;
&lt;h1&gt;Eclipse light theme for TM4E&lt;/h1&gt;
&lt;p&gt;TM4E can be used to apply different syntax highlighting to the editor.
We provide a configuration file that specifies how certain words inside the editor should look.
It also gives the option to select what theme to use.
There are different light and dark themes available, like &lt;em&gt;Solarized Light&lt;/em&gt; or the classic Eclipse Java editor theme.&lt;/p&gt;
&lt;p&gt;I provided a patch to add some missing styles to the latter to make it look more like the classic theme.
This is what it looks like now:
&lt;img alt=&quot;Eclipse light theme&quot; src=&quot;https://jonas-jonas.dev/assets/img/eclipse-light-new.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/eclipse/tm4e/pull/215&quot;&gt;eclipse/tm4e#215&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Wrap up&lt;/h1&gt;
&lt;p&gt;With two weeks to go until the end of Summer of Code 2019 there is not that much left to do for me to fulfill my proposed timeline.
One major thing that is still missing are automated tests.
I have started work on it now and will work on that for the last two weeks.&lt;/p&gt;
&lt;p&gt;This will also be my last update post on Summer of Code as the next post will be a summary of my whole summer.&lt;/p&gt;</description>
	<pubDate>Sat, 03 Aug 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Andrey Loskutov: Pimping the status line</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-342159971341432126.post-6299947500212529376</guid>
	<link>http://javaclipse.blogspot.com/2019/07/pimping-status-line.html</link>
	<description>&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot;&gt;This weekend I've tried to write a &lt;a href=&quot;https://git.eclipse.org/r/#/c/146706/1/org.eclipse.jdt.debug.tests/tests/org/eclipse/jdt/debug/tests/ui/DebugHoverTests.java@169&quot;&gt;test for Eclipse debug hover&lt;/a&gt;, that required to know exact position of the selected text, somewhere in the middle of the editor. If you think this is easy - go figure out in Eclipse at which offset is your cursor - surprisingly there is no obvious way to do so!&lt;br /&gt;&lt;br /&gt;So I've used some 3rd party editor that was kind enough to provide this information in the status line. Why shouldn't this be offered by Eclipse itself?&lt;br /&gt;&lt;br /&gt;So I've created an &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=549604&quot;&gt;enhancement request&lt;/a&gt; and &lt;a href=&quot;https://git.eclipse.org/r/146707&quot;&gt;pushed patch&lt;/a&gt; that adds both features to Eclipse. By default, status line shows now cursor position, and if editor has something selected, the number of characters in the selection (works also in block selection mode). Both new additions to the status line can be disabled via preferences.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-6JdWZY0NQgA/XT3Q7KD_0AI/AAAAAAAAlKk/Dh05jqydDNwY56E5IVTB4uFlb8JZ8-kfACLcBGAs/s1600/selection.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;261&quot; src=&quot;https://1.bp.blogspot.com/-6JdWZY0NQgA/XT3Q7KD_0AI/AAAAAAAAlKk/Dh05jqydDNwY56E5IVTB4uFlb8JZ8-kfACLcBGAs/s640/selection.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt; If there is no selection, cursor offset is shown:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-xBdqrKMSgrQ/XT3Q83kAOTI/AAAAAAAAlKo/7wOG4lsXhUEv7SdBwc4XVMtXdowiHzFtgCLcBGAs/s1600/cursor_offset.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;258&quot; src=&quot;https://1.bp.blogspot.com/-xBdqrKMSgrQ/XT3Q83kAOTI/AAAAAAAAlKo/7wOG4lsXhUEv7SdBwc4XVMtXdowiHzFtgCLcBGAs/s640/cursor_offset.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Both new additions to the status line can be disabled via preferences:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-KKk69IFHhCo/XT3Q_qDD2lI/AAAAAAAAlKs/49iYXizuftoP6Lpi-bGG-IEQfKzd1iyqACLcBGAs/s1600/preferences.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;640&quot; src=&quot;https://1.bp.blogspot.com/-KKk69IFHhCo/XT3Q_qDD2lI/AAAAAAAAlKs/49iYXizuftoP6Lpi-bGG-IEQfKzd1iyqACLcBGAs/s640/preferences.png&quot; width=&quot;420&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=549604&quot;&gt;WDYT?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Sun, 28 Jul 2019 16:50:05 +0000</pubDate>
	<author>noreply@blogger.com (Andrey Loskutov)</author>
</item>
<item>
	<title>Andrey Loskutov: Incompatible Eclipse workspaces</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-342159971341432126.post-3852949671843488587</guid>
	<link>http://javaclipse.blogspot.com/2019/05/incompatible-eclipse-workspaces.html</link>
	<description>&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;Eclipse has mechanism to recognize if the workspace to be used is created with older Eclipse version.&lt;br /&gt;In such case, to be safe, Eclipse shows dialog like:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-bzIVjTZG780/XN0sZj-ZbJI/AAAAAAAAjw0/FA3w7k-vlLwAkttD9rsM3asrAl0w8cW-ACLcBGAs/s1600/old_workspace_warning.png&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://2.bp.blogspot.com/-bzIVjTZG780/XN0sZj-ZbJI/AAAAAAAAjw0/FA3w7k-vlLwAkttD9rsM3asrAl0w8cW-ACLcBGAs/s1600/old_workspace_warning.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;As of today (Eclipse 4.12 M1), if you click on &quot;Cancel&quot; button, Eclipse will behave differently, depending on the use cases &quot;history&quot;:&lt;br /&gt;&lt;br /&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;A. If the workbench was not started yet:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;without&lt;/b&gt; &quot;-data&quot; argument and user selects incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer workspace selection dialog.&lt;/li&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;with&lt;/b&gt; &quot;-data&quot; argument pointing to the incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will &lt;span style=&quot;color: red;&quot;&gt;terminate&lt;/span&gt; (instead of offering to select another workspace).&lt;/li&gt;&lt;/ol&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;B. If the workbench was started:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;If user selects &lt;b&gt;compatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts fine.&lt;/li&gt;&lt;li&gt;If user selects &lt;b&gt;incompatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts, shows the &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will &lt;span style=&quot;color: red;&quot;&gt;terminate&lt;/span&gt; (instead of offering to select another workspace).&lt;/li&gt;&lt;/ol&gt;This behavior is inconvenient (at least), so we have &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=538830&quot;&gt;bug 538830&lt;/a&gt;.&lt;br /&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Fix Proposal #1&lt;/h4&gt;The proposal is, that &lt;b&gt;independently&lt;/b&gt; on the way Eclipse was started, if user clicks on the &quot;Cancel&quot; button in the &quot;Older Workspace Version&quot; dialog, we &lt;b&gt;always&lt;/b&gt; show the default workspace selection dialog (instead of termination):&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-U2VeCqT6SEk/XN0uJV2m7EI/AAAAAAAAjxA/D5Kdw_JQKiMOmuzCZmfDJ56abEwLBMXSgCLcBGAs/s1600/workspace_selection_dialog.png&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://2.bp.blogspot.com/-U2VeCqT6SEk/XN0uJV2m7EI/AAAAAAAAjxA/D5Kdw_JQKiMOmuzCZmfDJ56abEwLBMXSgCLcBGAs/s1600/workspace_selection_dialog.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;In this dialog above user has two choices: launch any workspace or finally terminate Eclipse via &quot;Cancel&quot;.&lt;br /&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Proposal #1 Matrix&lt;/h4&gt;&lt;h4&gt;A1. If the workbench was not started yet:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;with or without&lt;/b&gt; &quot;-data&quot; argument and user selects incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer workspace selection dialog. To terminate Eclipse, user has to click &quot;Cancel&quot; in the workspace selection dialog.&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;B1. If the workbench was started:&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;If user selects &lt;b&gt;compatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts fine.&lt;/li&gt;&lt;li&gt;If user selects &lt;b&gt;incompatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts, shows the &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer to select another workspace.&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h4&gt;Fix Proposal #2&lt;/h4&gt;The proposal is, that &lt;b&gt;depending&lt;/b&gt; on the way Eclipse was started, if user clicks on the &quot;Cancel&quot; button in the &quot;Older Workspace Version&quot; dialog, we &lt;b&gt;may or may not&lt;/b&gt; show the default workspace selection dialog. So what happens after &quot;Older Workspace Version&quot; dialog is shown is &lt;b&gt;not predictable&lt;/b&gt; by just looking on this dialog - it depends on the &lt;b&gt;history&lt;/b&gt; of this dialog.&lt;br /&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Proposal #2 Matrix&lt;/h4&gt;&lt;h4&gt;A2. If the workbench was not started yet:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;without&lt;/b&gt; &quot;-data&quot; argument and user selects incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer workspace selection dialog.&lt;/li&gt;&lt;li&gt;If Eclipse was started &lt;b&gt;with&lt;/b&gt; &quot;-data&quot; argument pointing to the incompatible workspace, Eclipse will show &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will &lt;span style=&quot;color: red;&quot;&gt;terminate&lt;/span&gt; (instead of offering to select another workspace).&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;B2. If the workbench was started:&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;If user selects &lt;b&gt;compatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts fine.&lt;/li&gt;&lt;li&gt;If user selects &lt;b&gt;incompatible&lt;/b&gt; workspace in the &quot;File -&amp;gt; Switch Workspace&quot; dialog, Eclipse restarts, shows the &quot;Older Workspace Version&quot; dialog above and by clicking on &quot;Cancel&quot; it will offer to select another workspace.&lt;/li&gt;&lt;/ol&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Similarities&lt;/h4&gt;&lt;div&gt;Both proposals fix second bullet in the use case B2.&lt;/div&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Differences&lt;/h4&gt;&lt;div&gt;We see that Proposal #1 has no second bullet for A1 case, and is always consistent in the way how UI behaves after clicking on &quot;Cancel&quot; in the &quot;Older Workspace Version&quot; dialog. Proposal #2 fixes only B2 use case, inconsistency in UI behavior for the second part of A1 use case remains.&lt;/div&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Technical (biased) notes:&lt;/h4&gt;&lt;ol style=&quot;text-align: left;&quot;&gt;&lt;li&gt;Proposal #1 is implemented and the &lt;a href=&quot;https://git.eclipse.org/r/142139&quot;&gt;patch is available&lt;/a&gt;, along with the &lt;a href=&quot;https://bugs.eclipse.org/bugs/attachment.cgi?id=278605&quot;&gt;demo video&lt;/a&gt;. To test it live, one has to build Eclipse - but here I have &lt;a href=&quot;https://drive.google.com/drive/folders/0B7vALkuico9heWlDMlhfRGlRbm8&quot;&gt;SDK binaries with the patch applied&lt;/a&gt;. The patch is relatively simple and only affects Platform UI internal code.&lt;/li&gt;&lt;li&gt;Proposal #2 is not implemented yet. I assume that this will require more work compared to the patch #1. We will need a new command line argument for Eclipse to differentiate between &quot;&lt;i&gt;I want you not to terminate even if incompatible -data is supplied because I'm calling you from UI&lt;/i&gt;&quot; and &quot;&lt;i&gt;Please terminate if incompatible data is supplied because I'm calling you from the command line&lt;/i&gt;&quot;. A new command line argument for Eclipse means not just Platform UI internal change, but also requires changes in the Equinox and Help, and also means public interface change.&lt;/li&gt;&lt;/ol&gt;&lt;br /&gt;&lt;h4&gt;Question to the masses!&lt;/h4&gt;&lt;div&gt;&lt;b&gt;&lt;span style=&quot;color: red; font-size: large;&quot;&gt;We want to know your opinion - which proposal should be implemented?&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Please reply here or on the &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=538830&quot;&gt;bug 538830&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Update:&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;This version was implemented and available in 4.13 M1:&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-oJMooR48pR8/XT3OfYIFEaI/AAAAAAAAlKY/xnEhIZt_aYACFYd8N9LhLQKkJncs5nsoQCLcBGAs/s1600/workspace_selection_dialog1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://1.bp.blogspot.com/-oJMooR48pR8/XT3OfYIFEaI/AAAAAAAAlKY/xnEhIZt_aYACFYd8N9LhLQKkJncs5nsoQCLcBGAs/s1600/workspace_selection_dialog1.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Sun, 28 Jul 2019 16:35:08 +0000</pubDate>
	<author>noreply@blogger.com (Andrey Loskutov)</author>
</item>
<item>
	<title>PapyrusUML: Papyrus SysML 1.6  available from the Eclipse Marketplace.</title>
	<guid isPermaLink="false">http://papyrusuml.wordpress.com/?p=2364</guid>
	<link>https://papyrusuml.wordpress.com/2019/07/12/papyrus-sysml-1-6-available-from-the-eclipse-marketplace/</link>
	<description>&lt;p&gt;I should have mentioned, yesterday, that Papyrus SysML 1.6 is available from the Eclipse market place at &lt;a href=&quot;https://marketplace.eclipse.org/content/papyrus-sysml-16&quot;&gt;https://marketplace.eclipse.org/content/papyrus-sysml-16&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;/p&gt;</description>
	<pubDate>Fri, 12 Jul 2019 14:03:10 +0000</pubDate>
</item>
<item>
	<title>Christian Pontesegger: Building UIs with EASE</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-3460102793186140898.post-390668608738243831</guid>
	<link>http://codeandme.blogspot.com/2019/07/building-uis-with-ease.html</link>
	<description>You probably used &lt;a href=&quot;https://www.eclipse.org/ease/&quot; target=&quot;_blank&quot;&gt;EASE&lt;/a&gt; before to automate daily tasks in your IDE or to &lt;a href=&quot;http://codeandme.blogspot.com/2014/12/ease-scripts-conquer-ui.html&quot; target=&quot;_blank&quot;&gt;augment toolbars and menus&lt;/a&gt; with custom functionality. But so far scripts could not be used to build UIs. This changed with the recent contribution of the &lt;i&gt;UI Builder&lt;/i&gt; module.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;What it is all about&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;The &lt;i&gt;UI Builder&lt;/i&gt; module allows to create views and dialogs by pure script code in your IDE. It is great for custom views that developers do not want to put into their products, for rapid prototyping and even for mocking.&lt;br /&gt;&lt;br /&gt;The aim of EASE is to hide layout complexity as much as possible and provide a simple, yet flexible way to implement typical UI tasks.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Example 1: Input Form&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;We will start by creating a simple input form for address data.&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;loadModule(&quot;/System/UI Builder&quot;);&lt;br /&gt;createView(&quot;Create Contact&quot;);&lt;br /&gt;&lt;br /&gt;setColumnCount(2);&lt;br /&gt;createLabel(&quot;First Name:&quot;);&lt;br /&gt;var txtFirstName = createText();&lt;br /&gt;createLabel(&quot;Last Name:&quot;);&lt;br /&gt;var txtLastName = createText();&lt;br /&gt;&lt;/pre&gt;This snippet will create a dynamic view as shown below:&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-brN2-68HYis/XSNop8MmpuI/AAAAAAAABHQ/iEPADCmZMakR19LW21MSDgjGPj7gmKjtwCLcBGAs/s1600/script_form.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;155&quot; src=&quot;https://1.bp.blogspot.com/-brN2-68HYis/XSNop8MmpuI/AAAAAAAABHQ/iEPADCmZMakR19LW21MSDgjGPj7gmKjtwCLcBGAs/s400/script_form.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;The renderer used will apply a &lt;a href=&quot;https://www.eclipse.org/articles/Article-Understanding-Layouts/Understanding-Layouts.htm&quot; target=&quot;_blank&quot;&gt;GridLayout&lt;/a&gt;. By setting the &lt;i&gt;columnCount&lt;/i&gt; to 2 we may simply add our elements without providing any additional layout information - a simple way to create basic layouts.&lt;br /&gt;&lt;br /&gt;If needed EASE provides more control by providing layout information when creating components:&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;createView(&quot;Create Contact&quot;);&lt;br /&gt;createLabel(&quot;First Name:&quot;, &quot;1/1 &amp;gt;x&quot;);&lt;br /&gt;var txtFirstName = createText(&quot;2-4/1 o!&quot;);&lt;br /&gt;createLabel(&quot;Last Name:&quot;, &quot;1/2 &amp;gt;x&quot;);&lt;br /&gt;var txtLastName = createText(&quot;2-4/2 o!&quot;);&lt;br /&gt;&lt;/pre&gt;Creates the same view as above, but now with detailed layout information.&lt;br /&gt;As an example &lt;i&gt;&quot;1/2 &amp;gt;x&quot;&lt;/i&gt; means: first column, second row, horizontal align right, vertical align middle. A full documentation on the syntax is provided in the module documentation (Hover over the &lt;i&gt;UI Builder&lt;/i&gt; module in the &lt;i&gt;Modules Explorer&lt;/i&gt; view).&lt;br /&gt;&lt;br /&gt;Now lets create a combo viewer to select a country for the address:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;cmbCountry = createComboViewer([&quot;Austria&quot;, &quot;Germany&quot;, &quot;India&quot;, &quot;USA&quot;])&lt;br /&gt;&lt;/pre&gt;Simple, isn't it?&lt;br /&gt;&lt;br /&gt;So far we did not need to react on any of our UI elements. Next step is to create a button which needs some kind of callback action:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;createButton(&quot;Save 1&quot;, 'print(&quot;you hit the save button&quot;)')&lt;br /&gt;createButton(&quot;Save 2&quot;, saveAddress)&lt;br /&gt;&lt;br /&gt;function saveAddress() {&lt;br /&gt; print(&quot;This is the save method&quot;);&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;The first version of a button adds the callback code as string argument. When the button gets pressed, the callback code will be executed. You may call any script code that the engine is capable of interpreting.&lt;br /&gt;&lt;br /&gt;The second version looks a bit cleaner, as it defines a function &lt;i&gt;saveAddress() &lt;/i&gt;which is called on a button click. Note that we provide a function reference to &lt;i&gt;createButton()&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree/Demos/UI%20Builder%20Examples/AddressBook/Address%20Input.js&quot; target=&quot;_blank&quot;&gt;View the full example&lt;/a&gt; of this script on our &lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree&quot; target=&quot;_blank&quot;&gt;script repository&lt;/a&gt;. In addition to some more layouting it also contains a working implementation of the save action to store addresses as JSON data files.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/--lzn_mY5Qgk/XSOChZd5CcI/AAAAAAAABHg/m7V3kv57g4Y-a3oHdQEhIBd44Pq6KaESQCLcBGAs/s1600/script_form2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;211&quot; src=&quot;https://1.bp.blogspot.com/--lzn_mY5Qgk/XSOChZd5CcI/AAAAAAAABHg/m7V3kv57g4Y-a3oHdQEhIBd44Pq6KaESQCLcBGAs/s400/script_form2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;&lt;u&gt;Interacting with SWT controls&lt;/u&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;The saveAddress() method needs to read data from the input fields of our form. This could be done using&lt;/div&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;var firstName = txtFirstName.getText();&lt;/pre&gt;Unfortunately SWT Controls can only be queried in the UI thread, while the script engine is executed in its own thread. To move code execution to the UI thread, the UI module provides a function executeUI(). By default this functionality is disabled as a bad script executed in the UI thread might stall your Eclipse IDE. To enable it you need to set a checkbox in &lt;i&gt;Preferences/Scripting&lt;/i&gt;. The full call then looks like this:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;loadModule(&quot;/System/UI&quot;)&lt;br /&gt;var firstName = executeUI('txtFirstName.getText();');&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Example 2: A viewer for our phone numbers&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Now that we are able to create some sample data, we also need a viewer for our phone numbers. Say we are able to load all our addresses into an array, the only thing we need is a table viewer to visualize our entries. Following 2 lines will do the job:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;var addresses = readAddresses();&lt;br /&gt;var tableViewer = createTableViewer(addresses)&lt;br /&gt;&lt;/pre&gt;Where &lt;i&gt;readAddresses()&lt;/i&gt; collects our &lt;i&gt;*.address&lt;/i&gt; files and stores them into an array.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-68LKx5DHLtI/XSOGL7c-VsI/AAAAAAAABHs/sTsk1alaXqMcfAsazcqoIM7gam9lEw1tACLcBGAs/s1600/phonebook_1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;135&quot; src=&quot;https://1.bp.blogspot.com/-68LKx5DHLtI/XSOGL7c-VsI/AAAAAAAABHs/sTsk1alaXqMcfAsazcqoIM7gam9lEw1tACLcBGAs/s400/phonebook_1.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;So the viewer works, however we need to define how our columns shall be rendered.&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;createViewerColumn(tableViewer, &quot;Name&quot;, createLabelProvider(&quot;getProviderElement().firstName + ' ' + getProviderElement().lastName&quot;))&lt;br /&gt;createViewerColumn(tableViewer, &quot;Phone&quot;, createLabelProvider(&quot;getProviderElement().phone&quot;))&lt;br /&gt;&lt;/pre&gt;Whenever a callback needs a viewer element, getProviderElement() holds the actual element.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-Y62uH5tW7DY/XSOH3xupNrI/AAAAAAAABH4/nc-_VNd0Zq0zqyNDTvoj3qKzbOtZOc3pwCLcBGAs/s1600/phonebook_2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;135&quot; src=&quot;https://1.bp.blogspot.com/-Y62uH5tW7DY/XSOH3xupNrI/AAAAAAAABH4/nc-_VNd0Zq0zqyNDTvoj3qKzbOtZOc3pwCLcBGAs/s400/phonebook_2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;We are done! 3 lines of code for a TableViewer does not sound too bad, right? Again a &lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree/Demos/UI%20Builder%20Examples/AddressBook/List.js&quot; target=&quot;_blank&quot;&gt;full example&lt;/a&gt; is available on our script repository. It automatically loads &lt;i&gt;*.address&lt;/i&gt; files from your workspace and displays them in the view.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;b&gt;&lt;u&gt;Example 3: A workspace viewer&lt;/u&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;We had a &lt;i&gt;TableViewer&lt;/i&gt; before, now lets try a &lt;i&gt;TreeViewer&lt;/i&gt;. As a tree needs structure, we need to provide a callback to calculate child elements from a given parent:&lt;/div&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;var viewer = createTreeViewer(getWorkspace().getProjects(), getChildren);&lt;br /&gt;&lt;br /&gt;function getChildren() {&lt;br /&gt; if (getProviderElement() instanceof org.eclipse.core.resources.IContainer)&lt;br /&gt;  return getProviderElement().members();&lt;br /&gt; &lt;br /&gt; return null;&lt;br /&gt;}&lt;/pre&gt;So simple! The &lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree/Demos/UI%20Builder%20Examples/Project%20Info%20Viewer.js&quot; target=&quot;_blank&quot;&gt;full example&lt;/a&gt; looks like this:&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-2MQ7dKZ66Ss/XSOJgJTpDsI/AAAAAAAABIE/29WKkpR8C7MMNsg_P2MVCcj2qZD46KNKQCLcBGAs/s1600/project_viewer.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://1.bp.blogspot.com/-2MQ7dKZ66Ss/XSOJgJTpDsI/AAAAAAAABIE/29WKkpR8C7MMNsg_P2MVCcj2qZD46KNKQCLcBGAs/s1600/project_viewer.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;b&gt;&lt;u&gt;Example 4: Math function viewer&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The last example demonstrates how to add a custom &lt;i&gt;Control&lt;/i&gt; to a view.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-_rcEjTB8-xI/XSOKb3F8QCI/AAAAAAAABIM/f8-GYaCBZmMrMkw4VBFso6qqvkPX3vOFwCLcBGAs/s1600/functions.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;304&quot; src=&quot;https://1.bp.blogspot.com/-_rcEjTB8-xI/XSOKb3F8QCI/AAAAAAAABIM/f8-GYaCBZmMrMkw4VBFso6qqvkPX3vOFwCLcBGAs/s640/functions.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;For plotting we use the Charting module that is shipped with EASE. The &lt;a href=&quot;https://git.eclipse.org/c/ease/org.eclipse.ease.scripts.git/tree/Demos/UI%20Builder%20Examples/Plot%20function.js&quot; target=&quot;_blank&quot;&gt;source code&lt;/a&gt; should be pretty much self explanatory.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Some Tips &amp;amp; Tricks&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Layouting is dynamic.&lt;br /&gt;Unlike the Java &lt;i&gt;GridLayout&lt;/i&gt; you do not need to fill all cells of your layout. The EASE renderer takes care to automatically fill empty cells with placeholders&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Elements can be replaced.&lt;br /&gt;If you use coordinates when creating controls, you may easily replace a given control by another one. This simplifies the process of layouting (eg if you experience with alignments) and even allows a view to dynamically change its components depending on some external data/events&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Full control.&lt;br /&gt;While some methods from SWT do not have a corresponding script function, still all SWT calls may be used as the &lt;i&gt;create*&lt;/i&gt; methods expose the underlying SWT instances.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Layout help.&lt;br /&gt;To simplify layouting use the &lt;i&gt;showGrid()&lt;/i&gt; function. It displays cell borders that help you to see row/column borders.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Mon, 08 Jul 2019 18:54:52 +0000</pubDate>
	<author>noreply@blogger.com (Christian Pontesegger)</author>
</item>

</channel>
</rss>
